import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test001");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        Point point47 = new Point((double) ' ', (double) 100L);
        double d48 = point47.x;
        double d49 = point47.y;
        double d50 = point47.x;
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Line line61 = parabola60.FindCenter();
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Parabola parabola71 = new Parabola(point62, point63, line66);
        Line line72 = parabola71.FindCenter();
        boolean b74 = parabola71.equals((java.lang.Object) 0.0f);
        boolean b75 = parabola60.equals((java.lang.Object) b74);
        Point point78 = new Point((double) ' ', (double) 100L);
        parabola60.vertex = point78;
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        Point point83 = null;
        Point point84 = null;
        Line line85 = new Line(point83, point84);
        boolean b86 = line82.parallel(line85);
        Point point87 = null;
        Line line88 = line82.rotate(point87);
        Parabola parabola89 = new Parabola(point47, point78, line82);
        line37.point2 = point78;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line69 and line43", line69.equals(line43) ? line69.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test002");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        Point point25 = null;
        line23.point1 = point25;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        boolean b34 = line23.perpendicular(line29);
        Point point35 = line23.point1;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Parabola parabola45 = new Parabola(point36, point37, line40);
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Parabola parabola55 = new Parabola(point46, point47, line50);
        Point point56 = parabola55.vertex;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        Point point64 = null;
        line62.point1 = point64;
        parabola55.directrix = line62;
        Point point67 = null;
        Line line68 = line62.rotate(point67);
        boolean b69 = line40.perpendicular(line68);
        boolean b70 = line23.parallel(line68);
        boolean b71 = line5.perpendicular(line68);
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.x;
        double d76 = point74.y;
        double d77 = point74.x;
        line68.point2 = point74;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola45 and parabola55", parabola45.equals(parabola55) ? parabola45.hashCode() == parabola55.hashCode() : true);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test003");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        double d25 = point20.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line11", line5.equals(line11) ? line5.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test004");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = line5.point1;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Point point17 = null;
        line15.point1 = point17;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        boolean b26 = line15.perpendicular(line21);
        Point point27 = line15.point1;
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.x;
        line15.point2 = point30;
        Point point35 = line15.point1;
        Point point36 = line15.point2;
        line5.point1 = point36;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line15", line21.equals(line15) ? line21.hashCode() == line15.hashCode() : true);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test005");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        parabola19.directrix = line26;
        Point point31 = null;
        Line line32 = line26.rotate(point31);
        boolean b33 = line4.perpendicular(line32);
        Point point36 = new Point((double) ' ', (double) 100L);
        double d37 = point36.x;
        double d38 = point36.y;
        line4.point1 = point36;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola19 and parabola9", parabola19.equals(parabola9) ? parabola19.hashCode() == parabola9.hashCode() : true);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test006");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        point20.x = 32.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line5", line2.equals(line5) ? line2.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test007");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        boolean b46 = line35.perpendicular(line41);
        Point point47 = line35.point1;
        boolean b48 = line16.parallel(line35);
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Parabola parabola69 = new Parabola(point60, point61, line64);
        Line line70 = parabola69.FindCenter();
        boolean b72 = parabola69.equals((java.lang.Object) 0.0f);
        boolean b73 = parabola58.equals((java.lang.Object) b72);
        Point point76 = new Point((double) ' ', (double) 100L);
        parabola58.vertex = point76;
        line16.point2 = point76;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola9 and parabola69", parabola9.equals(parabola69) ? parabola9.hashCode() == parabola69.hashCode() : true);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test008");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        boolean b8 = vector2.equals((java.lang.Object) (-1.0f));
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        Point point16 = null;
        line14.point1 = point16;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        boolean b25 = line14.perpendicular(line20);
        Point point26 = line14.point1;
        Point point27 = line14.point1;
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.y;
        Vector vector33 = new Vector(point30, (java.lang.Integer) 0);
        point30.Mirror("");
        line14.point2 = point30;
        vector2.origin = point30;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line20 and line14", line20.equals(line14) ? line20.hashCode() == line14.hashCode() : true);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test009");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Line line3 = new Line(point1, point2);
        Point point4 = null;
        Point point5 = null;
        Line line6 = new Line(point4, point5);
        boolean b7 = line3.parallel(line6);
        Point point8 = null;
        line6.point1 = point8;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        boolean b17 = line6.perpendicular(line12);
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        boolean b25 = line12.perpendicular(line23);
        Point point26 = null;
        Vector vector28 = new Vector(point26, (java.lang.Integer) (-1));
        int i29 = vector28.degrees;
        Point point30 = null;
        vector28.origin = point30;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        boolean b61 = parabola58.equals((java.lang.Object) 0.0f);
        boolean b62 = parabola47.equals((java.lang.Object) b61);
        Point point65 = new Point((double) ' ', (double) 100L);
        parabola47.vertex = point65;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        Parabola parabola76 = new Parabola(point34, point65, line69);
        vector28.origin = point65;
        line23.point1 = point65;
        Line line79 = new Line(point0, point65);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line20 and line23", line20.equals(line23) ? line20.hashCode() == line23.hashCode() : true);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test010");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = line2.point1;
        Point point10 = new Point((double) ' ', (double) 100L);
        point10.y = 10.0d;
        Point point15 = new Point((double) ' ', (double) 100L);
        double d16 = point15.x;
        double d17 = point15.y;
        double d18 = point15.x;
        Line line19 = new Line(point10, point15);
        line2.point2 = point10;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line5", line19.equals(line5) ? line19.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test011");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point19 = new Point((double) ' ', (double) 100L);
        double d20 = point19.x;
        double d21 = point19.y;
        double d22 = point19.y;
        point19.Mirror("");
        point19.y = 100.0f;
        Line line27 = line11.rotate(point19);
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Point point43 = parabola42.vertex;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        parabola42.directrix = line49;
        point30.Mirror(line49);
        Point point55 = null;
        Vector vector57 = new Vector(point55, (java.lang.Integer) (-1));
        Point point58 = vector57.origin;
        boolean b60 = vector57.equals((java.lang.Object) (byte) 1);
        Point point61 = vector57.origin;
        boolean b63 = vector57.equals((java.lang.Object) (-1.0f));
        Point point64 = vector57.origin;
        Point point65 = null;
        Point point66 = null;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Parabola parabola74 = new Parabola(point65, point66, line69);
        Line line75 = parabola74.FindCenter();
        Line line76 = parabola74.FindCenter();
        Point point79 = new Point((double) ' ', (double) 100L);
        double d80 = point79.x;
        double d81 = point79.y;
        double d82 = point79.x;
        parabola74.vertex = point79;
        vector57.origin = point79;
        line49.point2 = point79;
        line27.point2 = point79;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line69 and line49", line69.equals(line49) ? line69.hashCode() == line49.hashCode() : true);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test012");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point13 = new Point((double) ' ', (double) 100L);
        double d14 = point13.y;
        parabola9.focus = point13;
        Point point16 = null;
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        Parabola parabola25 = new Parabola(point16, point17, line20);
        Line line26 = parabola25.FindCenter();
        Line line27 = parabola25.FindCenter();
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.x;
        parabola25.vertex = point30;
        Vector vector36 = new Vector(point30, (java.lang.Integer) 1);
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Point point47 = parabola46.focus;
        Point point50 = new Point((double) ' ', (double) 100L);
        double d51 = point50.y;
        parabola46.focus = point50;
        Line line53 = new Line(point30, point50);
        Line line54 = new Line(point13, point30);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line53", line7.equals(line53) ? line7.hashCode() == line53.hashCode() : true);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test013");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Vector vector47 = new Vector(point42, (java.lang.Integer) 0);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line45", line7.equals(line45) ? line7.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test014");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        line28.point1 = point30;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        boolean b39 = line28.perpendicular(line34);
        Point point40 = line28.point1;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        line28.point2 = point43;
        boolean b48 = line16.perpendicular(line28);
        Point point49 = line16.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line34 and line28", line34.equals(line28) ? line34.hashCode() == line28.hashCode() : true);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test015");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        parabola19.directrix = line26;
        Point point31 = null;
        Line line32 = line26.rotate(point31);
        boolean b33 = line4.perpendicular(line32);
        Point point34 = line4.point1;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Point point45 = parabola44.vertex;
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line48.parallel(line51);
        Point point53 = null;
        line51.point1 = point53;
        parabola44.directrix = line51;
        Point point56 = null;
        Line line57 = line51.rotate(point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Point point65 = null;
        Line line66 = line60.rotate(point65);
        boolean b67 = line57.perpendicular(line66);
        Point point70 = new Point((double) ' ', (double) 100L);
        Line line71 = line57.rotate(point70);
        line4.point1 = point70;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola19 and parabola9", parabola19.equals(parabola9) ? parabola19.hashCode() == parabola9.hashCode() : true);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test016");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point26 = new Point((double) ' ', (double) 100L);
        point26.y = 10.0d;
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.x;
        Line line35 = new Line(point26, point31);
        Line line36 = line22.rotate(point26);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line36 and line35", line36.equals(line35) ? line36.hashCode() == line35.hashCode() : true);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test017");
        Point point0 = null;
        Point point3 = new Point((double) (short) 10, (double) 100.0f);
        Line line4 = new Line(point0, point3);
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Parabola parabola16 = new Parabola(point3, point5, line10);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line13 and line4", line13.equals(line4) ? line13.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test018");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.y;
        Vector vector27 = new Vector(point24, (java.lang.Integer) 0);
        parabola9.vertex = point24;
        parabola9.Mirror();
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        boolean b46 = line35.perpendicular(line41);
        Point point47 = line35.point1;
        Point point48 = line35.point1;
        Point point51 = new Point((double) (byte) -1, (-1.0d));
        double d52 = point51.x;
        line35.point1 = point51;
        parabola9.focus = point51;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line35", line4.equals(line35) ? line4.hashCode() == line35.hashCode() : true);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test019");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = line2.point1;
        Point point10 = new Point((double) '#', (double) ' ');
        line2.point1 = point10;
        double d12 = point10.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line2", line5.equals(line2) ? line5.hashCode() == line2.hashCode() : true);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test020");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Line line12 = parabola9.directrix;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Parabola parabola48 = new Parabola(point39, point40, line43);
        Point point49 = parabola48.vertex;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Point point57 = null;
        line55.point1 = point57;
        parabola48.directrix = line55;
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        Line line70 = line64.rotate(point69);
        boolean b71 = line61.perpendicular(line70);
        boolean b72 = line18.perpendicular(line70);
        parabola9.directrix = line18;
        Point point76 = new Point((double) ' ', (double) 100L);
        double d77 = point76.y;
        Vector vector79 = new Vector(point76, (java.lang.Integer) 0);
        point76.Mirror("");
        boolean b82 = parabola9.equals((java.lang.Object) "");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line18", line4.equals(line18) ? line4.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test021");
        Point point2 = new Point((double) ' ', (double) 100L);
        point2.y = 10.0d;
        Point point7 = new Point((double) ' ', (double) 100L);
        double d8 = point7.x;
        double d9 = point7.y;
        double d10 = point7.x;
        Line line11 = new Line(point2, point7);
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Point point22 = parabola21.vertex;
        parabola21.Mirror();
        Line line24 = parabola21.directrix;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        boolean b41 = line30.perpendicular(line36);
        Point point42 = line30.point1;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        line30.point2 = point45;
        Point point50 = line30.point1;
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Point point61 = parabola60.vertex;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        line67.point1 = point69;
        parabola60.directrix = line67;
        Point point72 = null;
        Line line73 = line67.rotate(point72);
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Point point81 = null;
        Line line82 = line76.rotate(point81);
        boolean b83 = line73.perpendicular(line82);
        boolean b84 = line30.perpendicular(line82);
        parabola21.directrix = line30;
        point7.Mirror(line30);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line82 and line11", line82.equals(line11) ? line82.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test022");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        boolean b41 = line30.perpendicular(line36);
        Point point42 = line30.point1;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        line30.point2 = point45;
        Point point50 = line30.point1;
        Point point51 = line30.point2;
        Point point54 = new Point((double) '#', (double) ' ');
        double d55 = point54.x;
        line30.point2 = point54;
        boolean b57 = line22.perpendicular(line30);
        Point point58 = line22.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line30", line19.equals(line30) ? line19.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test023");
        Point point2 = new Point((double) (short) 10, (double) (short) -1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        boolean b9 = line5.parallel(line8);
        Point point10 = null;
        line8.point1 = point10;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        boolean b19 = line8.perpendicular(line14);
        Point point20 = line8.point1;
        Point point21 = line8.point1;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.y;
        Vector vector27 = new Vector(point24, (java.lang.Integer) 0);
        point24.Mirror("");
        line8.point2 = point24;
        Line line31 = new Line(point2, point24);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line8", line5.equals(line8) ? line5.hashCode() == line8.hashCode() : true);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test024");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Line line30 = parabola9.directrix;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Point point38 = null;
        line36.point1 = point38;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        boolean b47 = line36.perpendicular(line42);
        Point point48 = line36.point1;
        Point point51 = new Point((double) ' ', (double) 100L);
        double d52 = point51.x;
        double d53 = point51.y;
        double d54 = point51.x;
        line36.point2 = point51;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        double d61 = point58.y;
        point58.Mirror("");
        line36.point1 = point58;
        line30.point2 = point58;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line36", line45.equals(line36) ? line45.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test025");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Parabola parabola35 = new Parabola(point26, point27, line30);
        Point point36 = parabola35.vertex;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Point point44 = null;
        line42.point1 = point44;
        parabola35.directrix = line42;
        Point point47 = null;
        Line line48 = line42.rotate(point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Point point56 = null;
        Line line57 = line51.rotate(point56);
        boolean b58 = line48.perpendicular(line57);
        boolean b59 = line5.perpendicular(line57);
        boolean b61 = line57.equals((java.lang.Object) false);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line57 and line5", line57.equals(line5) ? line57.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test026");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        Line line8 = line5.rotate(point7);
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Parabola parabola18 = new Parabola(point9, point10, line13);
        Point point19 = parabola18.vertex;
        parabola18.Mirror();
        Point point23 = new Point((double) ' ', (double) 100L);
        double d24 = point23.x;
        double d25 = point23.y;
        double d26 = point23.y;
        point23.Mirror("");
        parabola18.vertex = point23;
        line5.point1 = point23;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line8", line16.equals(line8) ? line16.hashCode() == line8.hashCode() : true);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test027");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Line line48 = parabola46.FindCenter();
        Point point51 = new Point((double) ' ', (double) 100L);
        double d52 = point51.x;
        double d53 = point51.y;
        double d54 = point51.x;
        parabola46.vertex = point51;
        Vector vector57 = new Vector(point51, (java.lang.Integer) 1);
        line36.point2 = point51;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line44 and line36", line44.equals(line36) ? line44.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test028");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = parabola9.vertex;
        Point point12 = parabola9.vertex;
        Line line13 = parabola9.FindCenter();
        Point point16 = new Point((double) (byte) -1, (-1.0d));
        double d17 = point16.x;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        double d24 = point20.x;
        double d25 = point20.y;
        Line line26 = new Line(point16, point20);
        Point point27 = line26.point2;
        parabola9.vertex = point27;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line4", line26.equals(line4) ? line26.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test029");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = parabola14.vertex;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Point point23 = null;
        line21.point1 = point23;
        parabola14.directrix = line21;
        point2.Mirror(line21);
        Point point27 = null;
        Vector vector29 = new Vector(point27, (java.lang.Integer) (-1));
        Point point30 = vector29.origin;
        boolean b32 = vector29.equals((java.lang.Object) (byte) 1);
        Point point33 = vector29.origin;
        boolean b35 = vector29.equals((java.lang.Object) (-1.0f));
        Point point36 = vector29.origin;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Line line48 = parabola46.FindCenter();
        Point point51 = new Point((double) ' ', (double) 100L);
        double d52 = point51.x;
        double d53 = point51.y;
        double d54 = point51.x;
        parabola46.vertex = point51;
        vector29.origin = point51;
        line21.point2 = point51;
        boolean b59 = line21.equals((java.lang.Object) (short) 0);
        Point point62 = new Point((double) ' ', (double) 100L);
        point62.y = 10.0d;
        Point point67 = new Point((double) ' ', (double) 100L);
        double d68 = point67.x;
        double d69 = point67.y;
        double d70 = point67.x;
        Line line71 = new Line(point62, point67);
        Line line72 = line21.rotate(point62);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line71", line18.equals(line71) ? line18.hashCode() == line71.hashCode() : true);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test030");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        double d27 = point26.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line5", line2.equals(line5) ? line2.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test031");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Parabola parabola55 = new Parabola(point46, point47, line50);
        Line line56 = parabola55.FindCenter();
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Parabola parabola66 = new Parabola(point57, point58, line61);
        Line line67 = parabola66.FindCenter();
        boolean b69 = parabola66.equals((java.lang.Object) 0.0f);
        boolean b70 = parabola55.equals((java.lang.Object) b69);
        Point point73 = new Point((double) ' ', (double) 100L);
        parabola55.vertex = point73;
        point73.Mirror("hi!");
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        boolean b83 = line79.parallel(line82);
        Point point84 = null;
        line79.point1 = point84;
        Parabola parabola86 = new Parabola(point42, point73, line79);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line53 and line45", line53.equals(line45) ? line53.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test032");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        boolean b9 = line5.parallel(line8);
        Parabola parabola10 = new Parabola(point1, point2, line5);
        Line line11 = parabola10.FindCenter();
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Line line22 = parabola21.FindCenter();
        boolean b24 = parabola21.equals((java.lang.Object) 0.0f);
        boolean b25 = parabola10.equals((java.lang.Object) b24);
        Point point28 = new Point((double) ' ', (double) 100L);
        parabola10.vertex = point28;
        Vector vector31 = new Vector(point28, (java.lang.Integer) (-1));
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        Point point39 = null;
        line37.point1 = point39;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Parabola parabola50 = new Parabola(point41, point42, line45);
        Point point51 = parabola50.vertex;
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        line57.point1 = point59;
        parabola50.directrix = line57;
        Point point62 = null;
        Line line63 = line57.rotate(point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = null;
        line69.point1 = point71;
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        boolean b79 = line75.parallel(line78);
        boolean b80 = line69.perpendicular(line75);
        Point point81 = line69.point1;
        Point point84 = new Point((double) ' ', (double) 100L);
        double d85 = point84.x;
        double d86 = point84.y;
        double d87 = point84.x;
        line69.point2 = point84;
        boolean b89 = line57.perpendicular(line69);
        boolean b90 = line37.parallel(line69);
        point28.Mirror(line69);
        Line line92 = new Line(point0, point28);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line34 and line69", line34.equals(line69) ? line34.hashCode() == line69.hashCode() : true);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test033");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Line line34 = parabola33.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Line line45 = parabola44.FindCenter();
        boolean b47 = parabola44.equals((java.lang.Object) 0.0f);
        boolean b48 = parabola33.equals((java.lang.Object) b47);
        Point point51 = new Point((double) ' ', (double) 100L);
        parabola33.vertex = point51;
        line22.point1 = point51;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line28 and line16", line28.equals(line16) ? line28.hashCode() == line16.hashCode() : true);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test034");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        boolean b12 = parabola9.equals((java.lang.Object) 0.0f);
        Point point15 = new Point((double) '4', 100.0d);
        Point point18 = new Point((double) ' ', (double) 100L);
        double d19 = point18.x;
        double d20 = point18.y;
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Parabola parabola30 = new Parabola(point21, point22, line25);
        Point point31 = parabola30.vertex;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        Point point39 = null;
        line37.point1 = point39;
        parabola30.directrix = line37;
        point18.Mirror(line37);
        Line line43 = new Line(point15, point18);
        parabola9.focus = point18;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line43", line4.equals(line43) ? line4.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test035");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = line22.point1;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        Line line36 = parabola34.FindCenter();
        Point point39 = new Point((double) ' ', (double) 100L);
        double d40 = point39.x;
        double d41 = point39.y;
        double d42 = point39.x;
        parabola34.vertex = point39;
        Vector vector45 = new Vector(point39, (java.lang.Integer) 1);
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        boolean b60 = line56.parallel(line59);
        Parabola parabola61 = new Parabola(point52, point53, line56);
        Line line62 = parabola61.FindCenter();
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Parabola parabola72 = new Parabola(point63, point64, line67);
        Line line73 = parabola72.FindCenter();
        boolean b75 = parabola72.equals((java.lang.Object) 0.0f);
        boolean b76 = parabola61.equals((java.lang.Object) b75);
        Point point79 = new Point((double) ' ', (double) 100L);
        parabola61.vertex = point79;
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        Line line89 = line83.rotate(point88);
        Parabola parabola90 = new Parabola(point48, point79, line83);
        point79.Mirror("hi!");
        Line line93 = new Line(point39, point79);
        Line line94 = line22.rotate(point79);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line67 and line93", line67.equals(line93) ? line67.hashCode() == line93.hashCode() : true);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test036");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        point2.Mirror("");
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        Point point29 = null;
        Line line30 = line24.rotate(point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Point point38 = null;
        Line line39 = line33.rotate(point38);
        boolean b40 = line30.perpendicular(line39);
        Point point43 = new Point((double) ' ', (double) 100L);
        Line line44 = line30.rotate(point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        Line line53 = line47.rotate(point52);
        boolean b54 = line44.parallel(line53);
        boolean b55 = point2.equals((java.lang.Object) line53);
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Line line66 = parabola65.FindCenter();
        Line line67 = parabola65.FindCenter();
        Point point70 = new Point((double) ' ', (double) 100L);
        double d71 = point70.x;
        double d72 = point70.y;
        double d73 = point70.x;
        parabola65.vertex = point70;
        line53.point2 = point70;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line12 and line47", line12.equals(line47) ? line12.hashCode() == line47.hashCode() : true);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test037");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = parabola9.vertex;
        Point point14 = new Point((double) (byte) -1, (-1.0d));
        double d15 = point14.x;
        Point point18 = new Point((double) ' ', (double) 100L);
        double d19 = point18.x;
        double d20 = point18.y;
        double d21 = point18.x;
        double d22 = point18.x;
        double d23 = point18.y;
        Line line24 = new Line(point14, point18);
        parabola9.focus = point18;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line24", line7.equals(line24) ? line7.hashCode() == line24.hashCode() : true);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test038");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        Point point3 = null;
        Point point4 = null;
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        boolean b11 = line7.parallel(line10);
        Parabola parabola12 = new Parabola(point3, point4, line7);
        Line line13 = parabola12.FindCenter();
        Line line14 = parabola12.FindCenter();
        Point point17 = new Point((double) ' ', (double) 100L);
        double d18 = point17.x;
        double d19 = point17.y;
        double d20 = point17.x;
        parabola12.vertex = point17;
        Vector vector23 = new Vector(point17, (java.lang.Integer) 1);
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Point point34 = parabola33.focus;
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.y;
        parabola33.focus = point37;
        Line line40 = new Line(point17, point37);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = null;
        line46.point1 = point48;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        boolean b57 = line46.perpendicular(line52);
        Point point60 = new Point((double) ' ', (double) 100L);
        double d61 = point60.x;
        double d62 = point60.y;
        double d63 = point60.y;
        point60.Mirror("");
        point60.y = 100.0f;
        Line line68 = line52.rotate(point60);
        Parabola parabola69 = new Parabola(point2, point37, line68);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line40 and line7", line40.equals(line7) ? line40.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test039");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        Point point8 = new Point((double) '#', (double) ' ');
        double d9 = point8.x;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Line line20 = parabola19.FindCenter();
        Line line21 = parabola19.FindCenter();
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola19.vertex = point24;
        Vector vector30 = new Vector(point24, (java.lang.Integer) 1);
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        point64.Mirror("hi!");
        Line line78 = new Line(point24, point64);
        Parabola parabola79 = new Parabola(point2, point8, line78);
        double d80 = point2.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line78 and line17", line78.equals(line17) ? line78.hashCode() == line17.hashCode() : true);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test040");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        Point point8 = new Point((double) '#', (double) ' ');
        double d9 = point8.x;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Line line20 = parabola19.FindCenter();
        Line line21 = parabola19.FindCenter();
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola19.vertex = point24;
        Vector vector30 = new Vector(point24, (java.lang.Integer) 1);
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        point64.Mirror("hi!");
        Line line78 = new Line(point24, point64);
        Parabola parabola79 = new Parabola(point2, point8, line78);
        parabola79.Mirror();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line71 and line78", line71.equals(line78) ? line71.hashCode() == line78.hashCode() : true);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test041");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = line19.point1;
        boolean b24 = line13.equals((java.lang.Object) line19);
        parabola9.directrix = line19;
        Point point26 = line19.point2;
        Point point27 = line19.point1;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Point point35 = null;
        line33.point1 = point35;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        boolean b44 = line33.perpendicular(line39);
        Point point45 = line33.point1;
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        boolean b60 = line56.parallel(line59);
        Parabola parabola61 = new Parabola(point52, point53, line56);
        Line line62 = parabola61.FindCenter();
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Parabola parabola72 = new Parabola(point63, point64, line67);
        Line line73 = parabola72.FindCenter();
        boolean b75 = parabola72.equals((java.lang.Object) 0.0f);
        boolean b76 = parabola61.equals((java.lang.Object) b75);
        Point point79 = new Point((double) ' ', (double) 100L);
        parabola61.vertex = point79;
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        Line line89 = line83.rotate(point88);
        Parabola parabola90 = new Parabola(point48, point79, line83);
        point79.Mirror("hi!");
        line33.point2 = point79;
        Point point96 = new Point((double) '4', 100.0d);
        line33.point2 = point96;
        line19.point1 = point96;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line56 and line33", line56.equals(line33) ? line56.hashCode() == line33.hashCode() : true);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test042");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) '4', 100.0d);
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Point point43 = parabola42.vertex;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        parabola42.directrix = line49;
        point30.Mirror(line49);
        Line line55 = new Line(point27, point30);
        parabola9.vertex = point30;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line55", line18.equals(line55) ? line18.hashCode() == line55.hashCode() : true);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test043");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point12 = parabola9.focus;
        Line line13 = parabola9.directrix;
        Point point16 = new Point((double) ' ', (double) 100L);
        point16.y = 10.0d;
        Point point21 = new Point((double) ' ', (double) 100L);
        double d22 = point21.x;
        double d23 = point21.y;
        double d24 = point21.x;
        Line line25 = new Line(point16, point21);
        parabola9.focus = point21;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line25", line7.equals(line25) ? line7.hashCode() == line25.hashCode() : true);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test044");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point39 = new Point((double) ' ', (double) 100L);
        point39.y = 10.0d;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point35, point39, line44);
        Point point52 = new Point((double) ' ', (double) 100L);
        point52.y = 10.0d;
        Point point57 = new Point((double) ' ', (double) 100L);
        double d58 = point57.x;
        double d59 = point57.y;
        double d60 = point57.x;
        Line line61 = new Line(point52, point57);
        double d62 = point57.y;
        line44.point1 = point57;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line47 and line61", line47.equals(line61) ? line47.hashCode() == line61.hashCode() : true);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test045");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point12 = parabola9.focus;
        Point point13 = null;
        Vector vector15 = new Vector(point13, (java.lang.Integer) (-1));
        int i16 = vector15.degrees;
        Point point17 = null;
        vector15.origin = point17;
        vector15.degrees = (byte) 100;
        boolean b21 = parabola9.equals((java.lang.Object) vector15);
        Line line22 = parabola9.directrix;
        Point point23 = line22.point1;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        double d29 = point26.x;
        double d30 = point26.x;
        double d31 = point26.y;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        double d38 = point34.x;
        double d39 = point34.y;
        Line line40 = new Line(point26, point34);
        line22.point2 = point26;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line40", line7.equals(line40) ? line7.hashCode() == line40.hashCode() : true);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test046");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Point point14 = null;
        line12.point1 = point14;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        boolean b23 = line12.perpendicular(line18);
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        double d29 = point26.y;
        point26.Mirror("");
        point26.y = 100.0f;
        Line line34 = line18.rotate(point26);
        Line line35 = line2.rotate(point26);
        Point point38 = new Point((double) ' ', (double) 100L);
        double d39 = point38.x;
        double d40 = point38.y;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Parabola parabola50 = new Parabola(point41, point42, line45);
        Point point51 = parabola50.vertex;
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        line57.point1 = point59;
        parabola50.directrix = line57;
        point38.Mirror(line57);
        line35.point2 = point38;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line57", line2.equals(line57) ? line2.hashCode() == line57.hashCode() : true);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test047");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point39 = new Point((double) ' ', (double) 100L);
        point39.y = 10.0d;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point35, point39, line44);
        Point point50 = null;
        Vector vector52 = new Vector(point50, (java.lang.Integer) (-1));
        Point point53 = vector52.origin;
        boolean b55 = vector52.equals((java.lang.Object) (byte) 1);
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        double d61 = point58.x;
        double d62 = point58.x;
        double d63 = point58.y;
        Point point66 = new Point((double) ' ', (double) 100L);
        double d67 = point66.x;
        double d68 = point66.y;
        double d69 = point66.x;
        double d70 = point66.x;
        double d71 = point66.y;
        Line line72 = new Line(point58, point66);
        vector52.origin = point58;
        parabola49.vertex = point58;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line44 and line72", line44.equals(line72) ? line44.hashCode() == line72.hashCode() : true);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test048");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = line5.point1;
        Point point21 = new Point((double) (byte) -1, (-1.0d));
        double d22 = point21.x;
        line5.point1 = point21;
        point21.Mirror("");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line11", line5.equals(line11) ? line5.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test049");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = line45.point2;
        Point point47 = line45.point2;
        double d48 = point47.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line45", line18.equals(line45) ? line18.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test050");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Parabola parabola30 = new Parabola(point21, point22, line25);
        Point point31 = parabola30.focus;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.y;
        parabola30.focus = point34;
        Line line37 = new Line(point14, point34);
        point14.y = (-1.0d);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line37", line4.equals(line37) ? line4.hashCode() == line37.hashCode() : true);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test051");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point12 = parabola9.vertex;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = line18.point2;
        Point point42 = new Point((double) '#', (double) ' ');
        double d43 = point42.x;
        line18.point2 = point42;
        Point point45 = line18.point2;
        Point point46 = line18.point2;
        parabola9.vertex = point46;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line15 and line18", line15.equals(line18) ? line15.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test052");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Line line30 = parabola9.directrix;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        double d37 = point33.x;
        double d38 = point33.y;
        Point point41 = new Point((double) (byte) -1, (-1.0d));
        Point point44 = new Point((double) ' ', (double) 100L);
        point44.y = 10.0d;
        Point point49 = new Point((double) ' ', (double) 100L);
        double d50 = point49.x;
        double d51 = point49.y;
        double d52 = point49.x;
        Line line53 = new Line(point44, point49);
        double d54 = point49.y;
        Line line55 = new Line(point41, point49);
        Line line56 = new Line(point33, point49);
        line30.point1 = point33;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line56 and line13", line56.equals(line13) ? line56.hashCode() == line13.hashCode() : true);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test053");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point23 = new Point((double) ' ', (double) 100L);
        point23.Mirror("");
        Line line26 = line16.rotate(point23);
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Parabola parabola36 = new Parabola(point27, point28, line31);
        Line line37 = parabola36.FindCenter();
        Line line38 = parabola36.FindCenter();
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        parabola36.vertex = point41;
        Vector vector47 = new Vector(point41, (java.lang.Integer) 1);
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Point point58 = parabola57.focus;
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.y;
        parabola57.focus = point61;
        Line line64 = new Line(point41, point61);
        line26.point1 = point61;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line55 and line26", line55.equals(line26) ? line55.hashCode() == line26.hashCode() : true);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test054");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Line line28 = parabola27.FindCenter();
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        boolean b41 = parabola38.equals((java.lang.Object) 0.0f);
        boolean b42 = parabola27.equals((java.lang.Object) b41);
        Point point45 = new Point((double) ' ', (double) 100L);
        parabola27.vertex = point45;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Parabola parabola56 = new Parabola(point47, point48, line51);
        Point point57 = parabola56.focus;
        Point point60 = new Point((double) ' ', (double) 100L);
        double d61 = point60.y;
        parabola56.focus = point60;
        Line line63 = new Line(point45, point60);
        Point point64 = line63.point2;
        Line line65 = line5.rotate(point64);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line51 and line63", line51.equals(line63) ? line51.hashCode() == line63.hashCode() : true);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test055");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Vector vector26 = new Vector(point20, (java.lang.Integer) 0);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line14 and line5", line14.equals(line5) ? line14.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test056");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola9.vertex = point24;
        Point point31 = new Point((double) 100.0f, 32.0d);
        boolean b32 = parabola9.equals((java.lang.Object) 32.0d);
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        double d38 = point35.x;
        double d39 = point35.x;
        double d40 = point35.y;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        double d47 = point43.x;
        double d48 = point43.y;
        Line line49 = new Line(point35, point43);
        parabola9.focus = point35;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line49 and line4", line49.equals(line4) ? line49.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test057");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        double d3 = point2.x;
        double d4 = point2.x;
        point2.y = 0;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Point point14 = null;
        line12.point1 = point14;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        boolean b23 = line12.perpendicular(line18);
        Point point24 = line12.point1;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.x;
        line12.point2 = point27;
        Point point32 = line12.point1;
        Point point33 = line12.point2;
        Point point36 = new Point((double) '#', (double) ' ');
        double d37 = point36.x;
        line12.point2 = point36;
        Point point39 = line12.point2;
        Point point40 = line12.point2;
        point2.Mirror(line12);
        Vector vector43 = new Vector(point2, (java.lang.Integer) 0);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line12", line21.equals(line12) ? line21.hashCode() == line12.hashCode() : true);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test058");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Line line12 = parabola9.directrix;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Parabola parabola48 = new Parabola(point39, point40, line43);
        Point point49 = parabola48.vertex;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Point point57 = null;
        line55.point1 = point57;
        parabola48.directrix = line55;
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        Line line70 = line64.rotate(point69);
        boolean b71 = line61.perpendicular(line70);
        boolean b72 = line18.perpendicular(line70);
        parabola9.directrix = line18;
        Point point76 = new Point((double) (byte) 1, (double) 100L);
        Vector vector78 = new Vector(point76, (java.lang.Integer) 0);
        parabola9.vertex = point76;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line43 and line18", line43.equals(line18) ? line43.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test059");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        double d3 = point2.x;
        Point point6 = new Point((double) ' ', (double) 100L);
        double d7 = point6.x;
        double d8 = point6.y;
        double d9 = point6.x;
        double d10 = point6.x;
        double d11 = point6.y;
        Line line12 = new Line(point2, point6);
        Point point13 = line12.point2;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Point point24 = parabola23.vertex;
        parabola23.Mirror();
        Point point28 = new Point((double) ' ', (double) 100L);
        double d29 = point28.x;
        double d30 = point28.y;
        double d31 = point28.y;
        point28.Mirror("");
        parabola23.vertex = point28;
        Line line35 = parabola23.FindCenter();
        parabola23.Mirror();
        Point point39 = new Point((double) ' ', (double) 100L);
        double d40 = point39.y;
        Vector vector42 = new Vector(point39, (java.lang.Integer) 0);
        point39.Mirror("");
        boolean b45 = parabola23.equals((java.lang.Object) point39);
        boolean b46 = point13.equals((java.lang.Object) point39);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line12", line18.equals(line12) ? line18.hashCode() == line12.hashCode() : true);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test060");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Parabola parabola35 = new Parabola(point26, point27, line30);
        Point point36 = parabola35.vertex;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Point point44 = null;
        line42.point1 = point44;
        parabola35.directrix = line42;
        Point point47 = null;
        Line line48 = line42.rotate(point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Point point56 = null;
        Line line57 = line51.rotate(point56);
        boolean b58 = line48.perpendicular(line57);
        boolean b59 = line5.perpendicular(line57);
        Point point60 = line57.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line30 and line5", line30.equals(line5) ? line30.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test061");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Line line12 = parabola9.directrix;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Parabola parabola48 = new Parabola(point39, point40, line43);
        Point point49 = parabola48.vertex;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Point point57 = null;
        line55.point1 = point57;
        parabola48.directrix = line55;
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        Line line70 = line64.rotate(point69);
        boolean b71 = line61.perpendicular(line70);
        boolean b72 = line18.perpendicular(line70);
        parabola9.directrix = line18;
        Point point74 = parabola9.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line24 and line18", line24.equals(line18) ? line24.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test062");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = line2.point1;
        Point point10 = new Point((double) '#', (double) ' ');
        line2.point1 = point10;
        point10.y = (byte) 10;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line5", line2.equals(line5) ? line2.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test063");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point48 = new Point((double) '#', (double) (short) 0);
        double d49 = point48.y;
        Line line50 = new Line(point27, point48);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line15 and line45", line15.equals(line45) ? line15.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test064");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        Line line8 = line5.rotate(point7);
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Parabola parabola18 = new Parabola(point9, point10, line13);
        Line line19 = parabola18.FindCenter();
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Point point27 = null;
        line25.point1 = point27;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        boolean b36 = line25.perpendicular(line31);
        Point point37 = line25.point1;
        parabola18.directrix = line25;
        Line line39 = parabola18.directrix;
        boolean b40 = line5.parallel(line39);
        Point point43 = new Point((double) (byte) -1, (-1.0d));
        double d44 = point43.x;
        Point point47 = new Point((double) ' ', (double) 100L);
        double d48 = point47.x;
        double d49 = point47.y;
        double d50 = point47.x;
        double d51 = point47.x;
        double d52 = point47.y;
        Line line53 = new Line(point43, point47);
        line5.point2 = point43;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line8", line2.equals(line8) ? line2.hashCode() == line8.hashCode() : true);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test065");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        double d6 = point2.x;
        double d7 = point2.y;
        Point point10 = new Point((double) (byte) -1, (-1.0d));
        Point point13 = new Point((double) ' ', (double) 100L);
        point13.y = 10.0d;
        Point point18 = new Point((double) ' ', (double) 100L);
        double d19 = point18.x;
        double d20 = point18.y;
        double d21 = point18.x;
        Line line22 = new Line(point13, point18);
        double d23 = point18.y;
        Line line24 = new Line(point10, point18);
        Line line25 = new Line(point2, point18);
        Point point26 = null;
        Vector vector28 = new Vector(point26, (java.lang.Integer) (-1));
        int i29 = vector28.degrees;
        Point point30 = null;
        vector28.origin = point30;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        boolean b61 = parabola58.equals((java.lang.Object) 0.0f);
        boolean b62 = parabola47.equals((java.lang.Object) b61);
        Point point65 = new Point((double) ' ', (double) 100L);
        parabola47.vertex = point65;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        Parabola parabola76 = new Parabola(point34, point65, line69);
        vector28.origin = point65;
        point65.Mirror("");
        point65.Mirror("");
        point65.x = (-1.0f);
        Line line84 = new Line(point2, point65);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line69 and line24", line69.equals(line24) ? line69.hashCode() == line24.hashCode() : true);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test066");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line16.point2;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        Vector vector30 = new Vector(point26, (java.lang.Integer) 0);
        vector30.degrees = (byte) 1;
        Point point35 = new Point((double) (byte) 1, (double) (short) 0);
        vector30.origin = point35;
        Point point39 = new Point((double) ' ', (double) 100L);
        double d40 = point39.x;
        double d41 = point39.y;
        double d42 = point39.x;
        double d43 = point39.y;
        vector30.origin = point39;
        point39.Mirror("");
        point39.y = 100;
        line16.point1 = point39;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line22 and line4", line22.equals(line4) ? line22.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test067");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) (byte) -1, (-1.0d));
        Point point41 = new Point((double) ' ', (double) 100L);
        point41.y = 10.0d;
        Point point46 = new Point((double) ' ', (double) 100L);
        double d47 = point46.x;
        double d48 = point46.y;
        double d49 = point46.x;
        Line line50 = new Line(point41, point46);
        double d51 = point46.y;
        Line line52 = new Line(point38, point46);
        line29.point1 = point38;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line50 and line4", line50.equals(line4) ? line50.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test068");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        line28.point1 = point30;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        boolean b39 = line28.perpendicular(line34);
        Point point40 = line28.point1;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        line28.point2 = point43;
        boolean b48 = line16.perpendicular(line28);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Point point56 = line51.point1;
        Point point59 = new Point((double) '#', (double) ' ');
        line51.point1 = point59;
        boolean b61 = line16.parallel(line51);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line37 and line28", line37.equals(line28) ? line37.hashCode() == line28.hashCode() : true);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test069");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) 10, (double) 10.0f);
        Line line39 = new Line(point21, point38);
        Point point40 = null;
        Vector vector42 = new Vector(point40, (java.lang.Integer) (-1));
        Point point43 = vector42.origin;
        int i44 = vector42.degrees;
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        Line line53 = line47.rotate(point52);
        boolean b54 = vector42.equals((java.lang.Object) point52);
        boolean b55 = point38.equals((java.lang.Object) vector42);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line53 and line39", line53.equals(line39) ? line53.hashCode() == line39.hashCode() : true);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test070");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        Point point8 = new Point((double) '#', (double) ' ');
        double d9 = point8.x;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Line line20 = parabola19.FindCenter();
        Line line21 = parabola19.FindCenter();
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola19.vertex = point24;
        Vector vector30 = new Vector(point24, (java.lang.Integer) 1);
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        point64.Mirror("hi!");
        Line line78 = new Line(point24, point64);
        Parabola parabola79 = new Parabola(point2, point8, line78);
        Point point80 = null;
        Point point81 = null;
        Point point82 = null;
        Point point83 = null;
        Line line84 = new Line(point82, point83);
        Point point85 = null;
        Point point86 = null;
        Line line87 = new Line(point85, point86);
        boolean b88 = line84.parallel(line87);
        Parabola parabola89 = new Parabola(point80, point81, line84);
        Point point90 = null;
        parabola89.vertex = point90;
        boolean b92 = point8.equals((java.lang.Object) parabola89);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line14 and line78", line14.equals(line78) ? line14.hashCode() == line78.hashCode() : true);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test071");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        Point point23 = new Point((double) ' ', (double) 100L);
        double d24 = point23.x;
        double d25 = point23.y;
        double d26 = point23.x;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Parabola parabola36 = new Parabola(point27, point28, line31);
        Line line37 = parabola36.FindCenter();
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        boolean b50 = parabola47.equals((java.lang.Object) 0.0f);
        boolean b51 = parabola36.equals((java.lang.Object) b50);
        Point point54 = new Point((double) ' ', (double) 100L);
        parabola36.vertex = point54;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        Line line64 = line58.rotate(point63);
        Parabola parabola65 = new Parabola(point23, point54, line58);
        point54.Mirror("hi!");
        Line line68 = new Line(point14, point54);
        Vector vector70 = new Vector(point54, (java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line68", line4.equals(line68) ? line4.hashCode() == line68.hashCode() : true);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test072");
        Point point2 = new Point((double) 0, (double) 100.0f);
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 1L;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        Line line19 = line13.rotate(point18);
        point10.Mirror(line19);
        Parabola parabola21 = new Parabola(point2, point5, line19);
        Point point22 = null;
        Point point25 = new Point((double) (short) 10, (double) 100.0f);
        Line line26 = new Line(point22, point25);
        line19.point2 = point22;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line16", line26.equals(line16) ? line26.hashCode() == line16.hashCode() : true);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test073");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = parabola9.vertex;
        Point point12 = parabola9.vertex;
        Line line13 = parabola9.FindCenter();
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Line line24 = parabola23.FindCenter();
        Line line25 = parabola23.FindCenter();
        Point point28 = new Point((double) ' ', (double) 100L);
        double d29 = point28.x;
        double d30 = point28.y;
        double d31 = point28.x;
        parabola23.vertex = point28;
        Point point35 = new Point((double) ' ', (double) 100L);
        point35.y = 10.0d;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Point point45 = null;
        line43.point1 = point45;
        Point point47 = null;
        line43.point1 = point47;
        Parabola parabola49 = new Parabola(point28, point35, line43);
        Point point52 = new Point((double) 10, (double) 10.0f);
        Line line53 = new Line(point35, point52);
        parabola9.vertex = point35;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line53 and line43", line53.equals(line43) ? line53.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test074");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Parabola parabola37 = new Parabola(point28, point29, line32);
        Point point38 = parabola37.vertex;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Point point46 = null;
        line44.point1 = point46;
        parabola37.directrix = line44;
        Point point49 = null;
        Line line50 = line44.rotate(point49);
        boolean b51 = line22.perpendicular(line50);
        boolean b52 = line5.parallel(line50);
        Point point55 = new Point((double) '#', (double) (short) 0);
        Line line56 = line5.rotate(point55);
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Parabola parabola66 = new Parabola(point57, point58, line61);
        Point point67 = parabola66.vertex;
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        parabola66.directrix = line73;
        Point point78 = null;
        Line line79 = line73.rotate(point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        Point point83 = null;
        Point point84 = null;
        Line line85 = new Line(point83, point84);
        boolean b86 = line82.parallel(line85);
        Point point87 = null;
        Line line88 = line82.rotate(point87);
        boolean b89 = line79.perpendicular(line88);
        Point point92 = new Point((double) ' ', (double) 100L);
        Line line93 = line79.rotate(point92);
        point92.y = (-1);
        Line line96 = new Line(point55, point92);
        point92.Mirror("hi!");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line64 and line96", line64.equals(line96) ? line64.hashCode() == line96.hashCode() : true);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test075");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point13 = new Point((double) ' ', (double) 100L);
        double d14 = point13.y;
        parabola9.focus = point13;
        Line line16 = parabola9.directrix;
        Point point19 = new Point((double) ' ', (double) 100L);
        point19.y = 10.0d;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        Line line28 = new Line(point19, point24);
        point19.Mirror("hi!");
        line16.point2 = point19;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line28", line7.equals(line28) ? line7.hashCode() == line28.hashCode() : true);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test076");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Vector vector27 = new Vector(point25, (java.lang.Integer) (-1));
        int i28 = vector27.degrees;
        Point point29 = null;
        vector27.origin = point29;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        vector27.origin = point64;
        line22.point1 = point64;
        point64.Mirror("hi!");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line22", line19.equals(line22) ? line19.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test077");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = parabola9.vertex;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Point point19 = null;
        line17.point1 = point19;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        boolean b28 = line17.perpendicular(line23);
        Point point29 = line17.point1;
        Point point32 = new Point((double) ' ', (double) 100L);
        double d33 = point32.x;
        double d34 = point32.y;
        double d35 = point32.x;
        line17.point2 = point32;
        Point point37 = line17.point1;
        Point point38 = line17.point2;
        Point point41 = new Point((double) '#', (double) ' ');
        double d42 = point41.x;
        line17.point2 = point41;
        parabola9.vertex = point41;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line17", line7.equals(line17) ? line7.hashCode() == line17.hashCode() : true);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test078");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        line58.point1 = point60;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        boolean b69 = line58.perpendicular(line64);
        Point point70 = line58.point1;
        Point point71 = line58.point1;
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.y;
        Vector vector77 = new Vector(point74, (java.lang.Integer) 0);
        point74.Mirror("");
        line58.point2 = point74;
        Point point83 = new Point((double) (byte) -1, (-1.0d));
        double d84 = point83.x;
        Point point87 = new Point((double) ' ', (double) 100L);
        double d88 = point87.x;
        double d89 = point87.y;
        double d90 = point87.x;
        double d91 = point87.x;
        double d92 = point87.y;
        Line line93 = new Line(point83, point87);
        boolean b94 = line58.perpendicular(line93);
        boolean b95 = line51.perpendicular(line93);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line67 and line58", line67.equals(line58) ? line67.hashCode() == line58.hashCode() : true);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test079");
        Point point2 = new Point((double) '4', 100.0d);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        point5.Mirror(line24);
        Line line30 = new Line(point2, point5);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Point point38 = null;
        line36.point1 = point38;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        boolean b47 = line36.perpendicular(line42);
        Point point48 = line36.point1;
        Point point51 = new Point((double) ' ', (double) 100L);
        double d52 = point51.x;
        double d53 = point51.y;
        double d54 = point51.x;
        line36.point2 = point51;
        Point point56 = line36.point1;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Parabola parabola66 = new Parabola(point57, point58, line61);
        Point point67 = parabola66.vertex;
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        parabola66.directrix = line73;
        Point point78 = null;
        Line line79 = line73.rotate(point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        Point point83 = null;
        Point point84 = null;
        Line line85 = new Line(point83, point84);
        boolean b86 = line82.parallel(line85);
        Point point87 = null;
        Line line88 = line82.rotate(point87);
        boolean b89 = line79.perpendicular(line88);
        boolean b90 = line36.perpendicular(line88);
        point2.Mirror(line36);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line70 and line30", line70.equals(line30) ? line70.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test080");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        boolean b21 = line17.parallel(line20);
        Parabola parabola22 = new Parabola(point13, point14, line17);
        Line line23 = parabola22.FindCenter();
        Line line24 = parabola22.FindCenter();
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.x;
        parabola22.vertex = point27;
        Point point34 = new Point((double) ' ', (double) 100L);
        point34.y = 10.0d;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Point point44 = null;
        line42.point1 = point44;
        Point point46 = null;
        line42.point1 = point46;
        Parabola parabola48 = new Parabola(point27, point34, line42);
        vector6.origin = point27;
        Point point52 = new Point((double) ' ', (double) 100L);
        double d53 = point52.x;
        double d54 = point52.y;
        vector6.origin = point52;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        line61.point1 = point63;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        boolean b72 = line61.perpendicular(line67);
        Point point73 = line61.point1;
        Point point76 = new Point((double) ' ', (double) 100L);
        double d77 = point76.x;
        double d78 = point76.y;
        double d79 = point76.x;
        line61.point2 = point76;
        Point point83 = new Point((double) ' ', (double) 100L);
        double d84 = point83.x;
        double d85 = point83.y;
        double d86 = point83.y;
        point83.Mirror("");
        line61.point1 = point83;
        vector6.origin = point83;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line61 and line70", line61.equals(line70) ? line61.hashCode() == line70.hashCode() : true);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test081");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        boolean b47 = line35.parallel(line45);
        Point point50 = new Point((double) 0, (double) 100.0f);
        Point point53 = new Point((double) ' ', (double) 100L);
        point53.y = 1L;
        Point point58 = new Point((double) (byte) 1, (double) 100L);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Point point66 = null;
        Line line67 = line61.rotate(point66);
        point58.Mirror(line67);
        Parabola parabola69 = new Parabola(point50, point53, line67);
        line45.point1 = point50;
        double d71 = point50.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line67 and line45", line67.equals(line45) ? line67.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test082");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        parabola19.directrix = line26;
        Line line31 = parabola19.directrix;
        boolean b32 = line4.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        double d38 = point35.x;
        double d39 = point35.x;
        double d40 = point35.y;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        double d47 = point43.x;
        double d48 = point43.y;
        Line line49 = new Line(point35, point43);
        line31.point2 = point35;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line17 and line49", line17.equals(line49) ? line17.hashCode() == line49.hashCode() : true);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test083");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.y;
        point27.Mirror("");
        line5.point1 = point27;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        Parabola parabola43 = new Parabola(point34, point35, line38);
        Line line44 = parabola43.FindCenter();
        Line line45 = parabola43.FindCenter();
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        parabola43.vertex = point48;
        line5.point1 = point48;
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Parabola parabola63 = new Parabola(point54, point55, line58);
        Point point64 = null;
        parabola63.vertex = point64;
        Point point68 = new Point((double) ' ', (double) 100L);
        double d69 = point68.x;
        double d70 = point68.y;
        double d71 = point68.y;
        point68.Mirror("");
        point68.y = 100.0f;
        parabola63.focus = point68;
        line5.point2 = point68;
        point68.x = (-1.0f);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line61 and line5", line61.equals(line5) ? line61.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test084");
        Point point0 = null;
        Point point3 = new Point((double) (short) 10, (double) 100.0f);
        Line line4 = new Line(point0, point3);
        Point point7 = new Point((double) ' ', (double) 100L);
        double d8 = point7.x;
        double d9 = point7.y;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        parabola19.directrix = line26;
        point7.Mirror(line26);
        Point point32 = null;
        Vector vector34 = new Vector(point32, (java.lang.Integer) (-1));
        Point point35 = vector34.origin;
        boolean b37 = vector34.equals((java.lang.Object) (byte) 1);
        Point point38 = vector34.origin;
        boolean b40 = vector34.equals((java.lang.Object) (-1.0f));
        Point point41 = vector34.origin;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Parabola parabola51 = new Parabola(point42, point43, line46);
        Line line52 = parabola51.FindCenter();
        Line line53 = parabola51.FindCenter();
        Point point56 = new Point((double) ' ', (double) 100L);
        double d57 = point56.x;
        double d58 = point56.y;
        double d59 = point56.x;
        parabola51.vertex = point56;
        vector34.origin = point56;
        line26.point2 = point56;
        line4.point2 = point56;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line46 and line26", line46.equals(line26) ? line46.hashCode() == line26.hashCode() : true);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test085");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point23 = new Point((double) ' ', (double) 100L);
        point23.Mirror("");
        Line line26 = line16.rotate(point23);
        Point point29 = new Point((double) (byte) 1, (double) 100L);
        line26.point1 = point29;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line26", line7.equals(line26) ? line7.hashCode() == line26.hashCode() : true);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test086");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Vector vector27 = new Vector(point25, (java.lang.Integer) (-1));
        int i28 = vector27.degrees;
        Point point29 = null;
        vector27.origin = point29;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        vector27.origin = point64;
        line22.point1 = point64;
        point64.y = 0L;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line22", line5.equals(line22) ? line5.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test087");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Point point44 = null;
        Line line45 = line39.rotate(point44);
        boolean b46 = line36.parallel(line45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Point point54 = null;
        line52.point1 = point54;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        boolean b63 = line52.perpendicular(line58);
        Point point64 = line52.point1;
        Point point67 = new Point((double) ' ', (double) 100L);
        double d68 = point67.x;
        double d69 = point67.y;
        double d70 = point67.x;
        line52.point2 = point67;
        Point point72 = line52.point1;
        Point point73 = line52.point2;
        Point point76 = new Point((double) '#', (double) ' ');
        double d77 = point76.x;
        line52.point2 = point76;
        Point point79 = line52.point2;
        boolean b80 = line45.perpendicular(line52);
        Point point81 = line45.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line58 and line52", line58.equals(line52) ? line58.hashCode() == line52.hashCode() : true);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test088");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        int i9 = vector6.degrees;
        int i10 = vector6.degrees;
        vector6.degrees = (byte) 100;
        vector6.degrees = 359;
        Point point17 = new Point((double) '4', 100.0d);
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Parabola parabola32 = new Parabola(point23, point24, line27);
        Point point33 = parabola32.vertex;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        Point point41 = null;
        line39.point1 = point41;
        parabola32.directrix = line39;
        point20.Mirror(line39);
        Line line45 = new Line(point17, point20);
        vector6.origin = point17;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line27", line45.equals(line27) ? line45.hashCode() == line27.hashCode() : true);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test089");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line21.point1 = point26;
        point14.Mirror(line21);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.Mirror("hi!");
        Line line52 = line21.rotate(point43);
        Point point55 = new Point((double) ' ', (double) 100L);
        double d56 = point55.x;
        double d57 = point55.y;
        Vector vector59 = new Vector(point55, (java.lang.Integer) 0);
        vector59.degrees = (byte) 1;
        int i62 = vector59.degrees;
        int i63 = vector59.degrees;
        Point point66 = new Point((double) (byte) -1, (-1.0d));
        double d67 = point66.x;
        Point point70 = new Point((double) ' ', (double) 100L);
        double d71 = point70.x;
        double d72 = point70.y;
        double d73 = point70.x;
        double d74 = point70.x;
        double d75 = point70.y;
        Line line76 = new Line(point66, point70);
        vector59.origin = point70;
        Line line78 = line52.rotate(point70);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line33 and line76", line33.equals(line76) ? line33.hashCode() == line76.hashCode() : true);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test090");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line21.point1 = point26;
        point14.Mirror(line21);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.Mirror("hi!");
        Line line52 = line21.rotate(point43);
        Point point55 = new Point((double) (byte) -1, (-1.0d));
        double d56 = point55.x;
        double d57 = point55.x;
        line52.point2 = point55;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line21", line7.equals(line21) ? line7.hashCode() == line21.hashCode() : true);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test091");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        double d3 = point2.x;
        Point point6 = new Point((double) ' ', (double) 100L);
        double d7 = point6.x;
        double d8 = point6.y;
        double d9 = point6.x;
        double d10 = point6.x;
        double d11 = point6.y;
        Line line12 = new Line(point2, point6);
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        boolean b21 = line17.parallel(line20);
        Parabola parabola22 = new Parabola(point13, point14, line17);
        Point point23 = parabola22.vertex;
        parabola22.Mirror();
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.y;
        point27.Mirror("");
        parabola22.vertex = point27;
        Line line34 = parabola22.FindCenter();
        parabola22.Mirror();
        Point point38 = new Point((double) ' ', (double) 100L);
        double d39 = point38.y;
        Vector vector41 = new Vector(point38, (java.lang.Integer) 0);
        point38.Mirror("");
        boolean b44 = parabola22.equals((java.lang.Object) point38);
        Line line45 = new Line(point6, point38);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line20 and line12", line20.equals(line12) ? line20.hashCode() == line12.hashCode() : true);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test092");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = line22.point2;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Point point35 = parabola34.vertex;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        Point point43 = null;
        line41.point1 = point43;
        parabola34.directrix = line41;
        Point point46 = null;
        Line line47 = line41.rotate(point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Point point55 = null;
        line53.point1 = point55;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        boolean b64 = line53.perpendicular(line59);
        Point point65 = line53.point1;
        Point point68 = new Point((double) ' ', (double) 100L);
        double d69 = point68.x;
        double d70 = point68.y;
        double d71 = point68.x;
        line53.point2 = point68;
        boolean b73 = line41.perpendicular(line53);
        boolean b74 = line22.perpendicular(line41);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line53 and line13", line53.equals(line13) ? line53.hashCode() == line13.hashCode() : true);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test093");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Line line30 = parabola9.directrix;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        double d37 = point33.x;
        double d38 = point33.y;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        double d45 = point41.x;
        double d46 = point41.y;
        Line line47 = new Line(point33, point41);
        Line line48 = line30.rotate(point33);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line47 and line22", line47.equals(line22) ? line47.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test094");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Vector vector27 = new Vector(point25, (java.lang.Integer) (-1));
        int i28 = vector27.degrees;
        Point point29 = null;
        vector27.origin = point29;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        vector27.origin = point64;
        line22.point1 = point64;
        Point point80 = new Point((double) (byte) -1, (-1.0d));
        double d81 = point80.x;
        double d82 = point80.x;
        point80.y = 0;
        Line line85 = new Line(point64, point80);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line44 and line22", line44.equals(line22) ? line44.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test095");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        boolean b41 = line30.perpendicular(line36);
        Point point42 = line30.point1;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        line30.point2 = point45;
        Point point50 = line30.point1;
        Point point51 = line30.point2;
        Point point54 = new Point((double) '#', (double) ' ');
        double d55 = point54.x;
        line30.point2 = point54;
        boolean b57 = line22.perpendicular(line30);
        Point point60 = new Point((double) ' ', (double) 100L);
        double d61 = point60.x;
        double d62 = point60.y;
        double d63 = point60.x;
        double d64 = point60.x;
        line22.point1 = point60;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line30", line11.equals(line30) ? line11.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test096");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        Point point8 = new Point((double) '#', (double) ' ');
        double d9 = point8.x;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Line line20 = parabola19.FindCenter();
        Line line21 = parabola19.FindCenter();
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola19.vertex = point24;
        Vector vector30 = new Vector(point24, (java.lang.Integer) 1);
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        point64.Mirror("hi!");
        Line line78 = new Line(point24, point64);
        Parabola parabola79 = new Parabola(point2, point8, line78);
        double d80 = point8.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line52 and line78", line52.equals(line78) ? line52.hashCode() == line78.hashCode() : true);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test097");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        int i3 = vector2.degrees;
        Point point4 = null;
        vector2.origin = point4;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Line line17 = parabola15.FindCenter();
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        parabola15.vertex = point20;
        Point point27 = new Point((double) ' ', (double) 100L);
        point27.y = 10.0d;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        line35.point1 = point39;
        Parabola parabola41 = new Parabola(point20, point27, line35);
        Point point44 = new Point((double) 10, (double) 10.0f);
        Line line45 = new Line(point27, point44);
        vector2.origin = point44;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line35 and line45", line35.equals(line45) ? line35.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test098");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = parabola14.vertex;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Point point23 = null;
        line21.point1 = point23;
        parabola14.directrix = line21;
        point2.Mirror(line21);
        Vector vector28 = new Vector(point2, (java.lang.Integer) 0);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.y = 1.0f;
        Line line52 = new Line(point2, point43);
        point43.Mirror("hi!");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line12 and line52", line12.equals(line52) ? line12.hashCode() == line52.hashCode() : true);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test099");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        double d6 = point2.x;
        double d7 = point2.y;
        Point point10 = new Point((double) (byte) -1, (-1.0d));
        Point point13 = new Point((double) ' ', (double) 100L);
        point13.y = 10.0d;
        Point point18 = new Point((double) ' ', (double) 100L);
        double d19 = point18.x;
        double d20 = point18.y;
        double d21 = point18.x;
        Line line22 = new Line(point13, point18);
        double d23 = point18.y;
        Line line24 = new Line(point10, point18);
        Line line25 = new Line(point2, point18);
        double d26 = point2.y;
        Vector vector28 = new Vector(point2, (java.lang.Integer) 1);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Point point36 = null;
        line34.point1 = point36;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        boolean b45 = line34.perpendicular(line40);
        Point point46 = line34.point1;
        Point point49 = new Point((double) ' ', (double) 100L);
        double d50 = point49.x;
        double d51 = point49.y;
        double d52 = point49.x;
        line34.point2 = point49;
        Point point56 = new Point((double) ' ', (double) 100L);
        double d57 = point56.x;
        double d58 = point56.y;
        double d59 = point56.y;
        point56.Mirror("");
        line34.point1 = point56;
        point2.Mirror(line34);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line22 and line31", line22.equals(line31) ? line22.hashCode() == line31.hashCode() : true);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test100");
        Point point2 = new Point((double) '4', 100.0d);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        point5.Mirror(line24);
        Line line30 = new Line(point2, point5);
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        double d37 = point33.x;
        double d38 = point33.y;
        double d39 = point33.x;
        boolean b40 = point2.equals((java.lang.Object) point33);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line30", line21.equals(line30) ? line21.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test101");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.focus;
        Line line22 = parabola9.directrix;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        line28.point1 = point30;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        boolean b39 = line28.perpendicular(line34);
        boolean b40 = line22.perpendicular(line28);
        Point point43 = new Point((double) ' ', (double) 100L);
        line22.point2 = point43;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line22", line7.equals(line22) ? line7.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test102");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        int i4 = vector2.degrees;
        vector2.degrees = (short) 100;
        vector2.degrees = 359;
        Point point9 = vector2.origin;
        vector2.degrees = (byte) 10;
        int i12 = vector2.degrees;
        vector2.degrees = (short) 1;
        java.lang.Object obj15 = null;
        boolean b16 = vector2.equals(obj15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        Point point24 = line19.point1;
        Point point27 = new Point((double) '#', (double) ' ');
        line19.point1 = point27;
        vector2.origin = point27;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line22", line19.equals(line22) ? line19.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test103");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        Parabola parabola16 = new Parabola(point7, point8, line11);
        Point point17 = parabola16.focus;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        Point point30 = line26.point1;
        boolean b31 = line20.equals((java.lang.Object) line26);
        parabola16.directrix = line26;
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line26.rotate(point35);
        vector2.origin = point35;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        boolean b61 = parabola58.equals((java.lang.Object) 0.0f);
        boolean b62 = parabola47.equals((java.lang.Object) b61);
        Point point65 = new Point((double) ' ', (double) 100L);
        parabola47.vertex = point65;
        Point point67 = null;
        Point point68 = null;
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        Parabola parabola76 = new Parabola(point67, point68, line71);
        Point point77 = parabola76.focus;
        Point point80 = new Point((double) ' ', (double) 100L);
        double d81 = point80.y;
        parabola76.focus = point80;
        Line line83 = new Line(point65, point80);
        vector2.origin = point80;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line42 and line83", line42.equals(line83) ? line42.hashCode() == line83.hashCode() : true);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test104");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.y;
        point14.Mirror("");
        parabola9.vertex = point14;
        Line line21 = parabola9.FindCenter();
        Point point22 = parabola9.vertex;
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.y;
        Vector vector28 = new Vector(point25, (java.lang.Integer) 100);
        Point point29 = null;
        Vector vector31 = new Vector(point29, (java.lang.Integer) (-1));
        int i32 = vector31.degrees;
        Point point33 = null;
        vector31.origin = point33;
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.x;
        double d39 = point37.y;
        double d40 = point37.x;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Parabola parabola50 = new Parabola(point41, point42, line45);
        Line line51 = parabola50.FindCenter();
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        boolean b60 = line56.parallel(line59);
        Parabola parabola61 = new Parabola(point52, point53, line56);
        Line line62 = parabola61.FindCenter();
        boolean b64 = parabola61.equals((java.lang.Object) 0.0f);
        boolean b65 = parabola50.equals((java.lang.Object) b64);
        Point point68 = new Point((double) ' ', (double) 100L);
        parabola50.vertex = point68;
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        boolean b76 = line72.parallel(line75);
        Point point77 = null;
        Line line78 = line72.rotate(point77);
        Parabola parabola79 = new Parabola(point37, point68, line72);
        vector31.origin = point68;
        point68.Mirror("");
        point68.Mirror("");
        point68.x = (-1.0f);
        Line line87 = new Line(point25, point68);
        Point point88 = line87.point2;
        boolean b89 = parabola9.equals((java.lang.Object) line87);
        Line line90 = parabola9.FindCenter();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line87", line4.equals(line87) ? line4.hashCode() == line87.hashCode() : true);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test105");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Point point14 = null;
        line12.point1 = point14;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        boolean b23 = line12.perpendicular(line18);
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        double d29 = point26.y;
        point26.Mirror("");
        point26.y = 100.0f;
        Line line34 = line18.rotate(point26);
        Line line35 = line2.rotate(point26);
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Parabola parabola45 = new Parabola(point36, point37, line40);
        Point point46 = parabola45.vertex;
        parabola45.Mirror();
        Point point48 = parabola45.focus;
        Point point49 = null;
        Vector vector51 = new Vector(point49, (java.lang.Integer) (-1));
        int i52 = vector51.degrees;
        Point point53 = null;
        vector51.origin = point53;
        vector51.degrees = (byte) 100;
        boolean b57 = parabola45.equals((java.lang.Object) vector51);
        boolean b58 = point26.equals((java.lang.Object) b57);
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.y;
        boolean b63 = point26.equals((java.lang.Object) point61);
        point26.x = 0.0d;
        Point point66 = null;
        Point point69 = new Point((double) (short) 10, (double) 100.0f);
        Line line70 = new Line(point66, point69);
        Point point71 = null;
        Point point72 = null;
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        boolean b79 = line75.parallel(line78);
        Parabola parabola80 = new Parabola(point71, point72, line75);
        Point point81 = parabola80.vertex;
        Point point82 = null;
        Point point83 = null;
        Line line84 = new Line(point82, point83);
        Point point85 = null;
        Point point86 = null;
        Line line87 = new Line(point85, point86);
        boolean b88 = line84.parallel(line87);
        Point point89 = null;
        line87.point1 = point89;
        parabola80.directrix = line87;
        Point point92 = null;
        Line line93 = line87.rotate(point92);
        Point point94 = line93.point2;
        Point point95 = line93.point1;
        Parabola parabola96 = new Parabola(point26, point69, line93);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line70", line2.equals(line70) ? line2.hashCode() == line70.hashCode() : true);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test106");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point9 = vector6.origin;
        Point point12 = new Point((double) ' ', (double) 100L);
        double d13 = point12.x;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Point point24 = parabola23.vertex;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        parabola23.directrix = line30;
        Point point37 = new Point((double) ' ', (double) 100L);
        point37.Mirror("");
        Line line40 = line30.rotate(point37);
        point12.Mirror(line40);
        boolean b42 = vector6.equals((java.lang.Object) line40);
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Parabola parabola52 = new Parabola(point43, point44, line47);
        Line line53 = parabola52.FindCenter();
        Line line54 = parabola52.FindCenter();
        Point point57 = new Point((double) ' ', (double) 100L);
        double d58 = point57.x;
        double d59 = point57.y;
        double d60 = point57.x;
        parabola52.vertex = point57;
        Point point64 = new Point((double) ' ', (double) 100L);
        point64.y = 10.0d;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        line72.point1 = point74;
        Point point76 = null;
        line72.point1 = point76;
        Parabola parabola78 = new Parabola(point57, point64, line72);
        Point point81 = new Point((double) 10, (double) 10.0f);
        Line line82 = new Line(point64, point81);
        boolean b83 = vector6.equals((java.lang.Object) point81);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line72 and line82", line72.equals(line82) ? line72.hashCode() == line82.hashCode() : true);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test107");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = line5.point1;
        Point point21 = new Point(0.0d, (double) 10);
        double d22 = point21.y;
        Line line23 = line5.rotate(point21);
        Point point24 = null;
        Vector vector26 = new Vector(point24, (java.lang.Integer) (-1));
        int i27 = vector26.degrees;
        Point point30 = new Point((double) ' ', (double) 100L);
        point30.Mirror("");
        double d33 = point30.x;
        vector26.origin = point30;
        line5.point2 = point30;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line5", line11.equals(line5) ? line11.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test108");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = line19.point1;
        boolean b24 = line13.equals((java.lang.Object) line19);
        parabola9.directrix = line19;
        Point point28 = new Point((double) ' ', (double) 100L);
        Line line29 = line19.rotate(point28);
        Point point32 = new Point((double) ' ', (double) 100L);
        double d33 = point32.x;
        double d34 = point32.y;
        double d35 = point32.y;
        point32.Mirror("");
        Point point40 = new Point((double) ' ', (double) 100L);
        double d41 = point40.x;
        double d42 = point40.y;
        double d43 = point40.y;
        point40.y = (short) -1;
        point40.x = (-1.0d);
        Line line48 = new Line(point32, point40);
        line29.point2 = point40;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line19", line4.equals(line19) ? line4.hashCode() == line19.hashCode() : true);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test109");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.y;
        point14.Mirror("");
        parabola9.vertex = point14;
        Line line21 = parabola9.FindCenter();
        Point point22 = parabola9.focus;
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        double d29 = point25.x;
        double d30 = point25.y;
        Point point33 = new Point((double) (byte) -1, (-1.0d));
        Point point36 = new Point((double) ' ', (double) 100L);
        point36.y = 10.0d;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        Line line45 = new Line(point36, point41);
        double d46 = point41.y;
        Line line47 = new Line(point33, point41);
        Line line48 = new Line(point25, point41);
        Point point51 = new Point((double) (short) 10, (double) (short) -1);
        Point point54 = new Point((double) '#', (double) (short) 0);
        double d55 = point54.y;
        boolean b56 = point51.equals((java.lang.Object) point54);
        line48.point2 = point51;
        boolean b58 = parabola9.equals((java.lang.Object) line48);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line7", line45.equals(line7) ? line45.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test110");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        double d6 = point2.y;
        double d7 = point2.y;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        double d11 = point10.x;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        boolean b32 = parabola21.equals((java.lang.Object) point23);
        Point point33 = parabola21.focus;
        Line line34 = parabola21.directrix;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        line40.point1 = point42;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        boolean b51 = line40.perpendicular(line46);
        boolean b52 = line34.perpendicular(line40);
        Point point53 = null;
        Line line54 = line34.rotate(point53);
        point10.Mirror(line54);
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Point point66 = parabola65.vertex;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        line72.point1 = point74;
        parabola65.directrix = line72;
        Point point77 = null;
        Line line78 = line72.rotate(point77);
        Point point79 = null;
        Point point80 = null;
        Line line81 = new Line(point79, point80);
        Point point82 = null;
        Point point83 = null;
        Line line84 = new Line(point82, point83);
        boolean b85 = line81.parallel(line84);
        Point point86 = null;
        Line line87 = line81.rotate(point86);
        boolean b88 = line78.perpendicular(line87);
        Point point91 = new Point((double) ' ', (double) 100L);
        Line line92 = line78.rotate(point91);
        Line line93 = new Line(point10, point91);
        Line line94 = new Line(point2, point91);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line93", line19.equals(line93) ? line19.hashCode() == line93.hashCode() : true);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test111");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = parabola14.vertex;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Point point23 = null;
        line21.point1 = point23;
        parabola14.directrix = line21;
        point2.Mirror(line21);
        Point point27 = null;
        Vector vector29 = new Vector(point27, (java.lang.Integer) (-1));
        Point point30 = vector29.origin;
        boolean b32 = vector29.equals((java.lang.Object) (byte) 1);
        Point point33 = vector29.origin;
        boolean b35 = vector29.equals((java.lang.Object) (-1.0f));
        Point point36 = vector29.origin;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Line line48 = parabola46.FindCenter();
        Point point51 = new Point((double) ' ', (double) 100L);
        double d52 = point51.x;
        double d53 = point51.y;
        double d54 = point51.x;
        parabola46.vertex = point51;
        vector29.origin = point51;
        line21.point2 = point51;
        double d58 = point51.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line44", line21.equals(line44) ? line21.hashCode() == line44.hashCode() : true);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test112");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) ' ', (double) 100L);
        double d39 = point38.x;
        double d40 = point38.y;
        double d41 = point38.y;
        point38.Mirror("");
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line48.parallel(line51);
        Parabola parabola53 = new Parabola(point44, point45, line48);
        Point point54 = parabola53.vertex;
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Point point62 = null;
        line60.point1 = point62;
        parabola53.directrix = line60;
        Point point65 = null;
        Line line66 = line60.rotate(point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        boolean b76 = line66.perpendicular(line75);
        Point point79 = new Point((double) ' ', (double) 100L);
        Line line80 = line66.rotate(point79);
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        Line line89 = line83.rotate(point88);
        boolean b90 = line80.parallel(line89);
        boolean b91 = point38.equals((java.lang.Object) line89);
        point21.Mirror(line89);
        Point point95 = new Point((double) ' ', (double) 100L);
        double d96 = point95.x;
        double d97 = point95.y;
        double d98 = point95.x;
        line89.point1 = point95;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line89", line7.equals(line89) ? line7.hashCode() == line89.hashCode() : true);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test113");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        double d3 = point2.x;
        double d4 = point2.x;
        point2.y = 0;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Point point14 = null;
        line12.point1 = point14;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        boolean b23 = line12.perpendicular(line18);
        Point point24 = line12.point1;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.x;
        line12.point2 = point27;
        Point point32 = line12.point1;
        Point point33 = line12.point2;
        Point point36 = new Point((double) '#', (double) ' ');
        double d37 = point36.x;
        line12.point2 = point36;
        Point point39 = line12.point2;
        Point point40 = line12.point2;
        point2.Mirror(line12);
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Parabola parabola51 = new Parabola(point42, point43, line46);
        Point point52 = parabola51.focus;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        line61.point1 = point63;
        Point point65 = line61.point1;
        boolean b66 = line55.equals((java.lang.Object) line61);
        parabola51.directrix = line61;
        boolean b69 = line61.equals((java.lang.Object) (short) 100);
        point2.Mirror(line61);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line12", line18.equals(line12) ? line18.hashCode() == line12.hashCode() : true);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test114");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.focus;
        Line line22 = parabola9.directrix;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        line28.point1 = point30;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        boolean b39 = line28.perpendicular(line34);
        boolean b40 = line22.perpendicular(line28);
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Parabola parabola56 = new Parabola(point47, point48, line51);
        Line line57 = parabola56.FindCenter();
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        boolean b66 = line62.parallel(line65);
        Parabola parabola67 = new Parabola(point58, point59, line62);
        Line line68 = parabola67.FindCenter();
        boolean b70 = parabola67.equals((java.lang.Object) 0.0f);
        boolean b71 = parabola56.equals((java.lang.Object) b70);
        Point point74 = new Point((double) ' ', (double) 100L);
        parabola56.vertex = point74;
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        Point point79 = null;
        Point point80 = null;
        Line line81 = new Line(point79, point80);
        boolean b82 = line78.parallel(line81);
        Point point83 = null;
        Line line84 = line78.rotate(point83);
        Parabola parabola85 = new Parabola(point43, point74, line78);
        point74.Mirror("hi!");
        Vector vector89 = new Vector(point74, (java.lang.Integer) 10);
        line22.point1 = point74;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola9 and parabola19", parabola9.equals(parabola19) ? parabola9.hashCode() == parabola19.hashCode() : true);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test115");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        double d3 = point2.x;
        Point point6 = new Point((double) ' ', (double) 100L);
        double d7 = point6.x;
        double d8 = point6.y;
        double d9 = point6.x;
        double d10 = point6.x;
        double d11 = point6.y;
        Line line12 = new Line(point2, point6);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        boolean b22 = point6.equals((java.lang.Object) point20);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line12 and line18", line12.equals(line18) ? line12.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test116");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.y;
        Vector vector5 = new Vector(point2, (java.lang.Integer) 100);
        Point point6 = null;
        Vector vector8 = new Vector(point6, (java.lang.Integer) (-1));
        int i9 = vector8.degrees;
        Point point10 = null;
        vector8.origin = point10;
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Line line28 = parabola27.FindCenter();
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        boolean b41 = parabola38.equals((java.lang.Object) 0.0f);
        boolean b42 = parabola27.equals((java.lang.Object) b41);
        Point point45 = new Point((double) ' ', (double) 100L);
        parabola27.vertex = point45;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Point point54 = null;
        Line line55 = line49.rotate(point54);
        Parabola parabola56 = new Parabola(point14, point45, line49);
        vector8.origin = point45;
        point45.Mirror("");
        point45.Mirror("");
        point45.x = (-1.0f);
        Line line64 = new Line(point2, point45);
        point45.y = 0L;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line55 and line64", line55.equals(line64) ? line55.hashCode() == line64.hashCode() : true);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test117");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Parabola parabola18 = new Parabola(point9, point10, line13);
        Point point19 = parabola18.vertex;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Point point27 = null;
        line25.point1 = point27;
        parabola18.directrix = line25;
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        Point point39 = null;
        line37.point1 = point39;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        boolean b48 = line37.perpendicular(line43);
        Point point49 = line37.point1;
        Point point52 = new Point((double) ' ', (double) 100L);
        double d53 = point52.x;
        double d54 = point52.y;
        double d55 = point52.x;
        line37.point2 = point52;
        boolean b57 = line25.perpendicular(line37);
        boolean b58 = line5.parallel(line37);
        Point point59 = line5.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line46 and line37", line46.equals(line37) ? line46.hashCode() == line37.hashCode() : true);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test118");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        line50.point1 = point52;
        boolean b54 = line37.parallel(line50);
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        Parabola parabola64 = new Parabola(point55, point56, line59);
        Line line65 = parabola64.FindCenter();
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        line71.point1 = point73;
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        Point point78 = null;
        Point point79 = null;
        Line line80 = new Line(point78, point79);
        boolean b81 = line77.parallel(line80);
        boolean b82 = line71.perpendicular(line77);
        Point point83 = line71.point1;
        parabola64.directrix = line71;
        Point point85 = null;
        Point point86 = null;
        Line line87 = new Line(point85, point86);
        Point point88 = null;
        Point point89 = null;
        Line line90 = new Line(point88, point89);
        boolean b91 = line87.parallel(line90);
        Point point92 = null;
        Line line93 = line90.rotate(point92);
        boolean b94 = line71.parallel(line90);
        boolean b95 = line50.parallel(line71);
        Point point98 = new Point(0.0d, (double) 10);
        line71.point1 = point98;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola64 and parabola26", parabola64.equals(parabola26) ? parabola64.hashCode() == parabola26.hashCode() : true);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test119");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) 10, (double) 10.0f);
        Line line39 = new Line(point21, point38);
        Point point40 = null;
        Vector vector42 = new Vector(point40, (java.lang.Integer) (-1));
        int i43 = vector42.degrees;
        boolean b44 = line39.equals((java.lang.Object) vector42);
        Point point47 = new Point((double) ' ', (double) 100L);
        double d48 = point47.x;
        double d49 = point47.y;
        double d50 = point47.y;
        point47.Mirror("");
        point47.y = 100.0f;
        point47.Mirror("");
        Vector vector58 = new Vector(point47, (java.lang.Integer) 10);
        vector42.origin = point47;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line39", line7.equals(line39) ? line7.hashCode() == line39.hashCode() : true);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test120");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        Point point27 = null;
        Vector vector29 = new Vector(point27, (java.lang.Integer) (-1));
        Point point30 = vector29.origin;
        boolean b32 = vector29.equals((java.lang.Object) (byte) 1);
        Point point33 = vector29.origin;
        Point point34 = null;
        Vector vector36 = new Vector(point34, (java.lang.Integer) (-1));
        Point point37 = vector36.origin;
        boolean b39 = vector36.equals((java.lang.Object) (byte) 1);
        Point point40 = vector36.origin;
        boolean b42 = vector36.equals((java.lang.Object) (-1.0f));
        boolean b43 = vector29.equals((java.lang.Object) vector36);
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line48.parallel(line51);
        Parabola parabola53 = new Parabola(point44, point45, line48);
        Line line54 = parabola53.FindCenter();
        Line line55 = parabola53.FindCenter();
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        double d61 = point58.x;
        parabola53.vertex = point58;
        Point point65 = new Point((double) ' ', (double) 100L);
        point65.y = 10.0d;
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        Point point77 = null;
        line73.point1 = point77;
        Parabola parabola79 = new Parabola(point58, point65, line73);
        vector36.origin = point58;
        Point point83 = new Point((double) (byte) -1, (-1.0d));
        double d84 = point83.x;
        vector36.origin = point83;
        double d86 = point83.x;
        line5.point2 = point83;
        Point point90 = new Point((double) '#', (double) (short) -1);
        Line line91 = line5.rotate(point90);
        point90.x = (-1.0f);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line91", line11.equals(line91) ? line11.hashCode() == line91.hashCode() : true);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test121");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = line45.point2;
        Point point49 = new Point((double) ' ', (double) 10.0f);
        line45.point1 = point49;
        Point point51 = null;
        Vector vector53 = new Vector(point51, (java.lang.Integer) (-1));
        Point point54 = vector53.origin;
        boolean b56 = vector53.equals((java.lang.Object) (byte) 1);
        Point point57 = vector53.origin;
        boolean b59 = vector53.equals((java.lang.Object) (-1.0f));
        Point point60 = vector53.origin;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Line line71 = parabola70.FindCenter();
        Line line72 = parabola70.FindCenter();
        Point point75 = new Point((double) ' ', (double) 100L);
        double d76 = point75.x;
        double d77 = point75.y;
        double d78 = point75.x;
        parabola70.vertex = point75;
        vector53.origin = point75;
        Line line81 = line45.rotate(point75);
        Point point82 = line45.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line81", line7.equals(line81) ? line7.hashCode() == line81.hashCode() : true);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test122");
        Point point2 = new Point((double) (byte) 1, (double) 100L);
        double d3 = point2.x;
        Point point4 = null;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        boolean b12 = line8.parallel(line11);
        Parabola parabola13 = new Parabola(point4, point5, line8);
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        boolean b24 = parabola13.equals((java.lang.Object) point15);
        Point point25 = parabola13.focus;
        Line line26 = parabola13.directrix;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Point point34 = null;
        line32.point1 = point34;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        boolean b43 = line32.perpendicular(line38);
        boolean b44 = line26.perpendicular(line32);
        Point point45 = null;
        Line line46 = line26.rotate(point45);
        point2.Mirror(line46);
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Point point58 = parabola57.vertex;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Point point66 = null;
        line64.point1 = point66;
        parabola57.directrix = line64;
        Point point69 = null;
        Line line70 = line64.rotate(point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        boolean b77 = line73.parallel(line76);
        Point point78 = null;
        Line line79 = line73.rotate(point78);
        boolean b80 = line70.perpendicular(line79);
        Point point83 = new Point((double) ' ', (double) 100L);
        Line line84 = line70.rotate(point83);
        Line line85 = new Line(point2, point83);
        double d86 = point2.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line76 and line85", line76.equals(line85) ? line76.hashCode() == line85.hashCode() : true);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test123");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Point point28 = null;
        line26.point1 = point28;
        parabola19.directrix = line26;
        Line line31 = parabola19.directrix;
        boolean b32 = line4.perpendicular(line31);
        Point point33 = null;
        Vector vector35 = new Vector(point33, (java.lang.Integer) (-1));
        int i36 = vector35.degrees;
        Point point37 = null;
        vector35.origin = point37;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Parabola parabola54 = new Parabola(point45, point46, line49);
        Line line55 = parabola54.FindCenter();
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Line line66 = parabola65.FindCenter();
        boolean b68 = parabola65.equals((java.lang.Object) 0.0f);
        boolean b69 = parabola54.equals((java.lang.Object) b68);
        Point point72 = new Point((double) ' ', (double) 100L);
        parabola54.vertex = point72;
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Point point81 = null;
        Line line82 = line76.rotate(point81);
        Parabola parabola83 = new Parabola(point41, point72, line76);
        vector35.origin = point72;
        point72.Mirror("");
        point72.Mirror("");
        double d89 = point72.x;
        line31.point1 = point72;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola65 and parabola19", parabola65.equals(parabola19) ? parabola65.hashCode() == parabola19.hashCode() : true);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test124");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        int i3 = vector2.degrees;
        Point point4 = null;
        vector2.origin = point4;
        Point point8 = new Point((double) ' ', (double) 100L);
        double d9 = point8.x;
        double d10 = point8.y;
        double d11 = point8.x;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Line line22 = parabola21.FindCenter();
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Parabola parabola32 = new Parabola(point23, point24, line27);
        Line line33 = parabola32.FindCenter();
        boolean b35 = parabola32.equals((java.lang.Object) 0.0f);
        boolean b36 = parabola21.equals((java.lang.Object) b35);
        Point point39 = new Point((double) ' ', (double) 100L);
        parabola21.vertex = point39;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = null;
        Line line49 = line43.rotate(point48);
        Parabola parabola50 = new Parabola(point8, point39, line43);
        vector2.origin = point39;
        Point point54 = new Point((double) ' ', (double) 100L);
        point54.y = 10.0d;
        Point point59 = new Point((double) ' ', (double) 100L);
        double d60 = point59.x;
        double d61 = point59.y;
        double d62 = point59.x;
        Line line63 = new Line(point54, point59);
        point54.Mirror("hi!");
        boolean b66 = point39.equals((java.lang.Object) point54);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line49 and line63", line49.equals(line63) ? line49.hashCode() == line63.hashCode() : true);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test125");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        point27.x = 10.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line7", line45.equals(line7) ? line45.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test126");
        Point point2 = new Point((double) '#', (double) ' ');
        double d3 = point2.x;
        point2.x = 10.0d;
        Point point8 = new Point((double) ' ', (double) 100L);
        double d9 = point8.x;
        double d10 = point8.y;
        Vector vector12 = new Vector(point8, (java.lang.Integer) 0);
        vector12.degrees = (byte) 1;
        Point point17 = new Point((double) (byte) 1, (double) (short) 0);
        vector12.origin = point17;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Parabola parabola28 = new Parabola(point19, point20, line23);
        Line line29 = parabola28.FindCenter();
        Line line30 = parabola28.FindCenter();
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        parabola28.vertex = point33;
        Point point40 = new Point((double) ' ', (double) 100L);
        point40.y = 10.0d;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        Point point52 = null;
        line48.point1 = point52;
        Parabola parabola54 = new Parabola(point33, point40, line48);
        vector12.origin = point33;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        vector12.origin = point58;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Parabola parabola71 = new Parabola(point62, point63, line66);
        Point point72 = parabola71.vertex;
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        boolean b79 = line75.parallel(line78);
        Point point80 = null;
        line78.point1 = point80;
        parabola71.directrix = line78;
        Point point83 = null;
        Line line84 = line78.rotate(point83);
        point58.Mirror(line78);
        Line line86 = new Line(point2, point58);
        Vector vector88 = new Vector(point58, (java.lang.Integer) 359);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line23 and line86", line23.equals(line86) ? line23.hashCode() == line86.hashCode() : true);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test127");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        boolean b12 = parabola9.equals((java.lang.Object) 0.0f);
        Point point13 = parabola9.vertex;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        boolean b30 = line19.perpendicular(line25);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        boolean b38 = line25.perpendicular(line36);
        parabola9.directrix = line36;
        Point point42 = new Point((double) 0, (double) 100.0f);
        Point point45 = new Point((double) ' ', (double) 100L);
        point45.y = 1L;
        Point point50 = new Point((double) (byte) 1, (double) 100L);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Point point58 = null;
        Line line59 = line53.rotate(point58);
        point50.Mirror(line59);
        Parabola parabola61 = new Parabola(point42, point45, line59);
        Point point62 = parabola61.focus;
        line36.point1 = point62;
        Vector vector65 = new Vector(point62, (java.lang.Integer) 0);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line36", line16.equals(line36) ? line16.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test128");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.y;
        point27.Mirror("");
        line5.point1 = point27;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        Parabola parabola43 = new Parabola(point34, point35, line38);
        Line line44 = parabola43.FindCenter();
        Line line45 = parabola43.FindCenter();
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        parabola43.vertex = point48;
        line5.point1 = point48;
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Parabola parabola63 = new Parabola(point54, point55, line58);
        Point point64 = line58.point1;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Point point72 = null;
        line70.point1 = point72;
        Point point74 = null;
        line70.point1 = point74;
        boolean b76 = line58.parallel(line70);
        boolean b77 = line5.parallel(line70);
        Point point78 = line70.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line14 and line5", line14.equals(line5) ? line14.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test129");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = line45.point2;
        Point point49 = new Point((double) ' ', (double) 10.0f);
        line45.point1 = point49;
        Point point51 = null;
        Vector vector53 = new Vector(point51, (java.lang.Integer) (-1));
        Point point54 = vector53.origin;
        boolean b56 = vector53.equals((java.lang.Object) (byte) 1);
        Point point57 = vector53.origin;
        boolean b59 = vector53.equals((java.lang.Object) (-1.0f));
        Point point60 = vector53.origin;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Line line71 = parabola70.FindCenter();
        Line line72 = parabola70.FindCenter();
        Point point75 = new Point((double) ' ', (double) 100L);
        double d76 = point75.x;
        double d77 = point75.y;
        double d78 = point75.x;
        parabola70.vertex = point75;
        vector53.origin = point75;
        Line line81 = line45.rotate(point75);
        Point point82 = null;
        Point point85 = new Point((double) (short) 10, (double) 100.0f);
        Line line86 = new Line(point82, point85);
        boolean b87 = line45.perpendicular(line86);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line15 and line81", line15.equals(line81) ? line15.hashCode() == line81.hashCode() : true);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test130");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Point point44 = null;
        Line line45 = line39.rotate(point44);
        boolean b46 = line36.parallel(line45);
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Parabola parabola56 = new Parabola(point47, point48, line51);
        Line line57 = parabola56.FindCenter();
        Line line58 = parabola56.FindCenter();
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.x;
        double d63 = point61.y;
        double d64 = point61.x;
        parabola56.vertex = point61;
        Vector vector67 = new Vector(point61, (java.lang.Integer) 1);
        line45.point1 = point61;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line51 and line45", line51.equals(line45) ? line51.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test131");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        boolean b12 = parabola9.equals((java.lang.Object) 0.0f);
        parabola9.Mirror();
        Point point14 = parabola9.focus;
        Point point17 = new Point((double) (byte) -1, (-1.0d));
        double d18 = point17.x;
        double d19 = point17.x;
        point17.y = 0;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        Point point29 = null;
        line27.point1 = point29;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        boolean b38 = line27.perpendicular(line33);
        Point point39 = line27.point1;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.x;
        double d44 = point42.y;
        double d45 = point42.x;
        line27.point2 = point42;
        Point point47 = line27.point1;
        Point point48 = line27.point2;
        Point point51 = new Point((double) '#', (double) ' ');
        double d52 = point51.x;
        line27.point2 = point51;
        Point point54 = line27.point2;
        Point point55 = line27.point2;
        point17.Mirror(line27);
        parabola9.focus = point17;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line27", line7.equals(line27) ? line7.hashCode() == line27.hashCode() : true);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test132");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = line22.point2;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        boolean b41 = line30.perpendicular(line36);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        boolean b49 = line36.perpendicular(line47);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Point point57 = null;
        line55.point1 = point57;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        boolean b66 = line55.perpendicular(line61);
        Point point67 = line55.point1;
        Point point70 = new Point((double) ' ', (double) 100L);
        double d71 = point70.x;
        double d72 = point70.y;
        double d73 = point70.x;
        line55.point2 = point70;
        Point point75 = line55.point1;
        Point point76 = line55.point2;
        Point point79 = new Point((double) '#', (double) ' ');
        double d80 = point79.x;
        line55.point2 = point79;
        boolean b82 = line47.perpendicular(line55);
        Point point85 = new Point((double) (byte) 1, (double) 100L);
        Point point86 = null;
        Point point87 = null;
        Line line88 = new Line(point86, point87);
        Point point89 = null;
        Point point90 = null;
        Line line91 = new Line(point89, point90);
        boolean b92 = line88.parallel(line91);
        Point point93 = null;
        Line line94 = line88.rotate(point93);
        point85.Mirror(line94);
        line55.point1 = point85;
        line22.point1 = point85;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line55", line4.equals(line55) ? line4.hashCode() == line55.hashCode() : true);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test133");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        line5.point1 = point9;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        Line line22 = parabola20.FindCenter();
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        parabola20.vertex = point25;
        Vector vector31 = new Vector(point25, (java.lang.Integer) 1);
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        boolean b61 = parabola58.equals((java.lang.Object) 0.0f);
        boolean b62 = parabola47.equals((java.lang.Object) b61);
        Point point65 = new Point((double) ' ', (double) 100L);
        parabola47.vertex = point65;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        Parabola parabola76 = new Parabola(point34, point65, line69);
        point65.Mirror("hi!");
        Line line79 = new Line(point25, point65);
        boolean b80 = line5.parallel(line79);
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        line86.point1 = point88;
        Point point90 = null;
        line86.point1 = point90;
        Point point92 = line86.point1;
        Point point93 = line86.point1;
        Point point94 = line86.point1;
        boolean b95 = line5.perpendicular(line86);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line79", line45.equals(line79) ? line45.hashCode() == line79.hashCode() : true);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test134");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point12 = parabola9.vertex;
        Point point13 = null;
        Vector vector15 = new Vector(point13, (java.lang.Integer) (-1));
        Point point16 = vector15.origin;
        boolean b18 = vector15.equals((java.lang.Object) (byte) 1);
        boolean b19 = parabola9.equals((java.lang.Object) vector15);
        boolean b21 = parabola9.equals((java.lang.Object) 0.0f);
        Point point24 = new Point((double) (byte) 0, 35.0d);
        parabola9.focus = point24;
        Point point26 = null;
        Vector vector28 = new Vector(point26, (java.lang.Integer) (-1));
        Point point29 = vector28.origin;
        int i30 = vector28.degrees;
        vector28.degrees = (short) 100;
        vector28.degrees = 359;
        Point point35 = vector28.origin;
        vector28.degrees = (byte) 10;
        Point point38 = vector28.origin;
        Point point39 = vector28.origin;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.x;
        double d44 = point42.y;
        double d45 = point42.x;
        double d46 = point42.x;
        double d47 = point42.y;
        double d48 = point42.x;
        vector28.origin = point42;
        Line line50 = new Line(point24, point42);
        double d51 = point42.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line50 and line7", line50.equals(line7) ? line50.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test135");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Parabola parabola37 = new Parabola(point28, point29, line32);
        Point point38 = parabola37.vertex;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Point point46 = null;
        line44.point1 = point46;
        parabola37.directrix = line44;
        Point point49 = null;
        Line line50 = line44.rotate(point49);
        boolean b51 = line22.perpendicular(line50);
        boolean b52 = line5.parallel(line50);
        Point point55 = new Point((double) 0, (double) 100.0f);
        Point point58 = new Point((double) ' ', (double) 100L);
        point58.y = 1L;
        Point point63 = new Point((double) (byte) 1, (double) 100L);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = null;
        Line line72 = line66.rotate(point71);
        point63.Mirror(line72);
        Parabola parabola74 = new Parabola(point55, point58, line72);
        Point point75 = parabola74.focus;
        line5.point2 = point75;
        point75.y = 359;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line5", line11.equals(line5) ? line11.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test136");
        Point point2 = new Point((double) 0, (double) 100.0f);
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 1L;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        Line line19 = line13.rotate(point18);
        point10.Mirror(line19);
        Parabola parabola21 = new Parabola(point2, point5, line19);
        Line line22 = parabola21.FindCenter();
        Point point23 = null;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        Vector vector30 = new Vector(point26, (java.lang.Integer) 0);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        Point point41 = null;
        line39.point1 = point41;
        Point point43 = line39.point1;
        boolean b44 = line33.equals((java.lang.Object) line39);
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Parabola parabola54 = new Parabola(point45, point46, line49);
        Line line55 = parabola54.FindCenter();
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Line line66 = parabola65.FindCenter();
        boolean b68 = parabola65.equals((java.lang.Object) 0.0f);
        boolean b69 = parabola54.equals((java.lang.Object) b68);
        Point point72 = new Point((double) ' ', (double) 100L);
        parabola54.vertex = point72;
        Line line74 = line33.rotate(point72);
        Parabola parabola75 = new Parabola(point23, point26, line74);
        Line line76 = parabola75.directrix;
        parabola21.directrix = line76;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line63 and line22", line63.equals(line22) ? line63.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test137");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Line line34 = parabola33.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Line line45 = parabola44.FindCenter();
        boolean b47 = parabola44.equals((java.lang.Object) 0.0f);
        boolean b48 = parabola33.equals((java.lang.Object) b47);
        Point point51 = new Point((double) ' ', (double) 100L);
        parabola33.vertex = point51;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Parabola parabola62 = new Parabola(point20, point51, line55);
        point51.Mirror("hi!");
        line5.point2 = point51;
        point51.y = 1L;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line39 and line5", line39.equals(line5) ? line39.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test138");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        Point point25 = null;
        line23.point1 = point25;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        boolean b34 = line23.perpendicular(line29);
        Point point35 = line23.point1;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Parabola parabola45 = new Parabola(point36, point37, line40);
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Parabola parabola55 = new Parabola(point46, point47, line50);
        Point point56 = parabola55.vertex;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        Point point64 = null;
        line62.point1 = point64;
        parabola55.directrix = line62;
        Point point67 = null;
        Line line68 = line62.rotate(point67);
        boolean b69 = line40.perpendicular(line68);
        boolean b70 = line23.parallel(line68);
        boolean b71 = line5.perpendicular(line68);
        Point point72 = null;
        Vector vector74 = new Vector(point72, (java.lang.Integer) (-1));
        int i75 = vector74.degrees;
        Point point78 = new Point((double) ' ', (double) 100L);
        point78.Mirror("");
        double d81 = point78.x;
        vector74.origin = point78;
        Point point83 = vector74.origin;
        Point point86 = new Point((double) 10, (double) 10.0f);
        point86.Mirror("hi!");
        Line line89 = new Line(point83, point86);
        line5.point2 = point83;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line23 and line89", line23.equals(line89) ? line23.hashCode() == line89.hashCode() : true);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test139");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.y;
        Vector vector5 = new Vector(point2, (java.lang.Integer) 100);
        Point point6 = null;
        Vector vector8 = new Vector(point6, (java.lang.Integer) (-1));
        int i9 = vector8.degrees;
        Point point10 = null;
        vector8.origin = point10;
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Line line28 = parabola27.FindCenter();
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        boolean b41 = parabola38.equals((java.lang.Object) 0.0f);
        boolean b42 = parabola27.equals((java.lang.Object) b41);
        Point point45 = new Point((double) ' ', (double) 100L);
        parabola27.vertex = point45;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Point point54 = null;
        Line line55 = line49.rotate(point54);
        Parabola parabola56 = new Parabola(point14, point45, line49);
        vector8.origin = point45;
        point45.Mirror("");
        point45.Mirror("");
        point45.x = (-1.0f);
        Line line64 = new Line(point2, point45);
        Vector vector66 = new Vector(point45, (java.lang.Integer) 100);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line52 and line64", line52.equals(line64) ? line52.hashCode() == line64.hashCode() : true);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test140");
        Point point2 = new Point(0.0d, (double) 1.0f);
        Point point3 = null;
        Point point4 = null;
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        boolean b11 = line7.parallel(line10);
        Parabola parabola12 = new Parabola(point3, point4, line7);
        Line line13 = parabola12.FindCenter();
        boolean b15 = parabola12.equals((java.lang.Object) 0.0f);
        Point point18 = new Point((double) ' ', (double) 100L);
        double d19 = point18.x;
        double d20 = point18.y;
        Vector vector22 = new Vector(point18, (java.lang.Integer) 0);
        vector22.degrees = (byte) 1;
        Point point27 = new Point((double) (byte) 1, (double) (short) 0);
        vector22.origin = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Point point50 = new Point((double) ' ', (double) 100L);
        point50.y = 10.0d;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        line58.point1 = point60;
        Point point62 = null;
        line58.point1 = point62;
        Parabola parabola64 = new Parabola(point43, point50, line58);
        vector22.origin = point43;
        Point point68 = new Point((double) ' ', (double) 100L);
        double d69 = point68.x;
        double d70 = point68.y;
        vector22.origin = point68;
        parabola12.vertex = point68;
        Point point75 = new Point(0.0d, (double) 10);
        parabola12.vertex = point75;
        java.lang.Object obj77 = null;
        boolean b78 = point75.equals(obj77);
        Line line79 = new Line(point2, point75);
        point75.y = (short) 0;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line10 and line79", line10.equals(line79) ? line10.hashCode() == line79.hashCode() : true);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test141");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = vector2.origin;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Line line18 = parabola17.FindCenter();
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Parabola parabola28 = new Parabola(point19, point20, line23);
        Line line29 = parabola28.FindCenter();
        boolean b31 = parabola28.equals((java.lang.Object) 0.0f);
        boolean b32 = parabola17.equals((java.lang.Object) b31);
        Point point35 = new Point((double) ' ', (double) 100L);
        parabola17.vertex = point35;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Point point47 = parabola46.focus;
        Point point50 = new Point((double) ' ', (double) 100L);
        double d51 = point50.y;
        parabola46.focus = point50;
        Line line53 = new Line(point35, point50);
        vector2.origin = point35;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line23 and line53", line23.equals(line53) ? line23.hashCode() == line53.hashCode() : true);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test142");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        boolean b47 = line35.parallel(line45);
        Point point50 = new Point((double) 0, (double) 100.0f);
        Point point53 = new Point((double) ' ', (double) 100L);
        point53.y = 1L;
        Point point58 = new Point((double) (byte) 1, (double) 100L);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Point point66 = null;
        Line line67 = line61.rotate(point66);
        point58.Mirror(line67);
        Parabola parabola69 = new Parabola(point50, point53, line67);
        line45.point1 = point50;
        point50.x = (-1);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line45", line7.equals(line45) ? line7.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test143");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        Point point29 = new Point((double) '#', (double) ' ');
        double d30 = point29.x;
        line5.point2 = point29;
        double d32 = point29.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line2", line5.equals(line2) ? line5.hashCode() == line2.hashCode() : true);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test144");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        int i9 = vector6.degrees;
        vector6.degrees = 359;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Point point32 = parabola31.vertex;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Point point40 = null;
        line38.point1 = point40;
        parabola31.directrix = line38;
        Point point43 = null;
        Line line44 = line38.rotate(point43);
        boolean b45 = line16.perpendicular(line44);
        boolean b46 = vector6.equals((java.lang.Object) line16);
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Parabola parabola56 = new Parabola(point47, point48, line51);
        Line line57 = parabola56.FindCenter();
        Line line58 = parabola56.FindCenter();
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.x;
        double d63 = point61.y;
        double d64 = point61.x;
        parabola56.vertex = point61;
        Vector vector67 = new Vector(point61, (java.lang.Integer) 1);
        point61.y = 1.0f;
        double d70 = point61.x;
        double d71 = point61.x;
        Point point72 = null;
        Point point73 = null;
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Parabola parabola81 = new Parabola(point72, point73, line76);
        Point point82 = parabola81.focus;
        Point point85 = new Point((double) ' ', (double) 100L);
        double d86 = point85.y;
        parabola81.focus = point85;
        Line line88 = parabola81.directrix;
        Point point91 = new Point((double) (byte) -1, (-1.0d));
        parabola81.focus = point91;
        Line line93 = new Line(point61, point91);
        vector6.origin = point91;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line38 and line93", line38.equals(line93) ? line38.hashCode() == line93.hashCode() : true);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test145");
        Point point2 = new Point((double) 0, (double) 100.0f);
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 1L;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        Line line19 = line13.rotate(point18);
        point10.Mirror(line19);
        Parabola parabola21 = new Parabola(point2, point5, line19);
        Line line22 = parabola21.FindCenter();
        Point point23 = parabola21.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line22", line16.equals(line22) ? line16.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test146");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        double d29 = point25.x;
        double d30 = point25.y;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        double d37 = point33.x;
        double d38 = point33.y;
        Line line39 = new Line(point25, point33);
        line22.point2 = point25;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line22", line4.equals(line22) ? line4.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test147");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = line45.point2;
        Point point49 = new Point((double) ' ', (double) 10.0f);
        line45.point1 = point49;
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Line line61 = parabola60.FindCenter();
        Line line62 = parabola60.FindCenter();
        Point point65 = new Point((double) ' ', (double) 100L);
        double d66 = point65.x;
        double d67 = point65.y;
        double d68 = point65.x;
        parabola60.vertex = point65;
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        boolean b76 = line72.parallel(line75);
        Point point77 = null;
        line72.point1 = point77;
        point65.Mirror(line72);
        point65.x = 'a';
        Line line82 = new Line(point49, point65);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line55 and line45", line55.equals(line45) ? line55.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test148");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Parabola parabola30 = new Parabola(point21, point22, line25);
        Point point31 = parabola30.vertex;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        Point point39 = null;
        line37.point1 = point39;
        parabola30.directrix = line37;
        Point point42 = parabola30.vertex;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.y;
        Vector vector48 = new Vector(point45, (java.lang.Integer) 0);
        parabola30.vertex = point45;
        Line line50 = line16.rotate(point45);
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Line line61 = parabola60.FindCenter();
        Line line62 = parabola60.FindCenter();
        Point point63 = parabola60.vertex;
        Point point64 = null;
        Vector vector66 = new Vector(point64, (java.lang.Integer) (-1));
        Point point67 = vector66.origin;
        boolean b69 = vector66.equals((java.lang.Object) (byte) 1);
        boolean b70 = parabola60.equals((java.lang.Object) vector66);
        boolean b72 = parabola60.equals((java.lang.Object) 0.0f);
        Point point75 = new Point((double) (byte) 0, 35.0d);
        parabola60.focus = point75;
        line16.point2 = point75;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line55 and line50", line55.equals(line50) ? line55.hashCode() == line50.hashCode() : true);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test149");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        int i3 = vector2.degrees;
        Point point6 = new Point((double) ' ', (double) 100L);
        point6.Mirror("");
        double d9 = point6.x;
        vector2.origin = point6;
        Point point11 = vector2.origin;
        Point point14 = new Point((double) 10, (double) 10.0f);
        point14.Mirror("hi!");
        Line line17 = new Line(point11, point14);
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        Vector vector24 = new Vector(point20, (java.lang.Integer) 0);
        vector24.degrees = (byte) 1;
        int i27 = vector24.degrees;
        int i28 = vector24.degrees;
        Point point31 = new Point((double) (byte) -1, (-1.0d));
        double d32 = point31.x;
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        double d38 = point35.x;
        double d39 = point35.x;
        double d40 = point35.y;
        Line line41 = new Line(point31, point35);
        vector24.origin = point35;
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Parabola parabola52 = new Parabola(point43, point44, line47);
        Line line53 = parabola52.FindCenter();
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        boolean b60 = line56.parallel(line59);
        Point point61 = null;
        line59.point1 = point61;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        boolean b70 = line59.perpendicular(line65);
        Point point71 = line59.point1;
        parabola52.directrix = line59;
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        boolean b79 = line75.parallel(line78);
        Point point80 = null;
        Line line81 = line78.rotate(point80);
        boolean b82 = line59.parallel(line78);
        Point point83 = null;
        Point point84 = null;
        Line line85 = new Line(point83, point84);
        Point point86 = null;
        Point point87 = null;
        Line line88 = new Line(point86, point87);
        boolean b89 = line85.parallel(line88);
        boolean b90 = line78.parallel(line88);
        Parabola parabola91 = new Parabola(point11, point35, line88);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line65 and line17", line65.equals(line17) ? line65.hashCode() == line17.hashCode() : true);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test150");
        Point point0 = null;
        Point point3 = new Point((double) '#', (double) ' ');
        double d4 = point3.x;
        point3.x = 10.0d;
        Point point9 = new Point((double) ' ', (double) 100L);
        double d10 = point9.x;
        double d11 = point9.y;
        Vector vector13 = new Vector(point9, (java.lang.Integer) 0);
        vector13.degrees = (byte) 1;
        Point point18 = new Point((double) (byte) 1, (double) (short) 0);
        vector13.origin = point18;
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        Parabola parabola29 = new Parabola(point20, point21, line24);
        Line line30 = parabola29.FindCenter();
        Line line31 = parabola29.FindCenter();
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        parabola29.vertex = point34;
        Point point41 = new Point((double) ' ', (double) 100L);
        point41.y = 10.0d;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        Point point53 = null;
        line49.point1 = point53;
        Parabola parabola55 = new Parabola(point34, point41, line49);
        vector13.origin = point34;
        Point point59 = new Point((double) ' ', (double) 100L);
        double d60 = point59.x;
        double d61 = point59.y;
        vector13.origin = point59;
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Parabola parabola72 = new Parabola(point63, point64, line67);
        Point point73 = parabola72.vertex;
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Point point81 = null;
        line79.point1 = point81;
        parabola72.directrix = line79;
        Point point84 = null;
        Line line85 = line79.rotate(point84);
        point59.Mirror(line79);
        Line line87 = new Line(point3, point59);
        Line line88 = new Line(point0, point59);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line70 and line87", line70.equals(line87) ? line70.hashCode() == line87.hashCode() : true);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test151");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        Vector vector39 = new Vector(point35, (java.lang.Integer) 0);
        vector39.degrees = (byte) 1;
        int i42 = vector39.degrees;
        vector39.degrees = 359;
        Point point47 = new Point((double) ' ', (double) 100L);
        double d48 = point47.x;
        double d49 = point47.y;
        double d50 = point47.y;
        point47.Mirror("hi!");
        vector39.origin = point47;
        Point point56 = new Point((double) '#', (double) (short) 0);
        vector39.origin = point56;
        line22.point1 = point56;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line13", line16.equals(line13) ? line16.hashCode() == line13.hashCode() : true);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test152");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.y;
        point14.Mirror("");
        parabola9.vertex = point14;
        Line line21 = parabola9.FindCenter();
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        boolean b34 = parabola31.equals((java.lang.Object) 0.0f);
        Line line35 = parabola31.directrix;
        Point point36 = line35.point1;
        boolean b37 = parabola9.equals((java.lang.Object) line35);
        Point point40 = new Point((double) 359, 35.0d);
        line35.point2 = point40;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line26", line7.equals(line26) ? line7.hashCode() == line26.hashCode() : true);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test153");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        boolean b46 = line35.perpendicular(line41);
        Point point47 = line35.point1;
        boolean b48 = line16.parallel(line35);
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Point point59 = parabola58.vertex;
        Point point62 = new Point((double) (short) 10, (double) 100.0f);
        parabola58.vertex = point62;
        Point point64 = parabola58.vertex;
        point64.Mirror("");
        line35.point2 = point64;
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        boolean b83 = line79.parallel(line82);
        boolean b84 = line73.perpendicular(line79);
        Point point85 = line73.point1;
        Point point88 = new Point((double) ' ', (double) 100L);
        double d89 = point88.x;
        double d90 = point88.y;
        double d91 = point88.x;
        line73.point2 = point88;
        line35.point2 = point88;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line79 and line73", line79.equals(line73) ? line79.hashCode() == line73.hashCode() : true);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test154");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point15 = new Point((double) ' ', (double) 100L);
        double d16 = point15.x;
        double d17 = point15.y;
        double d18 = point15.x;
        double d19 = point15.y;
        vector6.origin = point15;
        vector6.degrees = (byte) 100;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Parabola parabola32 = new Parabola(point23, point24, line27);
        Line line33 = parabola32.FindCenter();
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        Point point41 = null;
        line39.point1 = point41;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        boolean b50 = line39.perpendicular(line45);
        Point point51 = line39.point1;
        parabola32.directrix = line39;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        line58.point1 = point60;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        boolean b69 = line58.perpendicular(line64);
        Point point70 = line58.point1;
        boolean b71 = line39.parallel(line58);
        Point point72 = null;
        Point point73 = null;
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Parabola parabola81 = new Parabola(point72, point73, line76);
        Point point82 = parabola81.vertex;
        Point point85 = new Point((double) (short) 10, (double) 100.0f);
        parabola81.vertex = point85;
        Point point87 = parabola81.vertex;
        point87.Mirror("");
        line58.point2 = point87;
        vector6.origin = point87;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line27 and line58", line27.equals(line58) ? line27.hashCode() == line58.hashCode() : true);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test155");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = parabola14.vertex;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Point point23 = null;
        line21.point1 = point23;
        parabola14.directrix = line21;
        point2.Mirror(line21);
        Vector vector28 = new Vector(point2, (java.lang.Integer) 0);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.y = 1.0f;
        Line line52 = new Line(point2, point43);
        point43.x = 1.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line12 and line52", line12.equals(line52) ? line12.hashCode() == line52.hashCode() : true);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test156");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = parabola52.vertex;
        Line line54 = parabola52.directrix;
        Line line55 = parabola52.directrix;
        Point point58 = new Point((double) 100.0f, 32.0d);
        double d59 = point58.x;
        point58.y = '#';
        line55.point2 = point58;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola31 and parabola52", parabola31.equals(parabola52) ? parabola31.hashCode() == parabola52.hashCode() : true);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test157");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.directrix;
        Line line11 = parabola9.directrix;
        Point point14 = new Point((double) 0, (double) 100.0f);
        Point point17 = new Point((double) ' ', (double) 100L);
        point17.y = 1L;
        Point point22 = new Point((double) (byte) 1, (double) 100L);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        point22.Mirror(line31);
        Parabola parabola33 = new Parabola(point14, point17, line31);
        point14.y = 1L;
        double d36 = point14.y;
        Point point39 = new Point((double) ' ', (double) 100L);
        double d40 = point39.x;
        double d41 = point39.y;
        boolean b42 = point14.equals((java.lang.Object) point39);
        Vector vector44 = new Vector(point39, (java.lang.Integer) (-1));
        line11.point2 = point39;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line11", line7.equals(line11) ? line7.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test158");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) 1);
        Point point3 = vector2.origin;
        int i4 = vector2.degrees;
        int i5 = vector2.degrees;
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        boolean b12 = line8.parallel(line11);
        Point point13 = line8.point1;
        Point point16 = new Point((double) 359, 32.0d);
        line8.point1 = point16;
        vector2.origin = point16;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line8 and line11", line8.equals(line11) ? line8.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test159");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point19 = new Point((double) ' ', (double) 100L);
        double d20 = point19.x;
        double d21 = point19.y;
        double d22 = point19.y;
        point19.Mirror("");
        point19.y = 100.0f;
        Line line27 = line11.rotate(point19);
        Point point28 = null;
        Vector vector30 = new Vector(point28, (java.lang.Integer) (-1));
        int i31 = vector30.degrees;
        Point point32 = null;
        vector30.origin = point32;
        int i34 = vector30.degrees;
        Point point37 = new Point((double) '#', (double) ' ');
        double d38 = point37.x;
        point37.x = 10.0d;
        vector30.origin = point37;
        line27.point2 = point37;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line2", line11.equals(line2) ? line11.hashCode() == line2.hashCode() : true);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test160");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = line5.point1;
        Point point21 = new Point(0.0d, (double) 10);
        double d22 = point21.y;
        Line line23 = line5.rotate(point21);
        Point point24 = line23.point1;
        Point point25 = null;
        Vector vector27 = new Vector(point25, (java.lang.Integer) (-1));
        Point point28 = vector27.origin;
        boolean b30 = vector27.equals((java.lang.Object) (byte) 1);
        Point point31 = vector27.origin;
        boolean b33 = vector27.equals((java.lang.Object) (-1.0f));
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        Parabola parabola43 = new Parabola(point34, point35, line38);
        Point point44 = parabola43.vertex;
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        line50.point1 = point52;
        parabola43.directrix = line50;
        Point point55 = parabola43.vertex;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.y;
        Vector vector61 = new Vector(point58, (java.lang.Integer) 0);
        parabola43.vertex = point58;
        boolean b63 = vector27.equals((java.lang.Object) parabola43);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = line66.point1;
        Point point74 = new Point((double) '#', (double) ' ');
        line66.point1 = point74;
        parabola43.directrix = line66;
        boolean b77 = line23.equals((java.lang.Object) parabola43);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line41 and line66", line41.equals(line66) ? line41.hashCode() == line66.hashCode() : true);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test161");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = line2.point1;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Point point15 = null;
        line13.point1 = point15;
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line13.perpendicular(line19);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        boolean b32 = line19.perpendicular(line30);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Point point40 = null;
        line38.point1 = point40;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        boolean b49 = line38.perpendicular(line44);
        Point point50 = line38.point1;
        Point point53 = new Point((double) ' ', (double) 100L);
        double d54 = point53.x;
        double d55 = point53.y;
        double d56 = point53.x;
        line38.point2 = point53;
        Point point58 = line38.point1;
        Point point59 = line38.point2;
        Point point62 = new Point((double) '#', (double) ' ');
        double d63 = point62.x;
        line38.point2 = point62;
        boolean b65 = line30.perpendicular(line38);
        Point point68 = new Point((double) (byte) 1, (double) 100L);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        Point point76 = null;
        Line line77 = line71.rotate(point76);
        point68.Mirror(line77);
        line38.point1 = point68;
        boolean b80 = line2.perpendicular(line38);
        Point point83 = new Point((double) (short) 10, (double) 100.0f);
        Vector vector85 = new Vector(point83, (java.lang.Integer) 359);
        Line line86 = line2.rotate(point83);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line74 and line38", line74.equals(line38) ? line74.hashCode() == line38.hashCode() : true);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test162");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        Point point27 = null;
        Vector vector29 = new Vector(point27, (java.lang.Integer) (-1));
        Point point30 = vector29.origin;
        boolean b32 = vector29.equals((java.lang.Object) (byte) 1);
        Point point33 = vector29.origin;
        Point point34 = null;
        Vector vector36 = new Vector(point34, (java.lang.Integer) (-1));
        Point point37 = vector36.origin;
        boolean b39 = vector36.equals((java.lang.Object) (byte) 1);
        Point point40 = vector36.origin;
        boolean b42 = vector36.equals((java.lang.Object) (-1.0f));
        boolean b43 = vector29.equals((java.lang.Object) vector36);
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line48.parallel(line51);
        Parabola parabola53 = new Parabola(point44, point45, line48);
        Line line54 = parabola53.FindCenter();
        Line line55 = parabola53.FindCenter();
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        double d61 = point58.x;
        parabola53.vertex = point58;
        Point point65 = new Point((double) ' ', (double) 100L);
        point65.y = 10.0d;
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        Point point77 = null;
        line73.point1 = point77;
        Parabola parabola79 = new Parabola(point58, point65, line73);
        vector36.origin = point58;
        Point point83 = new Point((double) (byte) -1, (-1.0d));
        double d84 = point83.x;
        vector36.origin = point83;
        double d86 = point83.x;
        line5.point2 = point83;
        Point point90 = new Point((double) '#', (double) (short) -1);
        Line line91 = line5.rotate(point90);
        point90.y = 1.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line51 and line91", line51.equals(line91) ? line51.hashCode() == line91.hashCode() : true);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test163");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Vector vector9 = new Vector(point7, (java.lang.Integer) (-1));
        Point point10 = vector9.origin;
        boolean b12 = vector9.equals((java.lang.Object) (byte) 1);
        Point point13 = vector9.origin;
        boolean b15 = vector9.equals((java.lang.Object) (-1.0f));
        boolean b16 = vector2.equals((java.lang.Object) vector9);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Point point27 = parabola26.vertex;
        parabola26.Mirror();
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.y;
        point31.Mirror("");
        parabola26.vertex = point31;
        Line line38 = parabola26.FindCenter();
        Point point39 = parabola26.vertex;
        vector2.origin = point39;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.y;
        Vector vector46 = new Vector(point43, (java.lang.Integer) 0);
        point43.Mirror("hi!");
        double d49 = point43.x;
        Line line50 = new Line(point39, point43);
        Vector vector52 = new Vector(point43, (java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line50", line21.equals(line50) ? line21.hashCode() == line50.hashCode() : true);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test164");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        vector7.degrees = (byte) 1;
        Point point12 = new Point((double) (byte) 1, (double) (short) 0);
        vector7.origin = point12;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Line line24 = parabola23.FindCenter();
        Line line25 = parabola23.FindCenter();
        Point point28 = new Point((double) ' ', (double) 100L);
        double d29 = point28.x;
        double d30 = point28.y;
        double d31 = point28.x;
        parabola23.vertex = point28;
        Point point35 = new Point((double) ' ', (double) 100L);
        point35.y = 10.0d;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Point point45 = null;
        line43.point1 = point45;
        Point point47 = null;
        line43.point1 = point47;
        Parabola parabola49 = new Parabola(point28, point35, line43);
        vector7.origin = point28;
        Line line51 = new Line(point0, point28);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        line57.point1 = point59;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        boolean b68 = line57.perpendicular(line63);
        Point point69 = line57.point1;
        Point point72 = new Point((double) ' ', (double) 100L);
        double d73 = point72.x;
        double d74 = point72.y;
        double d75 = point72.x;
        line57.point2 = point72;
        Point point77 = line57.point1;
        Point point78 = line57.point2;
        boolean b79 = line51.equals((java.lang.Object) line57);
        Point point80 = line57.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line51", line21.equals(line51) ? line21.hashCode() == line51.hashCode() : true);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test165");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Point point16 = parabola15.vertex;
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        Point point24 = null;
        line22.point1 = point24;
        parabola15.directrix = line22;
        point3.Mirror(line22);
        Line line28 = new Line(point0, point3);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.vertex;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Point point47 = null;
        line45.point1 = point47;
        parabola38.directrix = line45;
        Point point50 = null;
        Line line51 = line45.rotate(point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        Line line60 = line54.rotate(point59);
        boolean b61 = line51.perpendicular(line60);
        Point point64 = new Point((double) ' ', (double) 100L);
        Line line65 = line51.rotate(point64);
        point64.y = (-1);
        Line line68 = new Line(point3, point64);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line13 and line28", line13.equals(line28) ? line13.hashCode() == line28.hashCode() : true);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test166");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point13 = new Point((double) ' ', (double) 100L);
        double d14 = point13.y;
        parabola9.focus = point13;
        Line line16 = parabola9.directrix;
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        Point point24 = null;
        line22.point1 = point24;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        boolean b33 = line22.perpendicular(line28);
        Point point34 = line22.point1;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Parabola parabola54 = new Parabola(point45, point46, line49);
        Point point55 = parabola54.vertex;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        line61.point1 = point63;
        parabola54.directrix = line61;
        Point point66 = null;
        Line line67 = line61.rotate(point66);
        boolean b68 = line39.perpendicular(line67);
        boolean b69 = line22.parallel(line67);
        Point point72 = new Point((double) 0, (double) 100.0f);
        Point point75 = new Point((double) ' ', (double) 100L);
        point75.y = 1L;
        Point point80 = new Point((double) (byte) 1, (double) 100L);
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        Line line89 = line83.rotate(point88);
        point80.Mirror(line89);
        Parabola parabola91 = new Parabola(point72, point75, line89);
        Point point92 = parabola91.focus;
        line22.point2 = point92;
        line16.point2 = point92;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line22", line19.equals(line22) ? line19.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test167");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) 10, (double) 10.0f);
        Line line39 = new Line(point21, point38);
        double d40 = point21.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line39", line4.equals(line39) ? line4.hashCode() == line39.hashCode() : true);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test168");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = line22.point1;
        Point point27 = new Point((double) '4', 100.0d);
        Line line28 = line22.rotate(point27);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point40, point41, line44);
        Line line50 = parabola49.FindCenter();
        boolean b52 = parabola49.equals((java.lang.Object) 0.0f);
        boolean b53 = parabola38.equals((java.lang.Object) b52);
        Line line54 = parabola38.directrix;
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Point point62 = null;
        line60.point1 = point62;
        Point point64 = null;
        line60.point1 = point64;
        Point point66 = line60.point1;
        Point point67 = line60.point1;
        parabola38.directrix = line60;
        boolean b69 = line28.perpendicular(line60);
        Point point72 = new Point((double) ' ', (double) 10.0f);
        line28.point2 = point72;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line57 and line16", line57.equals(line16) ? line57.hashCode() == line16.hashCode() : true);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test169");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.y;
        point27.Mirror("");
        line5.point1 = point27;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        boolean b42 = line38.parallel(line41);
        Parabola parabola43 = new Parabola(point34, point35, line38);
        Line line44 = parabola43.FindCenter();
        Line line45 = parabola43.FindCenter();
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        parabola43.vertex = point48;
        line5.point1 = point48;
        Vector vector55 = new Vector(point48, (java.lang.Integer) 100);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line38 and line5", line38.equals(line5) ? line38.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test170");
        Point point0 = null;
        Point point3 = new Point((double) (short) 10, (double) 100.0f);
        Line line4 = new Line(point0, point3);
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        Parabola parabola24 = new Parabola(point15, point16, line19);
        boolean b25 = parabola14.equals((java.lang.Object) point16);
        Point point26 = parabola14.focus;
        Line line27 = parabola14.directrix;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Point point35 = null;
        line33.point1 = point35;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        boolean b44 = line33.perpendicular(line39);
        boolean b45 = line27.perpendicular(line33);
        boolean b46 = line4.perpendicular(line27);
        Point point49 = new Point((double) ' ', (double) 100L);
        double d50 = point49.y;
        double d51 = point49.y;
        point49.Mirror("");
        line27.point1 = point49;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line27", line19.equals(line27) ? line19.hashCode() == line27.hashCode() : true);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test171");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Line line21 = parabola9.directrix;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        double d28 = point24.x;
        double d29 = point24.y;
        Point point32 = new Point((double) (byte) -1, (-1.0d));
        Point point35 = new Point((double) ' ', (double) 100L);
        point35.y = 10.0d;
        Point point40 = new Point((double) ' ', (double) 100L);
        double d41 = point40.x;
        double d42 = point40.y;
        double d43 = point40.x;
        Line line44 = new Line(point35, point40);
        double d45 = point40.y;
        Line line46 = new Line(point32, point40);
        Line line47 = new Line(point24, point40);
        point40.Mirror("");
        Line line50 = line21.rotate(point40);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line46", line16.equals(line46) ? line16.hashCode() == line46.hashCode() : true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test172");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        point27.y = 97;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line36 and line45", line36.equals(line45) ? line36.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test173");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) '#', (double) ' ');
        double d39 = point38.x;
        parabola35.vertex = point38;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Parabola parabola50 = new Parabola(point41, point42, line45);
        Point point51 = parabola50.focus;
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Point point62 = null;
        line60.point1 = point62;
        Point point64 = line60.point1;
        boolean b65 = line54.equals((java.lang.Object) line60);
        parabola50.directrix = line60;
        Point point69 = new Point((double) ' ', (double) 100L);
        Line line70 = line60.rotate(point69);
        parabola35.directrix = line70;
        Line line72 = parabola35.FindCenter();
        Line line73 = parabola35.FindCenter();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line60 and line72", line60.equals(line72) ? line60.hashCode() == line72.hashCode() : true);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test174");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point8 = new Point((double) ' ', (double) 100L);
        double d9 = point8.x;
        double d10 = point8.y;
        double d11 = point8.x;
        double d12 = point8.x;
        double d13 = point8.y;
        Point point16 = new Point((double) ' ', (double) 100L);
        double d17 = point16.x;
        double d18 = point16.y;
        double d19 = point16.x;
        double d20 = point16.x;
        double d21 = point16.y;
        Line line22 = new Line(point8, point16);
        vector2.origin = point8;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        boolean b40 = line29.perpendicular(line35);
        Point point41 = line29.point1;
        Point point44 = new Point((double) ' ', (double) 100L);
        double d45 = point44.x;
        double d46 = point44.y;
        double d47 = point44.x;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        Parabola parabola68 = new Parabola(point59, point60, line63);
        Line line69 = parabola68.FindCenter();
        boolean b71 = parabola68.equals((java.lang.Object) 0.0f);
        boolean b72 = parabola57.equals((java.lang.Object) b71);
        Point point75 = new Point((double) ' ', (double) 100L);
        parabola57.vertex = point75;
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        boolean b83 = line79.parallel(line82);
        Point point84 = null;
        Line line85 = line79.rotate(point84);
        Parabola parabola86 = new Parabola(point44, point75, line79);
        point75.Mirror("hi!");
        line29.point2 = point75;
        boolean b90 = vector2.equals((java.lang.Object) line29);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line35 and line22", line35.equals(line22) ? line35.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test175");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        boolean b12 = line8.parallel(line11);
        Point point13 = null;
        line11.point1 = point13;
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        boolean b21 = line17.parallel(line20);
        boolean b22 = line11.perpendicular(line17);
        Point point23 = line11.point1;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        double d29 = point26.x;
        line11.point2 = point26;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.y;
        point33.Mirror("");
        line11.point1 = point33;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point40, point41, line44);
        Line line50 = parabola49.FindCenter();
        Line line51 = parabola49.FindCenter();
        Point point54 = new Point((double) ' ', (double) 100L);
        double d55 = point54.x;
        double d56 = point54.y;
        double d57 = point54.x;
        parabola49.vertex = point54;
        line11.point1 = point54;
        vector2.origin = point54;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line20", line11.equals(line20) ? line11.hashCode() == line20.hashCode() : true);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test176");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        point33.Mirror("hi!");
        Vector vector48 = new Vector(point33, (java.lang.Integer) 10);
        Point point49 = vector48.origin;
        Point point52 = new Point((double) (short) 10, (double) (short) -1);
        Point point55 = new Point((double) '#', (double) (short) 0);
        double d56 = point55.y;
        boolean b57 = point52.equals((java.lang.Object) point55);
        vector48.origin = point55;
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.x;
        double d63 = point61.y;
        double d64 = point61.x;
        double d65 = point61.x;
        double d66 = point61.y;
        Point point69 = new Point((double) (byte) -1, (-1.0d));
        Point point72 = new Point((double) ' ', (double) 100L);
        point72.y = 10.0d;
        Point point77 = new Point((double) ' ', (double) 100L);
        double d78 = point77.x;
        double d79 = point77.y;
        double d80 = point77.x;
        Line line81 = new Line(point72, point77);
        double d82 = point77.y;
        Line line83 = new Line(point69, point77);
        Line line84 = new Line(point61, point77);
        vector48.origin = point61;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line84 and line10", line84.equals(line10) ? line84.hashCode() == line10.hashCode() : true);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test177");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        line28.point1 = point30;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        boolean b39 = line28.perpendicular(line34);
        Point point40 = line28.point1;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        line28.point2 = point43;
        boolean b48 = line16.perpendicular(line28);
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Point point59 = parabola58.vertex;
        parabola58.Mirror();
        Point point63 = new Point((double) ' ', (double) 100L);
        double d64 = point63.x;
        double d65 = point63.y;
        double d66 = point63.y;
        point63.Mirror("");
        parabola58.vertex = point63;
        Line line70 = parabola58.FindCenter();
        parabola58.Mirror();
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.y;
        Vector vector77 = new Vector(point74, (java.lang.Integer) 0);
        point74.Mirror("");
        boolean b80 = parabola58.equals((java.lang.Object) point74);
        double d81 = point74.x;
        Point point84 = new Point((double) ' ', (double) 100L);
        double d85 = point84.x;
        double d86 = point84.y;
        double d87 = point84.x;
        double d88 = point84.y;
        double d89 = point84.y;
        Line line90 = new Line(point74, point84);
        Line line91 = line16.rotate(point74);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line56 and line90", line56.equals(line90) ? line56.hashCode() == line90.hashCode() : true);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test178");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 10.0d;
        Point point10 = new Point((double) ' ', (double) 100L);
        double d11 = point10.x;
        double d12 = point10.y;
        double d13 = point10.x;
        Line line14 = new Line(point5, point10);
        double d15 = point10.y;
        Line line16 = new Line(point2, point10);
        Point point19 = new Point((double) 100L, (double) ' ');
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        Parabola parabola29 = new Parabola(point20, point21, line24);
        Line line30 = parabola29.FindCenter();
        Line line31 = parabola29.FindCenter();
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        parabola29.vertex = point34;
        Point point41 = new Point((double) ' ', (double) 100L);
        point41.y = 10.0d;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        Point point53 = null;
        line49.point1 = point53;
        Parabola parabola55 = new Parabola(point34, point41, line49);
        Point point58 = new Point((double) 10, (double) 10.0f);
        Line line59 = new Line(point41, point58);
        Point point60 = null;
        Vector vector62 = new Vector(point60, (java.lang.Integer) (-1));
        int i63 = vector62.degrees;
        boolean b64 = line59.equals((java.lang.Object) vector62);
        Parabola parabola65 = new Parabola(point10, point19, line59);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line46", line16.equals(line46) ? line16.hashCode() == line46.hashCode() : true);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test179");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Line line11 = parabola9.FindCenter();
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Point point19 = null;
        line17.point1 = point19;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        boolean b28 = line17.perpendicular(line23);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        boolean b36 = line23.perpendicular(line34);
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Point point47 = line41.point1;
        boolean b48 = line34.parallel(line41);
        Line line49 = null;
        boolean b50 = line34.parallel(line49);
        parabola9.directrix = line34;
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        line57.point1 = point59;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        boolean b68 = line57.perpendicular(line63);
        Point point69 = line57.point1;
        Point point72 = new Point((double) ' ', (double) 100L);
        double d73 = point72.x;
        double d74 = point72.y;
        double d75 = point72.x;
        line57.point2 = point72;
        Point point77 = line57.point1;
        Point point78 = line57.point2;
        Point point81 = new Point((double) '#', (double) ' ');
        double d82 = point81.x;
        line57.point2 = point81;
        Point point84 = line57.point2;
        Point point85 = line57.point2;
        Point point86 = line57.point2;
        Point point89 = new Point((double) ' ', (double) 100L);
        double d90 = point89.x;
        double d91 = point89.y;
        Vector vector93 = new Vector(point89, (java.lang.Integer) (-1));
        line57.point1 = point89;
        Line line95 = line34.rotate(point89);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line57", line26.equals(line57) ? line26.hashCode() == line57.hashCode() : true);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test180");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Point point38 = new Point((double) 10, (double) 10.0f);
        Line line39 = new Line(point21, point38);
        Point point42 = new Point((double) 0, (double) 100.0f);
        Point point45 = new Point((double) ' ', (double) 100L);
        point45.y = 1L;
        Point point50 = new Point((double) (byte) 1, (double) 100L);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Point point58 = null;
        Line line59 = line53.rotate(point58);
        point50.Mirror(line59);
        Parabola parabola61 = new Parabola(point42, point45, line59);
        point42.y = 1L;
        line39.point1 = point42;
        point42.x = ' ';
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line39", line4.equals(line39) ? line4.hashCode() == line39.hashCode() : true);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test181");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        Point point23 = new Point((double) ' ', (double) 100L);
        double d24 = point23.x;
        double d25 = point23.y;
        double d26 = point23.x;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Parabola parabola36 = new Parabola(point27, point28, line31);
        Line line37 = parabola36.FindCenter();
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        boolean b50 = parabola47.equals((java.lang.Object) 0.0f);
        boolean b51 = parabola36.equals((java.lang.Object) b50);
        Point point54 = new Point((double) ' ', (double) 100L);
        parabola36.vertex = point54;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        Line line64 = line58.rotate(point63);
        Parabola parabola65 = new Parabola(point23, point54, line58);
        point54.Mirror("hi!");
        Line line68 = new Line(point14, point54);
        Vector vector70 = new Vector(point54, (java.lang.Integer) 0);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line61 and line68", line61.equals(line68) ? line61.hashCode() == line68.hashCode() : true);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test182");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        Point point23 = new Point((double) ' ', (double) 100L);
        double d24 = point23.x;
        double d25 = point23.y;
        double d26 = point23.x;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Parabola parabola36 = new Parabola(point27, point28, line31);
        Line line37 = parabola36.FindCenter();
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        boolean b50 = parabola47.equals((java.lang.Object) 0.0f);
        boolean b51 = parabola36.equals((java.lang.Object) b50);
        Point point54 = new Point((double) ' ', (double) 100L);
        parabola36.vertex = point54;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Point point63 = null;
        Line line64 = line58.rotate(point63);
        Parabola parabola65 = new Parabola(point23, point54, line58);
        point54.Mirror("hi!");
        Line line68 = new Line(point14, point54);
        point14.y = 10.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line61 and line68", line61.equals(line68) ? line61.hashCode() == line68.hashCode() : true);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test183");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = null;
        Vector vector48 = new Vector(point46, (java.lang.Integer) (-1));
        Point point49 = vector48.origin;
        int i50 = vector48.degrees;
        vector48.degrees = (short) 100;
        vector48.degrees = 359;
        Point point55 = vector48.origin;
        vector48.degrees = (byte) 10;
        Point point58 = vector48.origin;
        Point point59 = vector48.origin;
        Point point62 = new Point((double) ' ', (double) 100L);
        double d63 = point62.x;
        double d64 = point62.y;
        double d65 = point62.x;
        double d66 = point62.x;
        double d67 = point62.y;
        double d68 = point62.x;
        vector48.origin = point62;
        double d70 = point62.x;
        boolean b71 = point42.equals((java.lang.Object) d70);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line33 and line45", line33.equals(line45) ? line33.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test184");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Line line21 = parabola9.directrix;
        Point point22 = null;
        Vector vector24 = new Vector(point22, (java.lang.Integer) (-1));
        Point point25 = vector24.origin;
        boolean b27 = vector24.equals((java.lang.Object) (byte) 1);
        Point point28 = vector24.origin;
        Point point29 = null;
        Vector vector31 = new Vector(point29, (java.lang.Integer) (-1));
        Point point32 = vector31.origin;
        boolean b34 = vector31.equals((java.lang.Object) (byte) 1);
        Point point35 = vector31.origin;
        boolean b37 = vector31.equals((java.lang.Object) (-1.0f));
        boolean b38 = vector24.equals((java.lang.Object) vector31);
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Parabola parabola48 = new Parabola(point39, point40, line43);
        Line line49 = parabola48.FindCenter();
        Line line50 = parabola48.FindCenter();
        Point point53 = new Point((double) ' ', (double) 100L);
        double d54 = point53.x;
        double d55 = point53.y;
        double d56 = point53.x;
        parabola48.vertex = point53;
        Point point60 = new Point((double) ' ', (double) 100L);
        point60.y = 10.0d;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Point point70 = null;
        line68.point1 = point70;
        Point point72 = null;
        line68.point1 = point72;
        Parabola parabola74 = new Parabola(point53, point60, line68);
        vector31.origin = point53;
        Point point78 = new Point((double) (byte) -1, (-1.0d));
        double d79 = point78.x;
        vector31.origin = point78;
        double d81 = point78.x;
        Point point84 = new Point((double) ' ', (double) 100L);
        double d85 = point84.y;
        Vector vector87 = new Vector(point84, (java.lang.Integer) 0);
        Line line88 = new Line(point78, point84);
        parabola9.directrix = line88;
        parabola9.Mirror();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line43 and line88", line43.equals(line88) ? line43.hashCode() == line88.hashCode() : true);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test185");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Line line11 = parabola9.FindCenter();
        Line line12 = parabola9.directrix;
        Point point15 = new Point((double) (byte) -1, (-1.0d));
        Point point18 = new Point((double) ' ', (double) 100L);
        point18.y = 10.0d;
        Point point23 = new Point((double) ' ', (double) 100L);
        double d24 = point23.x;
        double d25 = point23.y;
        double d26 = point23.x;
        Line line27 = new Line(point18, point23);
        double d28 = point23.y;
        Line line29 = new Line(point15, point23);
        parabola9.vertex = point15;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line27 and line7", line27.equals(line7) ? line27.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test186");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Point point15 = parabola14.vertex;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Point point23 = null;
        line21.point1 = point23;
        parabola14.directrix = line21;
        point2.Mirror(line21);
        Vector vector28 = new Vector(point2, (java.lang.Integer) 0);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.y = 1.0f;
        Line line52 = new Line(point2, point43);
        double d53 = point43.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line52", line21.equals(line52) ? line21.hashCode() == line52.hashCode() : true);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test187");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        boolean b41 = line30.perpendicular(line36);
        Point point42 = line30.point1;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        line30.point2 = point45;
        Point point50 = line30.point1;
        Point point51 = line30.point2;
        Point point54 = new Point((double) '#', (double) ' ');
        double d55 = point54.x;
        line30.point2 = point54;
        boolean b57 = line22.perpendicular(line30);
        Point point58 = line22.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line39 and line30", line39.equals(line30) ? line39.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test188");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        boolean b8 = vector2.equals((java.lang.Object) (-1.0f));
        Point point9 = vector2.origin;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Line line20 = parabola19.FindCenter();
        Point point21 = null;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Parabola parabola30 = new Parabola(point21, point22, line25);
        Line line31 = parabola30.FindCenter();
        boolean b33 = parabola30.equals((java.lang.Object) 0.0f);
        boolean b34 = parabola19.equals((java.lang.Object) b33);
        Point point37 = new Point((double) ' ', (double) 100L);
        parabola19.vertex = point37;
        boolean b39 = vector2.equals((java.lang.Object) point37);
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point40, point41, line44);
        Point point50 = parabola49.vertex;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Point point58 = null;
        line56.point1 = point58;
        parabola49.directrix = line56;
        Point point63 = new Point((double) ' ', (double) 100L);
        point63.Mirror("");
        Line line66 = line56.rotate(point63);
        point37.Mirror(line56);
        Point point70 = new Point((double) (short) 10, (-1.0d));
        line56.point1 = point70;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola30 and parabola49", parabola30.equals(parabola49) ? parabola30.hashCode() == parabola49.hashCode() : true);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test189");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        Point point29 = new Point((double) '#', (double) ' ');
        double d30 = point29.x;
        line5.point2 = point29;
        Point point32 = line5.point2;
        Point point33 = line5.point2;
        Point point34 = line5.point2;
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.x;
        double d39 = point37.y;
        Vector vector41 = new Vector(point37, (java.lang.Integer) (-1));
        line5.point1 = point37;
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Parabola parabola52 = new Parabola(point43, point44, line47);
        Point point53 = parabola52.vertex;
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Parabola parabola63 = new Parabola(point54, point55, line58);
        Point point64 = parabola63.vertex;
        parabola63.Mirror();
        Point point68 = new Point((double) ' ', (double) 100L);
        double d69 = point68.x;
        double d70 = point68.y;
        double d71 = point68.y;
        point68.Mirror("");
        parabola63.vertex = point68;
        Line line75 = parabola63.FindCenter();
        Point point76 = parabola63.focus;
        Point point77 = parabola63.vertex;
        parabola52.vertex = point77;
        Point point81 = new Point((double) ' ', (double) 100L);
        double d82 = point81.x;
        double d83 = point81.y;
        double d84 = point81.y;
        point81.Mirror("");
        Point point89 = new Point((double) ' ', (double) 100L);
        double d90 = point89.x;
        double d91 = point89.y;
        double d92 = point89.y;
        point89.y = (short) -1;
        point89.x = (-1.0d);
        Line line97 = new Line(point81, point89);
        Parabola parabola98 = new Parabola(point37, point77, line97);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line61", line5.equals(line61) ? line5.hashCode() == line61.hashCode() : true);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test190");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        line5.point1 = point9;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        Line line22 = parabola20.FindCenter();
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        parabola20.vertex = point25;
        Line line30 = line5.rotate(point25);
        Point point33 = new Point((double) (byte) -1, (-1.0d));
        Point point36 = new Point((double) ' ', (double) 100L);
        point36.y = 10.0d;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        Line line45 = new Line(point36, point41);
        double d46 = point41.y;
        Line line47 = new Line(point33, point41);
        boolean b48 = line5.parallel(line47);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line18", line45.equals(line18) ? line45.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test191");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.y;
        point14.Mirror("");
        parabola9.vertex = point14;
        Line line21 = parabola9.FindCenter();
        Point point22 = parabola9.focus;
        Line line23 = parabola9.FindCenter();
        Point point24 = parabola9.focus;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        Line line36 = parabola34.FindCenter();
        Point point37 = parabola34.vertex;
        Point point38 = null;
        Vector vector40 = new Vector(point38, (java.lang.Integer) (-1));
        Point point41 = vector40.origin;
        boolean b43 = vector40.equals((java.lang.Object) (byte) 1);
        boolean b44 = parabola34.equals((java.lang.Object) vector40);
        boolean b46 = parabola34.equals((java.lang.Object) 0.0f);
        Point point49 = new Point((double) (byte) 0, 35.0d);
        parabola34.focus = point49;
        Point point51 = null;
        Vector vector53 = new Vector(point51, (java.lang.Integer) (-1));
        Point point54 = vector53.origin;
        int i55 = vector53.degrees;
        vector53.degrees = (short) 100;
        vector53.degrees = 359;
        Point point60 = vector53.origin;
        vector53.degrees = (byte) 10;
        Point point63 = vector53.origin;
        Point point64 = vector53.origin;
        Point point67 = new Point((double) ' ', (double) 100L);
        double d68 = point67.x;
        double d69 = point67.y;
        double d70 = point67.x;
        double d71 = point67.x;
        double d72 = point67.y;
        double d73 = point67.x;
        vector53.origin = point67;
        Line line75 = new Line(point49, point67);
        boolean b76 = parabola9.equals((java.lang.Object) point49);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line75 and line32", line75.equals(line32) ? line75.hashCode() == line32.hashCode() : true);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test192");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        double d8 = point5.x;
        double d9 = point5.x;
        Line line10 = line2.rotate(point5);
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        Line line22 = parabola20.FindCenter();
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        parabola20.vertex = point25;
        Point point32 = new Point((double) 10.0f, (double) 0);
        parabola20.focus = point32;
        Point point34 = parabola20.focus;
        line10.point2 = point34;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line10 and line15", line10.equals(line15) ? line10.hashCode() == line15.hashCode() : true);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test193");
        Point point2 = new Point((double) '4', 100.0d);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        point5.Mirror(line24);
        Line line30 = new Line(point2, point5);
        point2.y = 100L;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line24 and line30", line24.equals(line30) ? line24.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test194");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point15 = new Point((double) ' ', (double) 100L);
        double d16 = point15.x;
        double d17 = point15.y;
        double d18 = point15.x;
        double d19 = point15.y;
        vector6.origin = point15;
        double d21 = point15.y;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        boolean b34 = parabola31.equals((java.lang.Object) 0.0f);
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.y;
        Vector vector40 = new Vector(point37, (java.lang.Integer) 100);
        parabola31.focus = point37;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Point point49 = null;
        line47.point1 = point49;
        Point point51 = null;
        line47.point1 = point51;
        Point point53 = line47.point1;
        Point point54 = line47.point1;
        Point point55 = line47.point1;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Point point71 = parabola70.vertex;
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        boolean b78 = line74.parallel(line77);
        Point point79 = null;
        line77.point1 = point79;
        parabola70.directrix = line77;
        point58.Mirror(line77);
        line47.point2 = point58;
        Parabola parabola84 = new Parabola(point15, point37, line47);
        Vector vector86 = new Vector(point37, (java.lang.Integer) 32);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line47", line26.equals(line47) ? line26.hashCode() == line47.hashCode() : true);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test195");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point23 = new Point((double) ' ', (double) 100L);
        point23.Mirror("");
        Line line26 = line16.rotate(point23);
        Point point29 = new Point((double) (short) 10, (-1.0d));
        line16.point2 = point29;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line26", line7.equals(line26) ? line7.hashCode() == line26.hashCode() : true);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test196");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = line5.point1;
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        Point point20 = parabola19.vertex;
        parabola19.Mirror();
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.y;
        point24.Mirror("");
        parabola19.vertex = point24;
        Line line31 = parabola19.FindCenter();
        parabola19.Mirror();
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.y;
        Vector vector38 = new Vector(point35, (java.lang.Integer) 0);
        point35.Mirror("");
        boolean b41 = parabola19.equals((java.lang.Object) point35);
        double d42 = point35.x;
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        double d49 = point45.y;
        double d50 = point45.y;
        Line line51 = new Line(point35, point45);
        line5.point1 = point35;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line51", line2.equals(line51) ? line2.hashCode() == line51.hashCode() : true);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test197");
        Point point2 = new Point((double) 10, (double) 10.0f);
        Point point5 = new Point((double) (byte) 1, (double) 100L);
        double d6 = point5.x;
        Line line7 = new Line(point2, point5);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Point point15 = null;
        Line line16 = line13.rotate(point15);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Point point35 = null;
        line33.point1 = point35;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        boolean b44 = line33.perpendicular(line39);
        Point point45 = line33.point1;
        parabola26.directrix = line33;
        Line line47 = parabola26.directrix;
        boolean b48 = line13.parallel(line47);
        boolean b49 = line7.parallel(line47);
        Point point50 = null;
        Vector vector52 = new Vector(point50, (java.lang.Integer) (-1));
        java.lang.Object obj53 = null;
        boolean b54 = vector52.equals(obj53);
        Point point55 = vector52.origin;
        Point point58 = new Point((double) (byte) -1, (-1.0d));
        vector52.origin = point58;
        Line line60 = null;
        point58.Mirror(line60);
        line47.point1 = point58;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line39 and line7", line39.equals(line7) ? line39.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test198");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.y;
        Vector vector27 = new Vector(point24, (java.lang.Integer) 0);
        parabola9.vertex = point24;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        Point point52 = line48.point1;
        boolean b53 = line42.equals((java.lang.Object) line48);
        parabola38.directrix = line48;
        Point point55 = line48.point2;
        Point point56 = line48.point1;
        boolean b57 = parabola9.equals((java.lang.Object) point56);
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        boolean b66 = line62.parallel(line65);
        Parabola parabola67 = new Parabola(point58, point59, line62);
        Point point68 = parabola67.focus;
        Line line69 = parabola67.FindCenter();
        boolean b70 = parabola9.equals((java.lang.Object) parabola67);
        Line line71 = parabola67.FindCenter();
        Point point74 = new Point((double) ' ', (double) 100L);
        point74.y = 10.0d;
        Point point79 = new Point((double) ' ', (double) 100L);
        double d80 = point79.x;
        double d81 = point79.y;
        double d82 = point79.x;
        Line line83 = new Line(point74, point79);
        parabola67.directrix = line83;
        Line line85 = parabola67.FindCenter();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line36 and line83", line36.equals(line83) ? line36.hashCode() == line83.hashCode() : true);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test199");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = parabola52.vertex;
        Point point54 = parabola52.vertex;
        Point point55 = parabola52.focus;
        Line line56 = parabola52.directrix;
        Point point59 = new Point((double) ' ', (double) 100L);
        double d60 = point59.x;
        double d61 = point59.y;
        Vector vector63 = new Vector(point59, (java.lang.Integer) 0);
        vector63.degrees = (byte) 1;
        int i66 = vector63.degrees;
        vector63.degrees = (short) 100;
        vector63.degrees = (-1);
        Point point73 = new Point((double) 0, (double) 100.0f);
        vector63.origin = point73;
        line56.point2 = point73;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line51", line16.equals(line51) ? line16.hashCode() == line51.hashCode() : true);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test200");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point8 = new Point((double) ' ', (double) 100L);
        double d9 = point8.x;
        double d10 = point8.y;
        double d11 = point8.x;
        double d12 = point8.x;
        double d13 = point8.y;
        Point point16 = new Point((double) ' ', (double) 100L);
        double d17 = point16.x;
        double d18 = point16.y;
        double d19 = point16.x;
        double d20 = point16.x;
        double d21 = point16.y;
        Line line22 = new Line(point8, point16);
        vector2.origin = point8;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        Vector vector30 = new Vector(point26, (java.lang.Integer) 0);
        vector30.degrees = (byte) 1;
        int i33 = vector30.degrees;
        vector30.degrees = (short) 100;
        boolean b36 = vector2.equals((java.lang.Object) (short) 100);
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Point point47 = parabola46.vertex;
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Point point55 = null;
        line53.point1 = point55;
        parabola46.directrix = line53;
        Point point58 = parabola46.vertex;
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.y;
        Vector vector64 = new Vector(point61, (java.lang.Integer) 0);
        parabola46.vertex = point61;
        parabola46.Mirror();
        Point point69 = new Point((double) (short) 10, (double) (short) -1);
        parabola46.focus = point69;
        Point point71 = parabola46.focus;
        Line line72 = parabola46.directrix;
        boolean b73 = vector2.equals((java.lang.Object) line72);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line41 and line22", line41.equals(line22) ? line41.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test201");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.directrix;
        Line line11 = parabola9.directrix;
        parabola9.Mirror();
        Point point13 = parabola9.focus;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        boolean b30 = line19.perpendicular(line25);
        Point point31 = line19.point1;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        line19.point2 = point34;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.y;
        point41.Mirror("");
        line19.point1 = point41;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        Line line59 = parabola57.FindCenter();
        Point point62 = new Point((double) ' ', (double) 100L);
        double d63 = point62.x;
        double d64 = point62.y;
        double d65 = point62.x;
        parabola57.vertex = point62;
        line19.point1 = point62;
        parabola9.directrix = line19;
        Point point69 = null;
        Point point70 = null;
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        boolean b77 = line73.parallel(line76);
        Parabola parabola78 = new Parabola(point69, point70, line73);
        Point point79 = parabola78.vertex;
        parabola78.Mirror();
        Line line81 = parabola78.directrix;
        boolean b82 = parabola9.equals((java.lang.Object) line81);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line76 and line19", line76.equals(line19) ? line76.hashCode() == line19.hashCode() : true);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test202");
        Point point2 = new Point((double) '#', (double) ' ');
        double d3 = point2.x;
        point2.x = 10.0d;
        Point point8 = new Point((double) ' ', (double) 100L);
        double d9 = point8.x;
        double d10 = point8.y;
        Vector vector12 = new Vector(point8, (java.lang.Integer) 0);
        vector12.degrees = (byte) 1;
        Point point17 = new Point((double) (byte) 1, (double) (short) 0);
        vector12.origin = point17;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Parabola parabola28 = new Parabola(point19, point20, line23);
        Line line29 = parabola28.FindCenter();
        Line line30 = parabola28.FindCenter();
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        parabola28.vertex = point33;
        Point point40 = new Point((double) ' ', (double) 100L);
        point40.y = 10.0d;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        Point point52 = null;
        line48.point1 = point52;
        Parabola parabola54 = new Parabola(point33, point40, line48);
        vector12.origin = point33;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        vector12.origin = point58;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Parabola parabola71 = new Parabola(point62, point63, line66);
        Point point72 = parabola71.vertex;
        Point point73 = null;
        Point point74 = null;
        Line line75 = new Line(point73, point74);
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        boolean b79 = line75.parallel(line78);
        Point point80 = null;
        line78.point1 = point80;
        parabola71.directrix = line78;
        Point point83 = null;
        Line line84 = line78.rotate(point83);
        point58.Mirror(line78);
        Line line86 = new Line(point2, point58);
        double d87 = point2.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line66 and line86", line66.equals(line86) ? line66.hashCode() == line86.hashCode() : true);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test203");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        boolean b38 = line34.parallel(line37);
        Parabola parabola39 = new Parabola(point30, point31, line34);
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point40, point41, line44);
        boolean b50 = parabola39.equals((java.lang.Object) point41);
        Point point51 = parabola39.vertex;
        Point point54 = new Point((double) ' ', (double) 100L);
        double d55 = point54.x;
        double d56 = point54.y;
        double d57 = point54.x;
        parabola39.vertex = point54;
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.x;
        double d63 = point61.y;
        double d64 = point61.x;
        double d65 = point61.y;
        point61.Mirror("hi!");
        parabola39.focus = point61;
        Point point69 = parabola39.vertex;
        double d70 = point69.y;
        line16.point1 = point69;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola9 and parabola49", parabola9.equals(parabola49) ? parabola9.hashCode() == parabola49.hashCode() : true);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test204");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Vector vector27 = new Vector(point25, (java.lang.Integer) (-1));
        int i28 = vector27.degrees;
        Point point29 = null;
        vector27.origin = point29;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Parabola parabola46 = new Parabola(point37, point38, line41);
        Line line47 = parabola46.FindCenter();
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Line line58 = parabola57.FindCenter();
        boolean b60 = parabola57.equals((java.lang.Object) 0.0f);
        boolean b61 = parabola46.equals((java.lang.Object) b60);
        Point point64 = new Point((double) ' ', (double) 100L);
        parabola46.vertex = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        Point point73 = null;
        Line line74 = line68.rotate(point73);
        Parabola parabola75 = new Parabola(point33, point64, line68);
        vector27.origin = point64;
        line22.point1 = point64;
        double d78 = point64.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line22", line2.equals(line22) ? line2.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test205");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Line line34 = parabola33.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Line line45 = parabola44.FindCenter();
        boolean b47 = parabola44.equals((java.lang.Object) 0.0f);
        boolean b48 = parabola33.equals((java.lang.Object) b47);
        Point point51 = new Point((double) ' ', (double) 100L);
        parabola33.vertex = point51;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Parabola parabola62 = new Parabola(point20, point51, line55);
        Vector vector64 = new Vector(point20, (java.lang.Integer) 0);
        line5.point1 = point20;
        double d66 = point20.x;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line39 and line5", line39.equals(line5) ? line39.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test206");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point9 = vector6.origin;
        Point point12 = new Point((double) ' ', (double) 100L);
        double d13 = point12.x;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Point point24 = parabola23.vertex;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        parabola23.directrix = line30;
        Point point37 = new Point((double) ' ', (double) 100L);
        point37.Mirror("");
        Line line40 = line30.rotate(point37);
        point12.Mirror(line40);
        boolean b42 = vector6.equals((java.lang.Object) line40);
        vector6.degrees = ' ';
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        Parabola parabola54 = new Parabola(point45, point46, line49);
        Line line55 = parabola54.FindCenter();
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Line line66 = parabola65.FindCenter();
        boolean b68 = parabola65.equals((java.lang.Object) 0.0f);
        boolean b69 = parabola54.equals((java.lang.Object) b68);
        Point point72 = new Point((double) ' ', (double) 100L);
        parabola54.vertex = point72;
        Point point74 = null;
        Point point75 = null;
        Point point76 = null;
        Point point77 = null;
        Line line78 = new Line(point76, point77);
        Point point79 = null;
        Point point80 = null;
        Line line81 = new Line(point79, point80);
        boolean b82 = line78.parallel(line81);
        Parabola parabola83 = new Parabola(point74, point75, line78);
        Point point84 = parabola83.focus;
        Point point87 = new Point((double) ' ', (double) 100L);
        double d88 = point87.y;
        parabola83.focus = point87;
        Line line90 = new Line(point72, point87);
        vector6.origin = point72;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line30 and line90", line30.equals(line90) ? line30.hashCode() == line90.hashCode() : true);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test207");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point40 = null;
        Line line41 = line16.rotate(point40);
        Point point44 = new Point((double) ' ', (double) 100L);
        double d45 = point44.x;
        double d46 = point44.y;
        double d47 = point44.x;
        double d48 = point44.x;
        double d49 = point44.y;
        double d50 = point44.x;
        line16.point1 = point44;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line22", line16.equals(line22) ? line16.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test208");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        point2.y = (short) -1;
        point2.x = (-1.0d);
        point2.y = (short) 0;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Line line22 = parabola21.FindCenter();
        boolean b24 = parabola21.equals((java.lang.Object) 0.0f);
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        Vector vector31 = new Vector(point27, (java.lang.Integer) 0);
        vector31.degrees = (byte) 1;
        Point point36 = new Point((double) (byte) 1, (double) (short) 0);
        vector31.origin = point36;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Line line49 = parabola47.FindCenter();
        Point point52 = new Point((double) ' ', (double) 100L);
        double d53 = point52.x;
        double d54 = point52.y;
        double d55 = point52.x;
        parabola47.vertex = point52;
        Point point59 = new Point((double) ' ', (double) 100L);
        point59.y = 10.0d;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        line67.point1 = point69;
        Point point71 = null;
        line67.point1 = point71;
        Parabola parabola73 = new Parabola(point52, point59, line67);
        vector31.origin = point52;
        Point point77 = new Point((double) ' ', (double) 100L);
        double d78 = point77.x;
        double d79 = point77.y;
        vector31.origin = point77;
        parabola21.vertex = point77;
        double d82 = point77.y;
        Line line83 = new Line(point2, point77);
        Point point86 = new Point((double) 359, 35.0d);
        point86.Mirror("");
        Line line89 = new Line(point77, point86);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line83", line16.equals(line83) ? line16.hashCode() == line83.hashCode() : true);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test209");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.y;
        Vector vector27 = new Vector(point24, (java.lang.Integer) 0);
        parabola9.vertex = point24;
        parabola9.Mirror();
        Point point32 = new Point((double) (short) 10, (double) (short) -1);
        parabola9.focus = point32;
        Line line34 = parabola9.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        line40.point1 = point42;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        boolean b51 = line40.perpendicular(line46);
        Point point52 = line40.point1;
        Point point55 = new Point((double) ' ', (double) 100L);
        double d56 = point55.x;
        double d57 = point55.y;
        double d58 = point55.x;
        line40.point2 = point55;
        Point point60 = line40.point1;
        Point point61 = line40.point2;
        boolean b62 = line34.equals((java.lang.Object) line40);
        Point point63 = null;
        line34.point2 = point63;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line49 and line40", line49.equals(line40) ? line49.hashCode() == line40.hashCode() : true);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test210");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point19 = parabola9.focus;
        Point point22 = new Point((double) (byte) -1, (-1.0d));
        Point point25 = new Point((double) ' ', (double) 100L);
        point25.y = 10.0d;
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.x;
        Line line34 = new Line(point25, point30);
        double d35 = point30.y;
        Line line36 = new Line(point22, point30);
        boolean b37 = parabola9.equals((java.lang.Object) point22);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line36", line4.equals(line36) ? line4.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test211");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.directrix;
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        double d18 = point14.x;
        double d19 = point14.y;
        Point point22 = new Point((double) ' ', (double) 100L);
        double d23 = point22.x;
        double d24 = point22.y;
        double d25 = point22.x;
        double d26 = point22.x;
        double d27 = point22.y;
        Line line28 = new Line(point14, point22);
        Vector vector30 = new Vector(point14, (java.lang.Integer) (-1));
        parabola9.vertex = point14;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line28", line7.equals(line28) ? line7.hashCode() == line28.hashCode() : true);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test212");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Vector vector9 = new Vector(point7, (java.lang.Integer) (-1));
        Point point10 = vector9.origin;
        boolean b12 = vector9.equals((java.lang.Object) (byte) 1);
        Point point13 = vector9.origin;
        boolean b15 = vector9.equals((java.lang.Object) (-1.0f));
        boolean b16 = vector2.equals((java.lang.Object) vector9);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        Line line28 = parabola26.FindCenter();
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.x;
        parabola26.vertex = point31;
        Point point38 = new Point((double) ' ', (double) 100L);
        point38.y = 10.0d;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = null;
        line46.point1 = point48;
        Point point50 = null;
        line46.point1 = point50;
        Parabola parabola52 = new Parabola(point31, point38, line46);
        vector9.origin = point31;
        Point point56 = new Point((double) (byte) -1, (-1.0d));
        double d57 = point56.x;
        vector9.origin = point56;
        double d59 = point56.x;
        Point point62 = new Point((double) ' ', (double) 100L);
        double d63 = point62.y;
        Vector vector65 = new Vector(point62, (java.lang.Integer) 0);
        Line line66 = new Line(point56, point62);
        Vector vector68 = new Vector(point62, (java.lang.Integer) 97);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line43 and line66", line43.equals(line66) ? line43.hashCode() == line66.hashCode() : true);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test213");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        int i4 = vector2.degrees;
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        boolean b11 = line7.parallel(line10);
        Point point12 = null;
        Line line13 = line7.rotate(point12);
        boolean b14 = vector2.equals((java.lang.Object) point12);
        int i15 = vector2.degrees;
        Point point16 = null;
        Vector vector18 = new Vector(point16, (java.lang.Integer) (-1));
        Point point19 = vector18.origin;
        boolean b21 = vector18.equals((java.lang.Object) (byte) 1);
        Point point22 = vector18.origin;
        boolean b24 = vector18.equals((java.lang.Object) (-1.0f));
        Point point25 = vector18.origin;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Parabola parabola35 = new Parabola(point26, point27, line30);
        Line line36 = parabola35.FindCenter();
        Line line37 = parabola35.FindCenter();
        Point point40 = new Point((double) ' ', (double) 100L);
        double d41 = point40.x;
        double d42 = point40.y;
        double d43 = point40.x;
        parabola35.vertex = point40;
        vector18.origin = point40;
        Point point46 = vector18.origin;
        vector2.origin = point46;
        Point point48 = vector2.origin;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        Parabola parabola68 = new Parabola(point59, point60, line63);
        boolean b69 = parabola58.equals((java.lang.Object) point60);
        Point point70 = parabola58.vertex;
        Point point73 = new Point((double) ' ', (double) 100L);
        double d74 = point73.x;
        double d75 = point73.y;
        double d76 = point73.x;
        parabola58.vertex = point73;
        Point point80 = new Point((double) ' ', (double) 100L);
        double d81 = point80.x;
        double d82 = point80.y;
        double d83 = point80.x;
        double d84 = point80.y;
        point80.Mirror("hi!");
        parabola58.focus = point80;
        Line line88 = new Line(point48, point80);
        Vector vector90 = new Vector(point48, (java.lang.Integer) 1);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line53 and line88", line53.equals(line88) ? line53.hashCode() == line88.hashCode() : true);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test214");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Vector vector47 = new Vector(point42, (java.lang.Integer) 1);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line7", line45.equals(line7) ? line45.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test215");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Parabola parabola62 = new Parabola(point53, point54, line57);
        Point point63 = parabola62.vertex;
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = null;
        line69.point1 = point71;
        parabola62.directrix = line69;
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        boolean b76 = line51.perpendicular(line75);
        Point point79 = new Point((double) (short) 10, (double) 100.0f);
        Line line80 = line75.rotate(point79);
        Point point83 = new Point((double) ' ', (double) 100L);
        double d84 = point83.y;
        Line line85 = new Line(point79, point83);
        double d86 = point79.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line85", line26.equals(line85) ? line26.hashCode() == line85.hashCode() : true);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test216");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        boolean b12 = parabola9.equals((java.lang.Object) 0.0f);
        Point point13 = parabola9.vertex;
        Line line14 = parabola9.FindCenter();
        Point point17 = new Point((double) ' ', (double) 10.0f);
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        double d24 = point20.y;
        double d25 = point20.y;
        point20.x = (short) 10;
        point20.x = 1;
        Line line30 = new Line(point17, point20);
        boolean b31 = parabola9.equals((java.lang.Object) point20);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line30", line7.equals(line30) ? line7.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test217");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Point point32 = parabola31.vertex;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Point point40 = null;
        line38.point1 = point40;
        parabola31.directrix = line38;
        Point point43 = null;
        Line line44 = line38.rotate(point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        Line line53 = line47.rotate(point52);
        boolean b54 = line44.perpendicular(line53);
        Point point57 = new Point((double) ' ', (double) 100L);
        Line line58 = line44.rotate(point57);
        point57.y = (-1);
        parabola9.vertex = point57;
        Point point62 = parabola9.vertex;
        Point point65 = new Point((double) ' ', (double) 100L);
        double d66 = point65.x;
        double d67 = point65.y;
        double d68 = point65.x;
        double d69 = point65.x;
        double d70 = point65.y;
        Point point73 = new Point((double) ' ', (double) 100L);
        double d74 = point73.x;
        double d75 = point73.y;
        double d76 = point73.x;
        double d77 = point73.x;
        double d78 = point73.y;
        Line line79 = new Line(point65, point73);
        Point point82 = new Point((double) (byte) -1, (-1.0d));
        double d83 = point82.x;
        point82.Mirror("hi!");
        Line line86 = new Line(point73, point82);
        boolean b87 = parabola9.equals((java.lang.Object) point82);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line47 and line86", line47.equals(line86) ? line47.hashCode() == line86.hashCode() : true);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test218");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        point14.y = 1.0f;
        double d23 = point14.x;
        double d24 = point14.x;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Point point35 = parabola34.focus;
        Point point38 = new Point((double) ' ', (double) 100L);
        double d39 = point38.y;
        parabola34.focus = point38;
        Line line41 = parabola34.directrix;
        Point point44 = new Point((double) (byte) -1, (-1.0d));
        parabola34.focus = point44;
        Line line46 = new Line(point14, point44);
        Point point47 = line46.point1;
        boolean b49 = point47.equals((java.lang.Object) 32.0d);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line32 and line46", line32.equals(line46) ? line32.hashCode() == line46.hashCode() : true);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test219");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line21.point1 = point26;
        point14.Mirror(line21);
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Line line39 = parabola38.FindCenter();
        Line line40 = parabola38.FindCenter();
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.x;
        double d45 = point43.y;
        double d46 = point43.x;
        parabola38.vertex = point43;
        Vector vector49 = new Vector(point43, (java.lang.Integer) 1);
        point43.Mirror("hi!");
        Line line52 = line21.rotate(point43);
        Point point55 = new Point(0.0d, (double) (short) 10);
        line21.point1 = point55;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line52 and line36", line52.equals(line36) ? line52.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test220");
        Point point2 = new Point((double) '4', 100.0d);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        point5.Mirror(line24);
        Line line30 = new Line(point2, point5);
        double d31 = point5.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line12 and line30", line12.equals(line30) ? line12.hashCode() == line30.hashCode() : true);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test221");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point40, point41, line44);
        Line line50 = parabola49.FindCenter();
        Line line51 = parabola49.FindCenter();
        Point point54 = new Point((double) ' ', (double) 100L);
        double d55 = point54.x;
        double d56 = point54.y;
        double d57 = point54.x;
        parabola49.vertex = point54;
        Vector vector60 = new Vector(point54, (java.lang.Integer) 1);
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Point point71 = parabola70.focus;
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.y;
        parabola70.focus = point74;
        Line line77 = new Line(point54, point74);
        line35.point1 = point74;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line77", line4.equals(line77) ? line4.hashCode() == line77.hashCode() : true);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test222");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = line5.point1;
        Point point21 = new Point((double) ' ', (double) 100L);
        double d22 = point21.y;
        Vector vector24 = new Vector(point21, (java.lang.Integer) 0);
        point21.Mirror("");
        line5.point2 = point21;
        Point point30 = new Point((double) (byte) -1, (-1.0d));
        double d31 = point30.x;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        double d38 = point34.x;
        double d39 = point34.y;
        Line line40 = new Line(point30, point34);
        boolean b41 = line5.perpendicular(line40);
        Point point42 = line5.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line40", line2.equals(line40) ? line2.hashCode() == line40.hashCode() : true);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test223");
        Point point2 = new Point((double) ' ', (double) 100L);
        point2.y = 10.0d;
        Point point7 = new Point((double) ' ', (double) 100L);
        double d8 = point7.x;
        double d9 = point7.y;
        double d10 = point7.x;
        Line line11 = new Line(point2, point7);
        point7.x = (-1.0f);
        point7.Mirror("hi!");
        Point point16 = null;
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        Parabola parabola25 = new Parabola(point16, point17, line20);
        Line line26 = parabola25.FindCenter();
        Line line27 = parabola25.FindCenter();
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.x;
        parabola25.vertex = point30;
        Point point37 = new Point((double) ' ', (double) 100L);
        point37.y = 10.0d;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Point point47 = null;
        line45.point1 = point47;
        Point point49 = null;
        line45.point1 = point49;
        Parabola parabola51 = new Parabola(point30, point37, line45);
        Point point54 = new Point((double) '#', (double) ' ');
        double d55 = point54.x;
        parabola51.vertex = point54;
        Line line57 = new Line(point7, point54);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line20", line11.equals(line20) ? line11.hashCode() == line20.hashCode() : true);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test224");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = line5.point1;
        Point point21 = new Point((double) ' ', (double) 100L);
        double d22 = point21.y;
        Vector vector24 = new Vector(point21, (java.lang.Integer) 0);
        point21.Mirror("");
        line5.point2 = point21;
        Point point30 = new Point((double) (byte) -1, (-1.0d));
        double d31 = point30.x;
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        double d38 = point34.x;
        double d39 = point34.y;
        Line line40 = new Line(point30, point34);
        boolean b41 = line5.perpendicular(line40);
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Parabola parabola51 = new Parabola(point42, point43, line46);
        Point point52 = parabola51.focus;
        Point point55 = new Point((double) ' ', (double) 100L);
        double d56 = point55.y;
        parabola51.focus = point55;
        Line line58 = parabola51.directrix;
        Point point61 = new Point((double) (byte) -1, (-1.0d));
        parabola51.focus = point61;
        Point point63 = parabola51.focus;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        boolean b74 = line70.parallel(line73);
        Point point75 = null;
        line73.point1 = point75;
        Point point77 = line73.point1;
        boolean b78 = line67.equals((java.lang.Object) line73);
        Point point79 = line73.point2;
        Parabola parabola80 = new Parabola(point63, point64, line73);
        Line line81 = line40.rotate(point64);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line73", line5.equals(line73) ? line5.hashCode() == line73.hashCode() : true);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test225");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point23 = new Point((double) ' ', (double) 100L);
        point23.Mirror("");
        Line line26 = line16.rotate(point23);
        Point point27 = null;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        boolean b35 = line31.parallel(line34);
        Parabola parabola36 = new Parabola(point27, point28, line31);
        Line line37 = parabola36.FindCenter();
        Line line38 = parabola36.FindCenter();
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        parabola36.vertex = point41;
        Vector vector47 = new Vector(point41, (java.lang.Integer) 1);
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Point point58 = parabola57.focus;
        Point point61 = new Point((double) ' ', (double) 100L);
        double d62 = point61.y;
        parabola57.focus = point61;
        Line line64 = new Line(point41, point61);
        line16.point2 = point41;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line64 and line4", line64.equals(line4) ? line64.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test226");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point23 = new Point((double) ' ', (double) 100L);
        point23.Mirror("");
        Line line26 = line16.rotate(point23);
        Point point27 = line26.point2;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Parabola parabola37 = new Parabola(point28, point29, line32);
        Line line38 = parabola37.FindCenter();
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Parabola parabola48 = new Parabola(point39, point40, line43);
        Line line49 = parabola48.FindCenter();
        boolean b51 = parabola48.equals((java.lang.Object) 0.0f);
        boolean b52 = parabola37.equals((java.lang.Object) b51);
        Point point55 = new Point((double) ' ', (double) 100L);
        parabola37.vertex = point55;
        Point point57 = parabola37.focus;
        Line line58 = parabola37.FindCenter();
        Point point61 = new Point((double) 1.0f, 0.0d);
        parabola37.focus = point61;
        Point point63 = parabola37.vertex;
        line26.point1 = point63;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on parabola48 and parabola9", parabola48.equals(parabola9) ? parabola48.hashCode() == parabola9.hashCode() : true);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test227");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point42 = new Point((double) '4', 100.0d);
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Point point58 = parabola57.vertex;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Point point66 = null;
        line64.point1 = point66;
        parabola57.directrix = line64;
        point45.Mirror(line64);
        Line line70 = new Line(point42, point45);
        Point point73 = new Point((double) '#', (double) (short) 0);
        double d74 = point73.y;
        line70.point1 = point73;
        line35.point1 = point73;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line61 and line35", line61.equals(line35) ? line61.hashCode() == line35.hashCode() : true);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test228");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        int i9 = vector6.degrees;
        vector6.degrees = 359;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Point point32 = parabola31.vertex;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Point point40 = null;
        line38.point1 = point40;
        parabola31.directrix = line38;
        Point point43 = null;
        Line line44 = line38.rotate(point43);
        boolean b45 = line16.perpendicular(line44);
        boolean b46 = vector6.equals((java.lang.Object) line16);
        Point point47 = line16.point1;
        Point point50 = new Point((double) '#', (double) ' ');
        point50.Mirror("hi!");
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        line58.point1 = point60;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        boolean b69 = line58.perpendicular(line64);
        Point point72 = new Point((double) ' ', (double) 100L);
        double d73 = point72.x;
        double d74 = point72.y;
        double d75 = point72.y;
        point72.Mirror("");
        point72.y = 100.0f;
        Line line80 = line64.rotate(point72);
        point50.Mirror(line64);
        boolean b82 = line16.perpendicular(line64);
        Point point85 = new Point((double) '#', (double) ' ');
        double d86 = point85.x;
        point85.Mirror("hi!");
        line64.point1 = point85;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line44 and line80", line44.equals(line80) ? line44.hashCode() == line80.hashCode() : true);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test229");
        Point point2 = new Point((double) '4', 100.0d);
        Point point5 = new Point((double) ' ', (double) 100L);
        double d6 = point5.x;
        double d7 = point5.y;
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = parabola17.vertex;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Point point26 = null;
        line24.point1 = point26;
        parabola17.directrix = line24;
        point5.Mirror(line24);
        Line line30 = new Line(point2, point5);
        Point point33 = new Point((double) (byte) -1, (-1.0d));
        Point point36 = new Point((double) ' ', (double) 100L);
        point36.y = 10.0d;
        Point point41 = new Point((double) ' ', (double) 100L);
        double d42 = point41.x;
        double d43 = point41.y;
        double d44 = point41.x;
        Line line45 = new Line(point36, point41);
        double d46 = point41.y;
        Line line47 = new Line(point33, point41);
        double d48 = point41.y;
        point41.Mirror("");
        line30.point1 = point41;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line24 and line45", line24.equals(line45) ? line24.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test230");
        Point point2 = new Point((double) '#', (double) ' ');
        Point point3 = null;
        Point point6 = new Point((double) ' ', (double) 100L);
        double d7 = point6.x;
        double d8 = point6.y;
        Vector vector10 = new Vector(point6, (java.lang.Integer) 0);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = line19.point1;
        boolean b24 = line13.equals((java.lang.Object) line19);
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Parabola parabola45 = new Parabola(point36, point37, line40);
        Line line46 = parabola45.FindCenter();
        boolean b48 = parabola45.equals((java.lang.Object) 0.0f);
        boolean b49 = parabola34.equals((java.lang.Object) b48);
        Point point52 = new Point((double) ' ', (double) 100L);
        parabola34.vertex = point52;
        Line line54 = line13.rotate(point52);
        Parabola parabola55 = new Parabola(point3, point6, line54);
        Point point56 = parabola55.vertex;
        boolean b58 = parabola55.equals((java.lang.Object) (short) -1);
        Point point59 = parabola55.vertex;
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        boolean b66 = line62.parallel(line65);
        Point point67 = null;
        line65.point1 = point67;
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        boolean b76 = line65.perpendicular(line71);
        Point point77 = line65.point1;
        Point point80 = new Point((double) ' ', (double) 100L);
        double d81 = point80.x;
        double d82 = point80.y;
        double d83 = point80.x;
        line65.point2 = point80;
        Point point85 = line65.point1;
        Point point86 = line65.point2;
        Point point89 = new Point((double) '#', (double) ' ');
        double d90 = point89.x;
        line65.point2 = point89;
        Parabola parabola92 = new Parabola(point2, point59, line65);
        double d93 = point59.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line65 and line32", line65.equals(line32) ? line65.hashCode() == line32.hashCode() : true);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test231");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point12 = parabola9.focus;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = line18.point2;
        parabola9.directrix = line18;
        Point point41 = parabola9.vertex;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line7", line18.equals(line7) ? line18.hashCode() == line7.hashCode() : true);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test232");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Line line34 = parabola33.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Line line45 = parabola44.FindCenter();
        boolean b47 = parabola44.equals((java.lang.Object) 0.0f);
        boolean b48 = parabola33.equals((java.lang.Object) b47);
        Point point51 = new Point((double) ' ', (double) 100L);
        parabola33.vertex = point51;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Point point60 = null;
        Line line61 = line55.rotate(point60);
        Parabola parabola62 = new Parabola(point20, point51, line55);
        point51.Mirror("hi!");
        line5.point2 = point51;
        Point point68 = new Point((double) '4', 100.0d);
        line5.point2 = point68;
        point68.y = 0.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line5", line11.equals(line5) ? line11.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test233");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point13 = new Point((double) (short) 10, (double) 100.0f);
        parabola9.vertex = point13;
        Point point15 = parabola9.vertex;
        Line line16 = parabola9.FindCenter();
        Point point17 = parabola9.focus;
        Line line18 = parabola9.directrix;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        boolean b27 = line23.parallel(line26);
        Parabola parabola28 = new Parabola(point19, point20, line23);
        Line line29 = parabola28.FindCenter();
        Line line30 = parabola28.FindCenter();
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        parabola28.vertex = point33;
        Vector vector39 = new Vector(point33, (java.lang.Integer) 1);
        point33.y = 1.0f;
        double d42 = point33.x;
        double d43 = point33.x;
        Point point44 = null;
        Point point45 = null;
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line48.parallel(line51);
        Parabola parabola53 = new Parabola(point44, point45, line48);
        Point point54 = parabola53.focus;
        Point point57 = new Point((double) ' ', (double) 100L);
        double d58 = point57.y;
        parabola53.focus = point57;
        Line line60 = parabola53.directrix;
        Point point63 = new Point((double) (byte) -1, (-1.0d));
        parabola53.focus = point63;
        Line line65 = new Line(point33, point63);
        parabola9.focus = point33;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line26 and line65", line26.equals(line65) ? line26.hashCode() == line65.hashCode() : true);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test234");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        Line line38 = line35.rotate(point37);
        boolean b39 = line16.parallel(line35);
        Point point40 = line35.point2;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = line43.point1;
        Point point51 = new Point((double) 359, 32.0d);
        line43.point1 = point51;
        boolean b53 = line35.parallel(line43);
        Point point54 = line35.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line25 and line43", line25.equals(line43) ? line25.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test235");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Parabola parabola37 = new Parabola(point28, point29, line32);
        Point point38 = parabola37.vertex;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        Point point46 = null;
        line44.point1 = point46;
        parabola37.directrix = line44;
        Point point49 = null;
        Line line50 = line44.rotate(point49);
        boolean b51 = line22.perpendicular(line50);
        boolean b52 = line5.parallel(line50);
        Point point55 = new Point((double) 0, (double) 100.0f);
        Point point58 = new Point((double) ' ', (double) 100L);
        point58.y = 1L;
        Point point63 = new Point((double) (byte) 1, (double) 100L);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = null;
        Line line72 = line66.rotate(point71);
        point63.Mirror(line72);
        Parabola parabola74 = new Parabola(point55, point58, line72);
        Point point75 = parabola74.focus;
        line5.point2 = point75;
        Point point79 = new Point((double) (short) 10, (double) 100.0f);
        Vector vector81 = new Vector(point79, (java.lang.Integer) 359);
        line5.point2 = point79;
        Vector vector84 = new Vector(point79, (java.lang.Integer) 32);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line5 and line22", line5.equals(line22) ? line5.hashCode() == line22.hashCode() : true);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test236");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        line5.point1 = point9;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        Line line22 = parabola20.FindCenter();
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.x;
        double d27 = point25.y;
        double d28 = point25.x;
        parabola20.vertex = point25;
        Vector vector31 = new Vector(point25, (java.lang.Integer) 1);
        Point point34 = new Point((double) ' ', (double) 100L);
        double d35 = point34.x;
        double d36 = point34.y;
        double d37 = point34.x;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Parabola parabola58 = new Parabola(point49, point50, line53);
        Line line59 = parabola58.FindCenter();
        boolean b61 = parabola58.equals((java.lang.Object) 0.0f);
        boolean b62 = parabola47.equals((java.lang.Object) b61);
        Point point65 = new Point((double) ' ', (double) 100L);
        parabola47.vertex = point65;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Point point74 = null;
        Line line75 = line69.rotate(point74);
        Parabola parabola76 = new Parabola(point34, point65, line69);
        point65.Mirror("hi!");
        Line line79 = new Line(point25, point65);
        boolean b80 = line5.parallel(line79);
        Point point81 = line5.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line15 and line79", line15.equals(line79) ? line15.hashCode() == line79.hashCode() : true);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test237");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point13 = vector6.origin;
        Vector vector15 = new Vector(point13, (java.lang.Integer) 0);
        Point point16 = null;
        Vector vector18 = new Vector(point16, (java.lang.Integer) (-1));
        int i19 = vector18.degrees;
        Point point22 = new Point((double) ' ', (double) 100L);
        point22.Mirror("");
        double d25 = point22.x;
        vector18.origin = point22;
        Point point27 = vector18.origin;
        vector15.origin = point27;
        Point point29 = vector15.origin;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        boolean b46 = line35.perpendicular(line41);
        Point point47 = line35.point1;
        Point point48 = line35.point1;
        Point point51 = new Point(0.0d, (double) 10);
        double d52 = point51.y;
        Line line53 = line35.rotate(point51);
        Line line54 = new Line(point29, point51);
        point51.x = 1.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line41 and line54", line41.equals(line54) ? line41.hashCode() == line54.hashCode() : true);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test238");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        point27.y = 0L;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line18 and line45", line18.equals(line45) ? line18.hashCode() == line45.hashCode() : true);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test239");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        Point point4 = null;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        boolean b12 = line8.parallel(line11);
        Parabola parabola13 = new Parabola(point4, point5, line8);
        Point point14 = parabola13.vertex;
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        boolean b21 = line17.parallel(line20);
        Point point22 = null;
        line20.point1 = point22;
        parabola13.directrix = line20;
        Point point27 = new Point((double) ' ', (double) 100L);
        point27.Mirror("");
        Line line30 = line20.rotate(point27);
        point2.Mirror(line30);
        Point point32 = null;
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        Vector vector39 = new Vector(point35, (java.lang.Integer) 0);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        Point point52 = line48.point1;
        boolean b53 = line42.equals((java.lang.Object) line48);
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        boolean b62 = line58.parallel(line61);
        Parabola parabola63 = new Parabola(point54, point55, line58);
        Line line64 = parabola63.FindCenter();
        Point point65 = null;
        Point point66 = null;
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        Point point70 = null;
        Point point71 = null;
        Line line72 = new Line(point70, point71);
        boolean b73 = line69.parallel(line72);
        Parabola parabola74 = new Parabola(point65, point66, line69);
        Line line75 = parabola74.FindCenter();
        boolean b77 = parabola74.equals((java.lang.Object) 0.0f);
        boolean b78 = parabola63.equals((java.lang.Object) b77);
        Point point81 = new Point((double) ' ', (double) 100L);
        parabola63.vertex = point81;
        Line line83 = line42.rotate(point81);
        Parabola parabola84 = new Parabola(point32, point35, line83);
        Point point85 = parabola84.vertex;
        Point point86 = parabola84.vertex;
        Point point87 = parabola84.vertex;
        line30.point1 = point87;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line58 and line20", line58.equals(line20) ? line58.hashCode() == line20.hashCode() : true);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test240");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        Point point30 = null;
        Line line31 = line25.rotate(point30);
        boolean b32 = line22.perpendicular(line31);
        Point point35 = new Point((double) ' ', (double) 100L);
        Line line36 = line22.rotate(point35);
        Point point39 = new Point((double) ' ', (double) 100L);
        point39.y = 10.0d;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Parabola parabola49 = new Parabola(point35, point39, line44);
        Point point50 = null;
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Parabola parabola59 = new Parabola(point50, point51, line54);
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Parabola parabola69 = new Parabola(point60, point61, line64);
        Point point70 = parabola69.vertex;
        Point point71 = null;
        Point point72 = null;
        Line line73 = new Line(point71, point72);
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        boolean b77 = line73.parallel(line76);
        Point point78 = null;
        line76.point1 = point78;
        parabola69.directrix = line76;
        Point point81 = null;
        Line line82 = line76.rotate(point81);
        boolean b83 = line54.perpendicular(line82);
        Point point84 = line54.point1;
        parabola49.directrix = line54;
        Point point88 = new Point(0.0d, (double) 100.0f);
        parabola49.focus = point88;
        Line line90 = parabola49.FindCenter();
        Point point91 = parabola49.vertex;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line90", line4.equals(line90) ? line4.hashCode() == line90.hashCode() : true);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test241");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point13 = vector6.origin;
        Vector vector15 = new Vector(point13, (java.lang.Integer) 0);
        Point point16 = null;
        Vector vector18 = new Vector(point16, (java.lang.Integer) (-1));
        int i19 = vector18.degrees;
        Point point22 = new Point((double) ' ', (double) 100L);
        point22.Mirror("");
        double d25 = point22.x;
        vector18.origin = point22;
        Point point27 = vector18.origin;
        vector15.origin = point27;
        Point point29 = vector15.origin;
        Point point32 = new Point((double) 10, (double) 10.0f);
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Point point43 = parabola42.vertex;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        parabola42.directrix = line49;
        Point point56 = new Point((double) ' ', (double) 100L);
        point56.Mirror("");
        Line line59 = line49.rotate(point56);
        point32.Mirror(line49);
        point32.Mirror("hi!");
        vector15.origin = point32;
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        Point point67 = null;
        Point point68 = null;
        Line line69 = new Line(point67, point68);
        boolean b70 = line66.parallel(line69);
        Point point71 = line66.point1;
        Point point74 = new Point((double) 359, 32.0d);
        line66.point1 = point74;
        Line line76 = new Line(point32, point74);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line46 and line66", line46.equals(line66) ? line46.hashCode() == line66.hashCode() : true);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test242");
        Point point2 = new Point((double) '#', (double) ' ');
        Point point3 = null;
        Point point6 = new Point((double) ' ', (double) 100L);
        double d7 = point6.x;
        double d8 = point6.y;
        Vector vector10 = new Vector(point6, (java.lang.Integer) 0);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = line19.point1;
        boolean b24 = line13.equals((java.lang.Object) line19);
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        boolean b44 = line40.parallel(line43);
        Parabola parabola45 = new Parabola(point36, point37, line40);
        Line line46 = parabola45.FindCenter();
        boolean b48 = parabola45.equals((java.lang.Object) 0.0f);
        boolean b49 = parabola34.equals((java.lang.Object) b48);
        Point point52 = new Point((double) ' ', (double) 100L);
        parabola34.vertex = point52;
        Line line54 = line13.rotate(point52);
        Parabola parabola55 = new Parabola(point3, point6, line54);
        Point point56 = parabola55.vertex;
        boolean b58 = parabola55.equals((java.lang.Object) (short) -1);
        Point point59 = parabola55.vertex;
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        boolean b66 = line62.parallel(line65);
        Point point67 = null;
        line65.point1 = point67;
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        boolean b76 = line65.perpendicular(line71);
        Point point77 = line65.point1;
        Point point80 = new Point((double) ' ', (double) 100L);
        double d81 = point80.x;
        double d82 = point80.y;
        double d83 = point80.x;
        line65.point2 = point80;
        Point point85 = line65.point1;
        Point point86 = line65.point2;
        Point point89 = new Point((double) '#', (double) ' ');
        double d90 = point89.x;
        line65.point2 = point89;
        Parabola parabola92 = new Parabola(point2, point59, line65);
        Point point93 = parabola92.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line62 and line65", line62.equals(line65) ? line62.hashCode() == line65.hashCode() : true);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test243");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Vector vector9 = new Vector(point7, (java.lang.Integer) (-1));
        Point point10 = vector9.origin;
        boolean b12 = vector9.equals((java.lang.Object) (byte) 1);
        Point point13 = vector9.origin;
        boolean b15 = vector9.equals((java.lang.Object) (-1.0f));
        boolean b16 = vector2.equals((java.lang.Object) vector9);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        Line line28 = parabola26.FindCenter();
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.x;
        parabola26.vertex = point31;
        Point point38 = new Point((double) ' ', (double) 100L);
        point38.y = 10.0d;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = null;
        line46.point1 = point48;
        Point point50 = null;
        line46.point1 = point50;
        Parabola parabola52 = new Parabola(point31, point38, line46);
        vector9.origin = point31;
        Point point56 = new Point((double) (byte) -1, (-1.0d));
        double d57 = point56.x;
        vector9.origin = point56;
        double d59 = point56.x;
        Point point62 = new Point((double) ' ', (double) 100L);
        double d63 = point62.y;
        Vector vector65 = new Vector(point62, (java.lang.Integer) 0);
        Line line66 = new Line(point56, point62);
        point62.Mirror("hi!");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line43 and line66", line43.equals(line66) ? line43.hashCode() == line66.hashCode() : true);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test244");
        Point point2 = new Point((double) 0, (double) 100.0f);
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 1L;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        Line line19 = line13.rotate(point18);
        point10.Mirror(line19);
        Parabola parabola21 = new Parabola(point2, point5, line19);
        Point point22 = parabola21.focus;
        Point point23 = parabola21.vertex;
        Line line24 = parabola21.FindCenter();
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        double d30 = point27.y;
        point27.Mirror("");
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        double d38 = point35.y;
        point35.y = (short) -1;
        point35.x = (-1.0d);
        Line line43 = new Line(point27, point35);
        point27.y = (short) 1;
        boolean b46 = line24.equals((java.lang.Object) (short) 1);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line43", line19.equals(line43) ? line19.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test245");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        Point point47 = new Point((double) (byte) 1, (double) 100L);
        Point point48 = null;
        Point point49 = null;
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        boolean b56 = line52.parallel(line55);
        Parabola parabola57 = new Parabola(point48, point49, line52);
        Parabola parabola58 = new Parabola(point33, point47, line52);
        Point point59 = parabola58.vertex;
        Line line60 = parabola58.FindCenter();
        Point point61 = parabola58.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line60 and line10", line60.equals(line10) ? line60.hashCode() == line10.hashCode() : true);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test246");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Point point13 = new Point((double) ' ', (double) 100L);
        double d14 = point13.y;
        parabola9.focus = point13;
        Line line16 = parabola9.directrix;
        Point point17 = parabola9.focus;
        Point point18 = parabola9.focus;
        Point point21 = new Point((double) (byte) -1, (-1.0d));
        Point point24 = new Point((double) ' ', (double) 100L);
        point24.y = 10.0d;
        Point point29 = new Point((double) ' ', (double) 100L);
        double d30 = point29.x;
        double d31 = point29.y;
        double d32 = point29.x;
        Line line33 = new Line(point24, point29);
        double d34 = point29.y;
        Line line35 = new Line(point21, point29);
        point21.x = (short) -1;
        parabola9.vertex = point21;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line4 and line33", line4.equals(line33) ? line4.hashCode() == line33.hashCode() : true);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test247");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point12 = parabola9.vertex;
        Point point13 = null;
        Vector vector15 = new Vector(point13, (java.lang.Integer) (-1));
        Point point16 = vector15.origin;
        boolean b18 = vector15.equals((java.lang.Object) (byte) 1);
        boolean b19 = parabola9.equals((java.lang.Object) vector15);
        boolean b21 = parabola9.equals((java.lang.Object) 0.0f);
        Point point24 = new Point((double) (byte) 0, 35.0d);
        parabola9.focus = point24;
        Point point26 = null;
        Vector vector28 = new Vector(point26, (java.lang.Integer) (-1));
        Point point29 = vector28.origin;
        int i30 = vector28.degrees;
        vector28.degrees = (short) 100;
        vector28.degrees = 359;
        Point point35 = vector28.origin;
        vector28.degrees = (byte) 10;
        Point point38 = vector28.origin;
        Point point39 = vector28.origin;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.x;
        double d44 = point42.y;
        double d45 = point42.x;
        double d46 = point42.x;
        double d47 = point42.y;
        double d48 = point42.x;
        vector28.origin = point42;
        Line line50 = new Line(point24, point42);
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Point point71 = parabola70.vertex;
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        boolean b78 = line74.parallel(line77);
        Point point79 = null;
        line77.point1 = point79;
        parabola70.directrix = line77;
        Point point82 = null;
        Line line83 = line77.rotate(point82);
        boolean b84 = line55.perpendicular(line83);
        point24.Mirror(line55);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line77 and line50", line77.equals(line50) ? line77.hashCode() == line50.hashCode() : true);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test248");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        Point point6 = new Point((double) (byte) -1, (-1.0d));
        Point point9 = new Point((double) ' ', (double) 100L);
        point9.y = 10.0d;
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        Line line18 = new Line(point9, point14);
        double d19 = point14.y;
        Line line20 = new Line(point6, point14);
        vector2.origin = point14;
        vector2.degrees = (byte) 0;
        Point point24 = null;
        Vector vector26 = new Vector(point24, (java.lang.Integer) (-1));
        Point point27 = vector26.origin;
        boolean b29 = vector26.equals((java.lang.Object) (byte) 1);
        Point point30 = vector26.origin;
        Point point31 = null;
        Vector vector33 = new Vector(point31, (java.lang.Integer) (-1));
        Point point34 = vector33.origin;
        boolean b36 = vector33.equals((java.lang.Object) (byte) 1);
        Point point37 = vector33.origin;
        boolean b39 = vector33.equals((java.lang.Object) (-1.0f));
        boolean b40 = vector26.equals((java.lang.Object) vector33);
        Point point41 = null;
        Point point42 = null;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Parabola parabola50 = new Parabola(point41, point42, line45);
        Line line51 = parabola50.FindCenter();
        Line line52 = parabola50.FindCenter();
        Point point55 = new Point((double) ' ', (double) 100L);
        double d56 = point55.x;
        double d57 = point55.y;
        double d58 = point55.x;
        parabola50.vertex = point55;
        Point point62 = new Point((double) ' ', (double) 100L);
        point62.y = 10.0d;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Point point72 = null;
        line70.point1 = point72;
        Point point74 = null;
        line70.point1 = point74;
        Parabola parabola76 = new Parabola(point55, point62, line70);
        vector33.origin = point55;
        Point point80 = new Point((double) (byte) -1, (-1.0d));
        double d81 = point80.x;
        vector33.origin = point80;
        double d83 = point80.y;
        vector2.origin = point80;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line70 and line20", line70.equals(line20) ? line70.hashCode() == line20.hashCode() : true);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test249");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = null;
        Line line22 = line16.rotate(point21);
        Point point23 = line22.point2;
        Point point24 = line22.point1;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        boolean b37 = parabola34.equals((java.lang.Object) 0.0f);
        Point point40 = new Point((double) ' ', (double) 100L);
        double d41 = point40.y;
        Vector vector43 = new Vector(point40, (java.lang.Integer) 100);
        parabola34.focus = point40;
        Point point45 = parabola34.focus;
        Line line46 = parabola34.directrix;
        Point point49 = new Point((double) '#', (double) (short) -1);
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        boolean b52 = line46.parallel(line51);
        boolean b53 = line22.perpendicular(line46);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line13 and line51", line13.equals(line51) ? line13.hashCode() == line51.hashCode() : true);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test250");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point12 = parabola9.focus;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Point point20 = null;
        line18.point1 = point20;
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        boolean b28 = line24.parallel(line27);
        boolean b29 = line18.perpendicular(line24);
        Point point30 = line18.point1;
        Point point33 = new Point((double) ' ', (double) 100L);
        double d34 = point33.x;
        double d35 = point33.y;
        double d36 = point33.x;
        line18.point2 = point33;
        Point point38 = line18.point1;
        Point point39 = line18.point2;
        parabola9.directrix = line18;
        Line line41 = parabola9.FindCenter();
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line24 and line18", line24.equals(line18) ? line24.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test251");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        boolean b23 = line19.parallel(line22);
        boolean b24 = line11.perpendicular(line22);
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Line line35 = parabola34.FindCenter();
        Line line36 = parabola34.FindCenter();
        Point point37 = parabola34.vertex;
        Point point38 = null;
        Vector vector40 = new Vector(point38, (java.lang.Integer) (-1));
        Point point41 = vector40.origin;
        boolean b43 = vector40.equals((java.lang.Object) (byte) 1);
        boolean b44 = parabola34.equals((java.lang.Object) vector40);
        boolean b46 = parabola34.equals((java.lang.Object) 0.0f);
        Point point49 = new Point((double) (byte) 0, 35.0d);
        parabola34.focus = point49;
        Line line51 = line22.rotate(point49);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        boolean b58 = line54.parallel(line57);
        Point point59 = null;
        line57.point1 = point59;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        boolean b68 = line57.perpendicular(line63);
        Point point69 = line57.point1;
        Point point72 = new Point((double) ' ', (double) 100L);
        double d73 = point72.x;
        double d74 = point72.y;
        double d75 = point72.x;
        line57.point2 = point72;
        Point point77 = line57.point1;
        Point point78 = line57.point2;
        Point point81 = new Point((double) '#', (double) ' ');
        double d82 = point81.x;
        line57.point2 = point81;
        Point point84 = line57.point2;
        Point point85 = line57.point2;
        Point point86 = line57.point1;
        boolean b87 = point49.equals((java.lang.Object) line57);
        point49.x = 0.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line57 and line29", line57.equals(line29) ? line57.hashCode() == line29.hashCode() : true);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test252");
        Point point2 = new Point((double) (byte) 1, (double) 100L);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        Point point6 = null;
        Point point7 = null;
        Line line8 = new Line(point6, point7);
        boolean b9 = line5.parallel(line8);
        Point point10 = null;
        Line line11 = line5.rotate(point10);
        point2.Mirror(line11);
        Point point13 = line11.point1;
        Point point14 = null;
        Point point15 = null;
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        boolean b22 = line18.parallel(line21);
        Parabola parabola23 = new Parabola(point14, point15, line18);
        Point point24 = parabola23.vertex;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Point point32 = null;
        line30.point1 = point32;
        parabola23.directrix = line30;
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.x;
        double d39 = point37.y;
        line30.point1 = point37;
        line11.point2 = point37;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line8 and line11", line8.equals(line11) ? line8.hashCode() == line11.hashCode() : true);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test253");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = line4.point1;
        Point point13 = new Point((double) (byte) 1, (double) 100L);
        Vector vector15 = new Vector(point13, (java.lang.Integer) 0);
        line4.point1 = point13;
        Vector vector18 = new Vector(point13, (java.lang.Integer) 359);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line4", line7.equals(line4) ? line7.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test254");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point13 = new Point((double) (short) 10, (double) 100.0f);
        parabola9.vertex = point13;
        Point point15 = parabola9.vertex;
        parabola9.Mirror();
        Point point17 = null;
        Vector vector19 = new Vector(point17, (java.lang.Integer) (-1));
        Point point20 = vector19.origin;
        vector19.degrees = (byte) 10;
        boolean b23 = parabola9.equals((java.lang.Object) vector19);
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Parabola parabola33 = new Parabola(point24, point25, line28);
        Line line34 = parabola33.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        Parabola parabola44 = new Parabola(point35, point36, line39);
        Line line45 = parabola44.FindCenter();
        boolean b47 = parabola44.equals((java.lang.Object) 0.0f);
        boolean b48 = parabola33.equals((java.lang.Object) b47);
        Point point51 = new Point((double) ' ', (double) 100L);
        parabola33.vertex = point51;
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Parabola parabola62 = new Parabola(point53, point54, line57);
        Point point63 = parabola62.focus;
        Point point66 = new Point((double) ' ', (double) 100L);
        double d67 = point66.y;
        parabola62.focus = point66;
        Line line69 = new Line(point51, point66);
        vector19.origin = point66;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line57 and line69", line57.equals(line69) ? line57.hashCode() == line69.hashCode() : true);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test255");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = parabola52.vertex;
        Line line54 = parabola52.directrix;
        Line line55 = parabola52.directrix;
        Line line56 = parabola52.directrix;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        Point point64 = null;
        line62.point1 = point64;
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        boolean b72 = line68.parallel(line71);
        boolean b73 = line62.perpendicular(line68);
        Point point76 = new Point((double) ' ', (double) 100L);
        double d77 = point76.x;
        double d78 = point76.y;
        double d79 = point76.y;
        point76.Mirror("");
        point76.y = 100.0f;
        Line line84 = line68.rotate(point76);
        double d85 = point76.x;
        line56.point1 = point76;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line29 and line54", line29.equals(line54) ? line29.hashCode() == line54.hashCode() : true);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test256");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.focus;
        Line line22 = parabola9.directrix;
        Point point23 = parabola9.vertex;
        Line line24 = null;
        parabola9.directrix = line24;
        Point point26 = null;
        parabola9.vertex = point26;
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Point point35 = null;
        line33.point1 = point35;
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        boolean b43 = line39.parallel(line42);
        boolean b44 = line33.perpendicular(line39);
        Point point45 = line33.point1;
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        line33.point2 = point48;
        Point point53 = line33.point1;
        boolean b54 = parabola9.equals((java.lang.Object) point53);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line39 and line33", line39.equals(line33) ? line39.hashCode() == line33.hashCode() : true);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test257");
        Point point2 = new Point((double) 10, (double) 10.0f);
        Point point5 = new Point((double) (byte) 1, (double) 100L);
        double d6 = point5.x;
        Line line7 = new Line(point2, point5);
        Point point8 = null;
        Point point9 = null;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Parabola parabola17 = new Parabola(point8, point9, line12);
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        Parabola parabola27 = new Parabola(point18, point19, line22);
        boolean b28 = parabola17.equals((java.lang.Object) point19);
        Point point29 = parabola17.vertex;
        Point point32 = new Point((double) ' ', (double) 100L);
        double d33 = point32.x;
        double d34 = point32.y;
        double d35 = point32.x;
        parabola17.vertex = point32;
        Point point39 = new Point((double) ' ', (double) 100L);
        double d40 = point39.x;
        double d41 = point39.y;
        double d42 = point39.x;
        double d43 = point39.y;
        point39.Mirror("hi!");
        parabola17.focus = point39;
        Point point47 = parabola17.vertex;
        boolean b48 = point2.equals((java.lang.Object) point47);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line12", line7.equals(line12) ? line7.hashCode() == line12.hashCode() : true);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test258");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        line50.point1 = point52;
        boolean b54 = line37.parallel(line50);
        Point point55 = line37.point2;
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        boolean b64 = line60.parallel(line63);
        Parabola parabola65 = new Parabola(point56, point57, line60);
        Point point66 = parabola65.vertex;
        parabola65.Mirror();
        Point point68 = parabola65.focus;
        Point point69 = null;
        Vector vector71 = new Vector(point69, (java.lang.Integer) (-1));
        int i72 = vector71.degrees;
        Point point73 = null;
        vector71.origin = point73;
        vector71.degrees = (byte) 100;
        boolean b77 = parabola65.equals((java.lang.Object) vector71);
        Line line78 = parabola65.directrix;
        Line line79 = parabola65.FindCenter();
        Point point82 = new Point((double) 0, 1.0d);
        parabola65.vertex = point82;
        line37.point1 = point82;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line50 and line43", line50.equals(line43) ? line50.hashCode() == line43.hashCode() : true);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test259");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Vector vector20 = new Vector(point14, (java.lang.Integer) 1);
        point14.y = 1.0f;
        double d23 = point14.x;
        double d24 = point14.x;
        Point point25 = null;
        Point point26 = null;
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        boolean b33 = line29.parallel(line32);
        Parabola parabola34 = new Parabola(point25, point26, line29);
        Point point35 = parabola34.focus;
        Point point38 = new Point((double) ' ', (double) 100L);
        double d39 = point38.y;
        parabola34.focus = point38;
        Line line41 = parabola34.directrix;
        Point point44 = new Point((double) (byte) -1, (-1.0d));
        parabola34.focus = point44;
        Line line46 = new Line(point14, point44);
        Point point47 = line46.point1;
        double d48 = point47.y;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line46", line7.equals(line46) ? line7.hashCode() == line46.hashCode() : true);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test260");
        Point point2 = new Point((double) (byte) -1, (-1.0d));
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 10.0d;
        Point point10 = new Point((double) ' ', (double) 100L);
        double d11 = point10.x;
        double d12 = point10.y;
        double d13 = point10.x;
        Line line14 = new Line(point5, point10);
        double d15 = point10.y;
        Line line16 = new Line(point2, point10);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Point point27 = parabola26.vertex;
        Point point30 = new Point((double) (short) 10, (double) 100.0f);
        parabola26.vertex = point30;
        Point point32 = parabola26.vertex;
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        Point point51 = null;
        line49.point1 = point51;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        boolean b60 = line49.perpendicular(line55);
        Point point61 = line49.point1;
        parabola42.directrix = line49;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Point point70 = null;
        Line line71 = line68.rotate(point70);
        boolean b72 = line49.parallel(line68);
        Point point73 = line68.point2;
        Parabola parabola74 = new Parabola(point2, point32, line68);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line37 and line14", line37.equals(line14) ? line37.hashCode() == line14.hashCode() : true);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test261");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Point point32 = parabola31.vertex;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Point point40 = null;
        line38.point1 = point40;
        parabola31.directrix = line38;
        Point point43 = null;
        Line line44 = line38.rotate(point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        Line line53 = line47.rotate(point52);
        boolean b54 = line44.perpendicular(line53);
        Point point57 = new Point((double) ' ', (double) 100L);
        Line line58 = line44.rotate(point57);
        point57.y = (-1);
        parabola9.vertex = point57;
        Line line62 = parabola9.FindCenter();
        Line line63 = parabola9.directrix;
        Point point66 = new Point((double) ' ', (double) 100L);
        double d67 = point66.x;
        double d68 = point66.y;
        double d69 = point66.y;
        point66.Mirror("");
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.x;
        double d76 = point74.y;
        double d77 = point74.y;
        point74.y = (short) -1;
        point74.x = (-1.0d);
        Line line82 = new Line(point66, point74);
        Line line83 = line63.rotate(point66);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line47 and line82", line47.equals(line82) ? line47.hashCode() == line82.hashCode() : true);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test262");
        Point point2 = new Point((double) 0, (double) 100.0f);
        point2.y = 100.0f;
        Point point5 = null;
        Point point8 = new Point((double) (short) 10, (double) 100.0f);
        Line line9 = new Line(point5, point8);
        point2.Mirror(line9);
        Point point13 = new Point((double) ' ', (double) 100L);
        double d14 = point13.x;
        double d15 = point13.y;
        double d16 = point13.y;
        point13.Mirror("");
        point13.y = 100.0f;
        double d21 = point13.y;
        line9.point2 = point13;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Point point26 = null;
        Line line27 = new Line(point25, point26);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        boolean b31 = line27.parallel(line30);
        Parabola parabola32 = new Parabola(point23, point24, line27);
        Point point33 = line27.point1;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        Point point41 = null;
        line39.point1 = point41;
        Point point43 = null;
        line39.point1 = point43;
        boolean b45 = line27.parallel(line39);
        boolean b46 = line9.perpendicular(line39);
        Point point49 = new Point((double) ' ', (double) 100L);
        double d50 = point49.x;
        double d51 = point49.y;
        double d52 = point49.x;
        point49.Mirror("hi!");
        point49.y = 0.0d;
        Line line57 = line39.rotate(point49);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line9 and line36", line9.equals(line36) ? line9.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test263");
        Point point2 = new Point((double) 0, (double) 100.0f);
        Point point5 = new Point((double) ' ', (double) 100L);
        point5.y = 1L;
        Point point10 = new Point((double) (byte) 1, (double) 100L);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        Line line19 = line13.rotate(point18);
        point10.Mirror(line19);
        Parabola parabola21 = new Parabola(point2, point5, line19);
        Point point22 = parabola21.focus;
        Point point23 = parabola21.vertex;
        Line line24 = parabola21.FindCenter();
        Point point25 = parabola21.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line24", line16.equals(line24) ? line16.hashCode() == line24.hashCode() : true);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test264");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        boolean b51 = line47.parallel(line50);
        Point point52 = null;
        line50.point1 = point52;
        boolean b54 = line37.parallel(line50);
        Point point57 = new Point((double) (short) 1, (double) 0.0f);
        line37.point1 = point57;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line40 and line37", line40.equals(line37) ? line40.hashCode() == line37.hashCode() : true);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test265");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.focus;
        Line line11 = parabola9.directrix;
        Point point12 = null;
        line11.point1 = point12;
        Point point14 = null;
        line11.point1 = point14;
        Point point16 = null;
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Line line20 = new Line(point18, point19);
        Point point21 = null;
        Point point22 = null;
        Line line23 = new Line(point21, point22);
        boolean b24 = line20.parallel(line23);
        Parabola parabola25 = new Parabola(point16, point17, line20);
        Point point26 = parabola25.vertex;
        parabola25.Mirror();
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.y;
        point30.Mirror("");
        parabola25.vertex = point30;
        Line line37 = parabola25.FindCenter();
        Point point38 = parabola25.vertex;
        double d39 = point38.y;
        line11.point2 = point38;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line4", line7.equals(line4) ? line7.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test266");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        Point point11 = new Point((double) (byte) 1, (double) (short) 0);
        vector6.origin = point11;
        Point point15 = new Point((double) ' ', (double) 100L);
        double d16 = point15.x;
        double d17 = point15.y;
        double d18 = point15.x;
        double d19 = point15.y;
        vector6.origin = point15;
        double d21 = point15.y;
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        boolean b34 = parabola31.equals((java.lang.Object) 0.0f);
        Point point37 = new Point((double) ' ', (double) 100L);
        double d38 = point37.y;
        Vector vector40 = new Vector(point37, (java.lang.Integer) 100);
        parabola31.focus = point37;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Point point49 = null;
        line47.point1 = point49;
        Point point51 = null;
        line47.point1 = point51;
        Point point53 = line47.point1;
        Point point54 = line47.point1;
        Point point55 = line47.point1;
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        Point point61 = null;
        Point point62 = null;
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        Point point66 = null;
        Point point67 = null;
        Line line68 = new Line(point66, point67);
        boolean b69 = line65.parallel(line68);
        Parabola parabola70 = new Parabola(point61, point62, line65);
        Point point71 = parabola70.vertex;
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        boolean b78 = line74.parallel(line77);
        Point point79 = null;
        line77.point1 = point79;
        parabola70.directrix = line77;
        point58.Mirror(line77);
        line47.point2 = point58;
        Parabola parabola84 = new Parabola(point15, point37, line47);
        Point point85 = parabola84.focus;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line77 and line47", line77.equals(line47) ? line77.hashCode() == line47.hashCode() : true);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test267");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Vector vector9 = new Vector(point7, (java.lang.Integer) (-1));
        Point point10 = vector9.origin;
        boolean b12 = vector9.equals((java.lang.Object) (byte) 1);
        Point point13 = vector9.origin;
        boolean b15 = vector9.equals((java.lang.Object) (-1.0f));
        boolean b16 = vector2.equals((java.lang.Object) vector9);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        Line line28 = parabola26.FindCenter();
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.x;
        parabola26.vertex = point31;
        Point point38 = new Point((double) ' ', (double) 100L);
        point38.y = 10.0d;
        Point point41 = null;
        Point point42 = null;
        Line line43 = new Line(point41, point42);
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        boolean b47 = line43.parallel(line46);
        Point point48 = null;
        line46.point1 = point48;
        Point point50 = null;
        line46.point1 = point50;
        Parabola parabola52 = new Parabola(point31, point38, line46);
        vector9.origin = point31;
        Point point56 = new Point((double) (byte) -1, (-1.0d));
        double d57 = point56.x;
        vector9.origin = point56;
        double d59 = point56.x;
        Point point62 = new Point((double) ' ', (double) 100L);
        double d63 = point62.y;
        Vector vector65 = new Vector(point62, (java.lang.Integer) 0);
        Line line66 = new Line(point56, point62);
        Vector vector68 = new Vector(point56, (java.lang.Integer) 1);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line43 and line66", line43.equals(line66) ? line43.hashCode() == line66.hashCode() : true);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test268");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.x;
        Point point5 = null;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Line line9 = new Line(point7, point8);
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        boolean b13 = line9.parallel(line12);
        Parabola parabola14 = new Parabola(point5, point6, line9);
        Line line15 = parabola14.FindCenter();
        boolean b17 = parabola14.equals((java.lang.Object) 0.0f);
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        Vector vector24 = new Vector(point20, (java.lang.Integer) 0);
        vector24.degrees = (byte) 1;
        Point point29 = new Point((double) (byte) 1, (double) (short) 0);
        vector24.origin = point29;
        Point point31 = null;
        Point point32 = null;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Parabola parabola40 = new Parabola(point31, point32, line35);
        Line line41 = parabola40.FindCenter();
        Line line42 = parabola40.FindCenter();
        Point point45 = new Point((double) ' ', (double) 100L);
        double d46 = point45.x;
        double d47 = point45.y;
        double d48 = point45.x;
        parabola40.vertex = point45;
        Point point52 = new Point((double) ' ', (double) 100L);
        point52.y = 10.0d;
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Point point62 = null;
        line60.point1 = point62;
        Point point64 = null;
        line60.point1 = point64;
        Parabola parabola66 = new Parabola(point45, point52, line60);
        vector24.origin = point45;
        Point point70 = new Point((double) ' ', (double) 100L);
        double d71 = point70.x;
        double d72 = point70.y;
        vector24.origin = point70;
        parabola14.vertex = point70;
        Point point75 = null;
        Point point76 = null;
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        Point point80 = null;
        Point point81 = null;
        Line line82 = new Line(point80, point81);
        boolean b83 = line79.parallel(line82);
        Parabola parabola84 = new Parabola(point75, point76, line79);
        Point point85 = parabola84.vertex;
        Point point88 = new Point((double) (short) 10, (double) 100.0f);
        parabola84.vertex = point88;
        Point point90 = parabola84.vertex;
        Line line91 = parabola84.FindCenter();
        Point point92 = parabola84.focus;
        Line line93 = parabola84.directrix;
        boolean b94 = parabola14.equals((java.lang.Object) parabola84);
        Point point95 = parabola14.vertex;
        Line line96 = new Line(point2, point95);
        point95.x = 97;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line82 and line96", line82.equals(line96) ? line82.hashCode() == line96.hashCode() : true);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test269");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) ' ', (double) 100L);
        point21.y = 10.0d;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Point point31 = null;
        line29.point1 = point31;
        Point point33 = null;
        line29.point1 = point33;
        Parabola parabola35 = new Parabola(point14, point21, line29);
        Line line36 = parabola35.FindCenter();
        Point point37 = null;
        Point point40 = new Point((double) ' ', (double) 100L);
        double d41 = point40.x;
        double d42 = point40.y;
        Vector vector44 = new Vector(point40, (java.lang.Integer) 0);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Point point55 = null;
        line53.point1 = point55;
        Point point57 = line53.point1;
        boolean b58 = line47.equals((java.lang.Object) line53);
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        Parabola parabola68 = new Parabola(point59, point60, line63);
        Line line69 = parabola68.FindCenter();
        Point point70 = null;
        Point point71 = null;
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        boolean b78 = line74.parallel(line77);
        Parabola parabola79 = new Parabola(point70, point71, line74);
        Line line80 = parabola79.FindCenter();
        boolean b82 = parabola79.equals((java.lang.Object) 0.0f);
        boolean b83 = parabola68.equals((java.lang.Object) b82);
        Point point86 = new Point((double) ' ', (double) 100L);
        parabola68.vertex = point86;
        Line line88 = line47.rotate(point86);
        Parabola parabola89 = new Parabola(point37, point40, line88);
        Point point90 = parabola89.vertex;
        Point point91 = parabola89.vertex;
        Point point92 = parabola89.focus;
        Line line93 = parabola89.directrix;
        boolean b94 = parabola35.equals((java.lang.Object) line93);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line36", line7.equals(line36) ? line7.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test270");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Line line25 = parabola9.directrix;
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        Point point29 = null;
        Point point30 = null;
        Line line31 = new Line(point29, point30);
        boolean b32 = line28.parallel(line31);
        Point point33 = null;
        line31.point1 = point33;
        Point point35 = null;
        line31.point1 = point35;
        Point point37 = line31.point1;
        Point point38 = line31.point1;
        parabola9.directrix = line31;
        Point point42 = new Point((double) 0, (double) 100.0f);
        point42.y = 100.0f;
        Point point45 = null;
        Point point48 = new Point((double) (short) 10, (double) 100.0f);
        Line line49 = new Line(point45, point48);
        point42.Mirror(line49);
        Point point53 = new Point((double) ' ', (double) 100L);
        double d54 = point53.x;
        double d55 = point53.y;
        double d56 = point53.y;
        point53.Mirror("");
        point53.y = 100.0f;
        double d61 = point53.y;
        line49.point2 = point53;
        parabola9.focus = point53;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line49", line7.equals(line49) ? line7.hashCode() == line49.hashCode() : true);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test271");
        Point point2 = new Point((double) ' ', (double) 100L);
        point2.y = 10.0d;
        Point point7 = new Point((double) ' ', (double) 100L);
        double d8 = point7.x;
        double d9 = point7.y;
        double d10 = point7.x;
        Line line11 = new Line(point2, point7);
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Point point22 = line16.point1;
        boolean b23 = line11.perpendicular(line16);
        Point point24 = null;
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        Vector vector31 = new Vector(point27, (java.lang.Integer) 0);
        Point point32 = null;
        Point point33 = null;
        Line line34 = new Line(point32, point33);
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        line40.point1 = point42;
        Point point44 = line40.point1;
        boolean b45 = line34.equals((java.lang.Object) line40);
        Point point46 = null;
        Point point47 = null;
        Point point48 = null;
        Point point49 = null;
        Line line50 = new Line(point48, point49);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        boolean b54 = line50.parallel(line53);
        Parabola parabola55 = new Parabola(point46, point47, line50);
        Line line56 = parabola55.FindCenter();
        Point point57 = null;
        Point point58 = null;
        Point point59 = null;
        Point point60 = null;
        Line line61 = new Line(point59, point60);
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        boolean b65 = line61.parallel(line64);
        Parabola parabola66 = new Parabola(point57, point58, line61);
        Line line67 = parabola66.FindCenter();
        boolean b69 = parabola66.equals((java.lang.Object) 0.0f);
        boolean b70 = parabola55.equals((java.lang.Object) b69);
        Point point73 = new Point((double) ' ', (double) 100L);
        parabola55.vertex = point73;
        Line line75 = line34.rotate(point73);
        Parabola parabola76 = new Parabola(point24, point27, line75);
        Point point77 = parabola76.vertex;
        Point point78 = parabola76.vertex;
        Vector vector80 = new Vector(point78, (java.lang.Integer) 1);
        boolean b81 = line11.equals((java.lang.Object) point78);
        Point point82 = null;
        Point point83 = null;
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        Point point87 = null;
        Point point88 = null;
        Line line89 = new Line(point87, point88);
        boolean b90 = line86.parallel(line89);
        Parabola parabola91 = new Parabola(point82, point83, line86);
        Point point92 = parabola91.vertex;
        parabola91.Mirror();
        Point point94 = parabola91.focus;
        Line line95 = parabola91.directrix;
        Line line96 = parabola91.FindCenter();
        boolean b97 = point78.equals((java.lang.Object) line96);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line11 and line75", line11.equals(line75) ? line11.hashCode() == line75.hashCode() : true);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test272");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.y;
        point2.y = (short) -1;
        point2.x = (-1.0d);
        point2.y = (short) 0;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Parabola parabola21 = new Parabola(point12, point13, line16);
        Line line22 = parabola21.FindCenter();
        boolean b24 = parabola21.equals((java.lang.Object) 0.0f);
        Point point27 = new Point((double) ' ', (double) 100L);
        double d28 = point27.x;
        double d29 = point27.y;
        Vector vector31 = new Vector(point27, (java.lang.Integer) 0);
        vector31.degrees = (byte) 1;
        Point point36 = new Point((double) (byte) 1, (double) (short) 0);
        vector31.origin = point36;
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Line line49 = parabola47.FindCenter();
        Point point52 = new Point((double) ' ', (double) 100L);
        double d53 = point52.x;
        double d54 = point52.y;
        double d55 = point52.x;
        parabola47.vertex = point52;
        Point point59 = new Point((double) ' ', (double) 100L);
        point59.y = 10.0d;
        Point point62 = null;
        Point point63 = null;
        Line line64 = new Line(point62, point63);
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        boolean b68 = line64.parallel(line67);
        Point point69 = null;
        line67.point1 = point69;
        Point point71 = null;
        line67.point1 = point71;
        Parabola parabola73 = new Parabola(point52, point59, line67);
        vector31.origin = point52;
        Point point77 = new Point((double) ' ', (double) 100L);
        double d78 = point77.x;
        double d79 = point77.y;
        vector31.origin = point77;
        parabola21.vertex = point77;
        double d82 = point77.y;
        Line line83 = new Line(point2, point77);
        Vector vector85 = new Vector(point77, (java.lang.Integer) 359);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line83", line45.equals(line83) ? line45.hashCode() == line83.hashCode() : true);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test273");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        double d5 = point2.x;
        Point point6 = null;
        Point point7 = null;
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        boolean b14 = line10.parallel(line13);
        Parabola parabola15 = new Parabola(point6, point7, line10);
        Line line16 = parabola15.FindCenter();
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Line line27 = parabola26.FindCenter();
        boolean b29 = parabola26.equals((java.lang.Object) 0.0f);
        boolean b30 = parabola15.equals((java.lang.Object) b29);
        Point point33 = new Point((double) ' ', (double) 100L);
        parabola15.vertex = point33;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        Line line43 = line37.rotate(point42);
        Parabola parabola44 = new Parabola(point2, point33, line37);
        boolean b46 = point33.equals((java.lang.Object) ' ');
        Point point49 = new Point((double) (byte) -1, (-1.0d));
        double d50 = point49.x;
        Point point53 = new Point((double) ' ', (double) 100L);
        double d54 = point53.x;
        double d55 = point53.y;
        double d56 = point53.x;
        double d57 = point53.x;
        double d58 = point53.y;
        Line line59 = new Line(point49, point53);
        Point point60 = line59.point2;
        point33.Mirror(line59);
        point33.x = (short) 10;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line10 and line59", line10.equals(line59) ? line10.hashCode() == line59.hashCode() : true);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test274");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) 10.0f, (double) 0);
        parabola9.focus = point21;
        Point point25 = new Point((double) ' ', (double) 100L);
        point25.y = 10.0d;
        Point point30 = new Point((double) ' ', (double) 100L);
        double d31 = point30.x;
        double d32 = point30.y;
        double d33 = point30.x;
        Line line34 = new Line(point25, point30);
        point25.Mirror("hi!");
        boolean b37 = point21.equals((java.lang.Object) point25);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line34 and line4", line34.equals(line4) ? line34.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test275");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point12 = parabola9.vertex;
        Point point13 = null;
        Vector vector15 = new Vector(point13, (java.lang.Integer) (-1));
        Point point16 = vector15.origin;
        boolean b18 = vector15.equals((java.lang.Object) (byte) 1);
        boolean b19 = parabola9.equals((java.lang.Object) vector15);
        boolean b21 = parabola9.equals((java.lang.Object) 0.0f);
        Point point24 = new Point((double) (byte) 0, 35.0d);
        parabola9.focus = point24;
        Point point26 = null;
        Vector vector28 = new Vector(point26, (java.lang.Integer) (-1));
        Point point29 = vector28.origin;
        int i30 = vector28.degrees;
        vector28.degrees = (short) 100;
        vector28.degrees = 359;
        Point point35 = vector28.origin;
        vector28.degrees = (byte) 10;
        Point point38 = vector28.origin;
        Point point39 = vector28.origin;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.x;
        double d44 = point42.y;
        double d45 = point42.x;
        double d46 = point42.x;
        double d47 = point42.y;
        double d48 = point42.x;
        vector28.origin = point42;
        Line line50 = new Line(point24, point42);
        Vector vector52 = new Vector(point42, (java.lang.Integer) 10);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line50", line7.equals(line50) ? line7.hashCode() == line50.hashCode() : true);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test276");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.y;
        point14.Mirror("");
        parabola9.vertex = point14;
        Line line21 = parabola9.FindCenter();
        parabola9.Mirror();
        Point point25 = new Point((double) ' ', (double) 100L);
        double d26 = point25.y;
        Vector vector28 = new Vector(point25, (java.lang.Integer) 0);
        point25.Mirror("");
        boolean b31 = parabola9.equals((java.lang.Object) point25);
        double d32 = point25.x;
        Point point35 = new Point((double) ' ', (double) 100L);
        double d36 = point35.x;
        double d37 = point35.y;
        double d38 = point35.x;
        double d39 = point35.y;
        double d40 = point35.y;
        Line line41 = new Line(point25, point35);
        point25.y = 0.0d;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line41", line7.equals(line41) ? line7.hashCode() == line41.hashCode() : true);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test277");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = null;
        Point point21 = null;
        Line line22 = new Line(point20, point21);
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        boolean b26 = line22.parallel(line25);
        boolean b27 = line16.perpendicular(line22);
        Point point28 = line16.point1;
        parabola9.directrix = line16;
        Line line30 = parabola9.FindCenter();
        Point point31 = null;
        Point point32 = null;
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        Point point36 = null;
        Point point37 = null;
        Line line38 = new Line(point36, point37);
        boolean b39 = line35.parallel(line38);
        Parabola parabola40 = new Parabola(point31, point32, line35);
        Point point41 = parabola40.vertex;
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        Point point45 = null;
        Point point46 = null;
        Line line47 = new Line(point45, point46);
        boolean b48 = line44.parallel(line47);
        Point point49 = null;
        line47.point1 = point49;
        parabola40.directrix = line47;
        Point point54 = new Point((double) ' ', (double) 100L);
        point54.Mirror("");
        Line line57 = line47.rotate(point54);
        parabola9.directrix = line57;
        Point point59 = line57.point2;
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        Point point63 = null;
        Point point64 = null;
        Line line65 = new Line(point63, point64);
        boolean b66 = line62.parallel(line65);
        Point point67 = null;
        line65.point1 = point67;
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        boolean b76 = line65.perpendicular(line71);
        Point point77 = line65.point1;
        Point point78 = line65.point1;
        Point point81 = new Point((double) ' ', (double) 100L);
        double d82 = point81.y;
        Vector vector84 = new Vector(point81, (java.lang.Integer) 0);
        point81.Mirror("");
        line65.point2 = point81;
        boolean b88 = line57.perpendicular(line65);
        Point point89 = line57.point1;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line65", line7.equals(line65) ? line7.hashCode() == line65.hashCode() : true);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test278");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        boolean b12 = parabola9.equals((java.lang.Object) 0.0f);
        Point point13 = parabola9.vertex;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = null;
        Point point24 = null;
        Line line25 = new Line(point23, point24);
        Point point26 = null;
        Point point27 = null;
        Line line28 = new Line(point26, point27);
        boolean b29 = line25.parallel(line28);
        boolean b30 = line19.perpendicular(line25);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        boolean b38 = line25.perpendicular(line36);
        parabola9.directrix = line36;
        Point point42 = new Point((double) 0, (double) 100.0f);
        Point point45 = new Point((double) ' ', (double) 100L);
        point45.y = 1L;
        Point point50 = new Point((double) (byte) 1, (double) 100L);
        Point point51 = null;
        Point point52 = null;
        Line line53 = new Line(point51, point52);
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        boolean b57 = line53.parallel(line56);
        Point point58 = null;
        Line line59 = line53.rotate(point58);
        point50.Mirror(line59);
        Parabola parabola61 = new Parabola(point42, point45, line59);
        Point point62 = parabola61.focus;
        line36.point1 = point62;
        Vector vector65 = new Vector(point62, (java.lang.Integer) 97);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line19 and line36", line19.equals(line36) ? line19.hashCode() == line36.hashCode() : true);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test279");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point48 = new Point((double) ' ', (double) 100L);
        double d49 = point48.x;
        double d50 = point48.y;
        double d51 = point48.x;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Point point55 = null;
        Line line56 = new Line(point54, point55);
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        boolean b60 = line56.parallel(line59);
        Parabola parabola61 = new Parabola(point52, point53, line56);
        Line line62 = parabola61.FindCenter();
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Parabola parabola72 = new Parabola(point63, point64, line67);
        Line line73 = parabola72.FindCenter();
        boolean b75 = parabola72.equals((java.lang.Object) 0.0f);
        boolean b76 = parabola61.equals((java.lang.Object) b75);
        Point point79 = new Point((double) ' ', (double) 100L);
        parabola61.vertex = point79;
        Point point81 = null;
        Point point82 = null;
        Line line83 = new Line(point81, point82);
        Point point84 = null;
        Point point85 = null;
        Line line86 = new Line(point84, point85);
        boolean b87 = line83.parallel(line86);
        Point point88 = null;
        Line line89 = line83.rotate(point88);
        Parabola parabola90 = new Parabola(point48, point79, line83);
        point79.Mirror("hi!");
        double d93 = point79.y;
        boolean b94 = point42.equals((java.lang.Object) point79);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line18", line45.equals(line18) ? line45.hashCode() == line18.hashCode() : true);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test280");
        Point point0 = null;
        Point point3 = new Point((double) ' ', (double) 100L);
        double d4 = point3.x;
        double d5 = point3.y;
        Vector vector7 = new Vector(point3, (java.lang.Integer) 0);
        Point point8 = null;
        Point point9 = null;
        Line line10 = new Line(point8, point9);
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        Point point20 = line16.point1;
        boolean b21 = line10.equals((java.lang.Object) line16);
        Point point22 = null;
        Point point23 = null;
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point27 = null;
        Point point28 = null;
        Line line29 = new Line(point27, point28);
        boolean b30 = line26.parallel(line29);
        Parabola parabola31 = new Parabola(point22, point23, line26);
        Line line32 = parabola31.FindCenter();
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Parabola parabola42 = new Parabola(point33, point34, line37);
        Line line43 = parabola42.FindCenter();
        boolean b45 = parabola42.equals((java.lang.Object) 0.0f);
        boolean b46 = parabola31.equals((java.lang.Object) b45);
        Point point49 = new Point((double) ' ', (double) 100L);
        parabola31.vertex = point49;
        Line line51 = line10.rotate(point49);
        Parabola parabola52 = new Parabola(point0, point3, line51);
        Point point53 = parabola52.vertex;
        Point point54 = parabola52.vertex;
        Line line55 = parabola52.FindCenter();
        Point point58 = new Point((double) ' ', (double) 100L);
        double d59 = point58.x;
        double d60 = point58.y;
        double d61 = point58.y;
        point58.Mirror("");
        Point point66 = new Point((double) ' ', (double) 100L);
        double d67 = point66.x;
        double d68 = point66.y;
        double d69 = point66.y;
        point66.y = (short) -1;
        point66.x = (-1.0d);
        Line line74 = new Line(point58, point66);
        parabola52.vertex = point58;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line16 and line74", line16.equals(line74) ? line16.hashCode() == line74.hashCode() : true);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test281");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.focus;
        Point point22 = parabola9.focus;
        parabola9.Mirror();
        Point point24 = null;
        Point point25 = null;
        Line line26 = new Line(point24, point25);
        Point point29 = new Point((double) ' ', (double) 100L);
        double d30 = point29.x;
        double d31 = point29.y;
        double d32 = point29.x;
        double d33 = point29.x;
        Line line34 = line26.rotate(point29);
        Point point35 = null;
        Vector vector37 = new Vector(point35, (java.lang.Integer) (-1));
        int i38 = vector37.degrees;
        Point point41 = new Point((double) ' ', (double) 100L);
        point41.Mirror("");
        double d44 = point41.x;
        vector37.origin = point41;
        Point point46 = vector37.origin;
        double d47 = point46.y;
        line34.point2 = point46;
        parabola9.directrix = line34;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line17 and line34", line17.equals(line34) ? line17.hashCode() == line34.hashCode() : true);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test282");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        Point point11 = null;
        Point point12 = null;
        Line line13 = new Line(point11, point12);
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        boolean b17 = line13.parallel(line16);
        Point point18 = null;
        line16.point1 = point18;
        parabola9.directrix = line16;
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.y;
        Vector vector27 = new Vector(point24, (java.lang.Integer) 0);
        parabola9.vertex = point24;
        parabola9.Mirror();
        Point point32 = new Point((double) (short) 10, (double) (short) -1);
        parabola9.focus = point32;
        Line line34 = parabola9.FindCenter();
        Point point35 = null;
        Point point36 = null;
        Line line37 = new Line(point35, point36);
        Point point38 = null;
        Point point39 = null;
        Line line40 = new Line(point38, point39);
        boolean b41 = line37.parallel(line40);
        Point point42 = null;
        line40.point1 = point42;
        Point point44 = null;
        Point point45 = null;
        Line line46 = new Line(point44, point45);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        boolean b50 = line46.parallel(line49);
        boolean b51 = line40.perpendicular(line46);
        Point point52 = line40.point1;
        Point point55 = new Point((double) ' ', (double) 100L);
        double d56 = point55.x;
        double d57 = point55.y;
        double d58 = point55.x;
        line40.point2 = point55;
        Point point60 = line40.point1;
        Point point61 = line40.point2;
        boolean b62 = line34.equals((java.lang.Object) line40);
        Point point63 = null;
        Point point64 = null;
        Point point65 = null;
        Point point66 = null;
        Line line67 = new Line(point65, point66);
        Point point68 = null;
        Point point69 = null;
        Line line70 = new Line(point68, point69);
        boolean b71 = line67.parallel(line70);
        Parabola parabola72 = new Parabola(point63, point64, line67);
        Point point73 = parabola72.vertex;
        Point point74 = null;
        Point point75 = null;
        Line line76 = new Line(point74, point75);
        Point point77 = null;
        Point point78 = null;
        Line line79 = new Line(point77, point78);
        boolean b80 = line76.parallel(line79);
        Point point81 = null;
        line79.point1 = point81;
        parabola72.directrix = line79;
        Point point84 = parabola72.vertex;
        Point point87 = new Point((double) ' ', (double) 100L);
        double d88 = point87.y;
        Vector vector90 = new Vector(point87, (java.lang.Integer) 0);
        parabola72.vertex = point87;
        parabola72.Mirror();
        Point point95 = new Point((double) (short) 10, (double) (short) -1);
        parabola72.focus = point95;
        line40.point2 = point95;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line70 and line34", line70.equals(line34) ? line70.hashCode() == line34.hashCode() : true);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test283");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Line line11 = parabola9.FindCenter();
        Point point14 = new Point((double) ' ', (double) 100L);
        double d15 = point14.x;
        double d16 = point14.y;
        double d17 = point14.x;
        parabola9.vertex = point14;
        Point point21 = new Point((double) 10.0f, (double) 0);
        parabola9.focus = point21;
        Line line23 = parabola9.directrix;
        Point point26 = new Point((double) ' ', (double) 100L);
        double d27 = point26.x;
        double d28 = point26.y;
        double d29 = point26.y;
        point26.Mirror("");
        Point point32 = null;
        Point point33 = null;
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        Point point37 = null;
        Point point38 = null;
        Line line39 = new Line(point37, point38);
        boolean b40 = line36.parallel(line39);
        Parabola parabola41 = new Parabola(point32, point33, line36);
        Point point42 = parabola41.vertex;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        parabola41.directrix = line48;
        Point point53 = null;
        Line line54 = line48.rotate(point53);
        Point point55 = null;
        Point point56 = null;
        Line line57 = new Line(point55, point56);
        Point point58 = null;
        Point point59 = null;
        Line line60 = new Line(point58, point59);
        boolean b61 = line57.parallel(line60);
        Point point62 = null;
        Line line63 = line57.rotate(point62);
        boolean b64 = line54.perpendicular(line63);
        Point point67 = new Point((double) ' ', (double) 100L);
        Line line68 = line54.rotate(point67);
        Point point69 = null;
        Point point70 = null;
        Line line71 = new Line(point69, point70);
        Point point72 = null;
        Point point73 = null;
        Line line74 = new Line(point72, point73);
        boolean b75 = line71.parallel(line74);
        Point point76 = null;
        Line line77 = line71.rotate(point76);
        boolean b78 = line68.parallel(line77);
        boolean b79 = point26.equals((java.lang.Object) line77);
        line23.point2 = point26;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line7 and line23", line7.equals(line23) ? line7.hashCode() == line23.hashCode() : true);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test284");
        Point point2 = new Point((double) ' ', (double) 100L);
        double d3 = point2.x;
        double d4 = point2.y;
        Vector vector6 = new Vector(point2, (java.lang.Integer) 0);
        vector6.degrees = (byte) 1;
        int i9 = vector6.degrees;
        Point point10 = null;
        Point point11 = null;
        Line line12 = new Line(point10, point11);
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        boolean b16 = line12.parallel(line15);
        Point point17 = null;
        line15.point1 = point17;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        boolean b26 = line15.perpendicular(line21);
        Point point27 = line15.point1;
        Point point28 = null;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Parabola parabola37 = new Parabola(point28, point29, line32);
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Point point48 = parabola47.vertex;
        Point point49 = null;
        Point point50 = null;
        Line line51 = new Line(point49, point50);
        Point point52 = null;
        Point point53 = null;
        Line line54 = new Line(point52, point53);
        boolean b55 = line51.parallel(line54);
        Point point56 = null;
        line54.point1 = point56;
        parabola47.directrix = line54;
        Point point59 = null;
        Line line60 = line54.rotate(point59);
        boolean b61 = line32.perpendicular(line60);
        boolean b62 = line15.parallel(line60);
        boolean b63 = vector6.equals((java.lang.Object) line15);
        Point point66 = new Point((double) ' ', (double) 100L);
        double d67 = point66.x;
        double d68 = point66.y;
        double d69 = point66.y;
        point66.Mirror("");
        Point point74 = new Point((double) ' ', (double) 100L);
        double d75 = point74.x;
        double d76 = point74.y;
        double d77 = point74.y;
        point74.y = (short) -1;
        point74.x = (-1.0d);
        Line line82 = new Line(point66, point74);
        boolean b83 = vector6.equals((java.lang.Object) point66);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line45 and line82", line45.equals(line82) ? line45.hashCode() == line82.hashCode() : true);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test285");
        Point point0 = null;
        Vector vector2 = new Vector(point0, (java.lang.Integer) (-1));
        Point point3 = vector2.origin;
        boolean b5 = vector2.equals((java.lang.Object) (byte) 1);
        Point point6 = vector2.origin;
        Point point7 = null;
        Vector vector9 = new Vector(point7, (java.lang.Integer) (-1));
        Point point10 = vector9.origin;
        boolean b12 = vector9.equals((java.lang.Object) (byte) 1);
        Point point13 = vector9.origin;
        boolean b15 = vector9.equals((java.lang.Object) (-1.0f));
        boolean b16 = vector2.equals((java.lang.Object) vector9);
        Point point17 = null;
        Point point18 = null;
        Point point19 = null;
        Point point20 = null;
        Line line21 = new Line(point19, point20);
        Point point22 = null;
        Point point23 = null;
        Line line24 = new Line(point22, point23);
        boolean b25 = line21.parallel(line24);
        Parabola parabola26 = new Parabola(point17, point18, line21);
        Point point27 = parabola26.vertex;
        parabola26.Mirror();
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.y;
        point31.Mirror("");
        parabola26.vertex = point31;
        Line line38 = parabola26.FindCenter();
        Point point39 = parabola26.vertex;
        vector2.origin = point39;
        Point point43 = new Point((double) ' ', (double) 100L);
        double d44 = point43.y;
        Vector vector46 = new Vector(point43, (java.lang.Integer) 0);
        point43.Mirror("hi!");
        double d49 = point43.x;
        Line line50 = new Line(point39, point43);
        Point point51 = null;
        Point point52 = null;
        Point point53 = null;
        Point point54 = null;
        Line line55 = new Line(point53, point54);
        Point point56 = null;
        Point point57 = null;
        Line line58 = new Line(point56, point57);
        boolean b59 = line55.parallel(line58);
        Parabola parabola60 = new Parabola(point51, point52, line55);
        Line line61 = parabola60.FindCenter();
        Line line62 = parabola60.FindCenter();
        Point point65 = new Point((double) ' ', (double) 100L);
        double d66 = point65.x;
        double d67 = point65.y;
        double d68 = point65.x;
        parabola60.vertex = point65;
        Point point72 = new Point((double) ' ', (double) 100L);
        point72.y = 10.0d;
        Point point75 = null;
        Point point76 = null;
        Line line77 = new Line(point75, point76);
        Point point78 = null;
        Point point79 = null;
        Line line80 = new Line(point78, point79);
        boolean b81 = line77.parallel(line80);
        Point point82 = null;
        line80.point1 = point82;
        Point point84 = null;
        line80.point1 = point84;
        Parabola parabola86 = new Parabola(point65, point72, line80);
        point72.y = 1.0d;
        Line line89 = line50.rotate(point72);
        Point point90 = line50.point2;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line21 and line89", line21.equals(line89) ? line21.hashCode() == line89.hashCode() : true);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test286");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = null;
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        Point point15 = null;
        Point point16 = null;
        Line line17 = new Line(point15, point16);
        boolean b18 = line14.parallel(line17);
        Parabola parabola19 = new Parabola(point10, point11, line14);
        boolean b20 = parabola9.equals((java.lang.Object) point11);
        Point point21 = parabola9.vertex;
        Point point24 = new Point((double) ' ', (double) 100L);
        double d25 = point24.x;
        double d26 = point24.y;
        double d27 = point24.x;
        parabola9.vertex = point24;
        Point point31 = new Point((double) ' ', (double) 100L);
        double d32 = point31.x;
        double d33 = point31.y;
        double d34 = point31.x;
        double d35 = point31.y;
        point31.Mirror("hi!");
        parabola9.focus = point31;
        Point point39 = parabola9.vertex;
        double d40 = point39.y;
        double d41 = point39.y;
        double d42 = point39.y;
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        Point point46 = null;
        Point point47 = null;
        Line line48 = new Line(point46, point47);
        boolean b49 = line45.parallel(line48);
        Point point50 = null;
        line48.point1 = point50;
        Point point52 = null;
        line48.point1 = point52;
        java.lang.Object obj54 = null;
        boolean b55 = line48.equals(obj54);
        Point point58 = new Point((double) 10L, (double) ' ');
        point58.y = 0.0d;
        double d61 = point58.y;
        line48.point2 = point58;
        Line line63 = new Line(point39, point58);
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line17 and line48", line17.equals(line48) ? line17.hashCode() == line48.hashCode() : true);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test287");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Point point12 = parabola9.focus;
        Line line13 = parabola9.directrix;
        Point point14 = null;
        Point point15 = null;
        Line line16 = new Line(point14, point15);
        Point point17 = null;
        Point point18 = null;
        Line line19 = new Line(point17, point18);
        boolean b20 = line16.parallel(line19);
        Point point21 = null;
        line19.point1 = point21;
        Point point23 = null;
        line19.point1 = point23;
        Point point25 = line19.point1;
        parabola9.directrix = line19;
        Point point27 = parabola9.vertex;
        Line line28 = parabola9.FindCenter();
        Line line29 = parabola9.directrix;
        Point point30 = null;
        Point point31 = null;
        Line line32 = new Line(point30, point31);
        Point point33 = null;
        Point point34 = null;
        Line line35 = new Line(point33, point34);
        boolean b36 = line32.parallel(line35);
        Point point37 = null;
        line35.point1 = point37;
        Point point39 = null;
        Point point40 = null;
        Line line41 = new Line(point39, point40);
        Point point42 = null;
        Point point43 = null;
        Line line44 = new Line(point42, point43);
        boolean b45 = line41.parallel(line44);
        boolean b46 = line35.perpendicular(line41);
        Point point47 = null;
        Point point48 = null;
        Line line49 = new Line(point47, point48);
        Point point50 = null;
        Point point51 = null;
        Line line52 = new Line(point50, point51);
        boolean b53 = line49.parallel(line52);
        boolean b54 = line41.perpendicular(line52);
        Point point55 = null;
        Point point56 = null;
        Point point57 = null;
        Point point58 = null;
        Line line59 = new Line(point57, point58);
        Point point60 = null;
        Point point61 = null;
        Line line62 = new Line(point60, point61);
        boolean b63 = line59.parallel(line62);
        Parabola parabola64 = new Parabola(point55, point56, line59);
        Line line65 = parabola64.FindCenter();
        Line line66 = parabola64.FindCenter();
        Point point67 = parabola64.vertex;
        Point point68 = null;
        Vector vector70 = new Vector(point68, (java.lang.Integer) (-1));
        Point point71 = vector70.origin;
        boolean b73 = vector70.equals((java.lang.Object) (byte) 1);
        boolean b74 = parabola64.equals((java.lang.Object) vector70);
        boolean b76 = parabola64.equals((java.lang.Object) 0.0f);
        Point point79 = new Point((double) (byte) 0, 35.0d);
        parabola64.focus = point79;
        Line line81 = line52.rotate(point79);
        line29.point1 = point79;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line44 and line29", line44.equals(line29) ? line44.hashCode() == line29.hashCode() : true);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test288");
        Point point0 = null;
        Point point1 = null;
        Line line2 = new Line(point0, point1);
        Point point3 = null;
        Point point4 = null;
        Line line5 = new Line(point3, point4);
        boolean b6 = line2.parallel(line5);
        Point point7 = null;
        line5.point1 = point7;
        Point point9 = null;
        Point point10 = null;
        Line line11 = new Line(point9, point10);
        Point point12 = null;
        Point point13 = null;
        Line line14 = new Line(point12, point13);
        boolean b15 = line11.parallel(line14);
        boolean b16 = line5.perpendicular(line11);
        Point point17 = line5.point1;
        Point point20 = new Point((double) ' ', (double) 100L);
        double d21 = point20.x;
        double d22 = point20.y;
        double d23 = point20.x;
        line5.point2 = point20;
        Point point25 = line5.point1;
        Point point26 = line5.point2;
        Point point29 = new Point((double) '#', (double) ' ');
        double d30 = point29.x;
        line5.point2 = point29;
        point29.x = (byte) 10;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line2 and line5", line2.equals(line5) ? line2.hashCode() == line5.hashCode() : true);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test289");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Point point10 = parabola9.vertex;
        parabola9.Mirror();
        Line line12 = parabola9.directrix;
        Line line13 = parabola9.directrix;
        Point point16 = new Point((double) ' ', (double) 100L);
        double d17 = point16.x;
        double d18 = point16.y;
        Vector vector20 = new Vector(point16, (java.lang.Integer) 0);
        vector20.degrees = (byte) 1;
        int i23 = vector20.degrees;
        int i24 = vector20.degrees;
        Point point27 = new Point((double) (byte) 1, (double) 100L);
        Point point28 = null;
        Point point29 = null;
        Line line30 = new Line(point28, point29);
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        boolean b34 = line30.parallel(line33);
        Point point35 = null;
        Line line36 = line30.rotate(point35);
        point27.Mirror(line36);
        Point point38 = null;
        Point point39 = null;
        Point point40 = null;
        Point point41 = null;
        Line line42 = new Line(point40, point41);
        Point point43 = null;
        Point point44 = null;
        Line line45 = new Line(point43, point44);
        boolean b46 = line42.parallel(line45);
        Parabola parabola47 = new Parabola(point38, point39, line42);
        Line line48 = parabola47.FindCenter();
        Line line49 = parabola47.FindCenter();
        Point point52 = new Point((double) ' ', (double) 100L);
        double d53 = point52.x;
        double d54 = point52.y;
        double d55 = point52.x;
        parabola47.vertex = point52;
        Vector vector58 = new Vector(point52, (java.lang.Integer) 0);
        Point point59 = null;
        Point point60 = null;
        Point point61 = null;
        Point point62 = null;
        Line line63 = new Line(point61, point62);
        Point point64 = null;
        Point point65 = null;
        Line line66 = new Line(point64, point65);
        boolean b67 = line63.parallel(line66);
        Parabola parabola68 = new Parabola(point59, point60, line63);
        Point point69 = parabola68.vertex;
        parabola68.Mirror();
        Point point73 = new Point((double) ' ', (double) 100L);
        double d74 = point73.x;
        double d75 = point73.y;
        double d76 = point73.y;
        point73.Mirror("");
        parabola68.vertex = point73;
        Line line80 = parabola68.FindCenter();
        parabola68.Mirror();
        Point point84 = new Point((double) ' ', (double) 100L);
        double d85 = point84.y;
        Vector vector87 = new Vector(point84, (java.lang.Integer) 0);
        point84.Mirror("");
        boolean b90 = parabola68.equals((java.lang.Object) point84);
        vector58.origin = point84;
        Line line92 = line36.rotate(point84);
        vector20.origin = point84;
        point84.y = (-1L);
        line13.point2 = point84;
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line33 and line4", line33.equals(line4) ? line33.hashCode() == line4.hashCode() : true);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test290");
        Point point0 = null;
        Point point1 = null;
        Point point2 = null;
        Point point3 = null;
        Line line4 = new Line(point2, point3);
        Point point5 = null;
        Point point6 = null;
        Line line7 = new Line(point5, point6);
        boolean b8 = line4.parallel(line7);
        Parabola parabola9 = new Parabola(point0, point1, line4);
        Line line10 = parabola9.FindCenter();
        Point point11 = null;
        Point point12 = null;
        Point point13 = null;
        Point point14 = null;
        Line line15 = new Line(point13, point14);
        Point point16 = null;
        Point point17 = null;
        Line line18 = new Line(point16, point17);
        boolean b19 = line15.parallel(line18);
        Parabola parabola20 = new Parabola(point11, point12, line15);
        Line line21 = parabola20.FindCenter();
        boolean b23 = parabola20.equals((java.lang.Object) 0.0f);
        boolean b24 = parabola9.equals((java.lang.Object) b23);
        Point point27 = new Point((double) ' ', (double) 100L);
        parabola9.vertex = point27;
        Point point29 = null;
        Point point30 = null;
        Point point31 = null;
        Point point32 = null;
        Line line33 = new Line(point31, point32);
        Point point34 = null;
        Point point35 = null;
        Line line36 = new Line(point34, point35);
        boolean b37 = line33.parallel(line36);
        Parabola parabola38 = new Parabola(point29, point30, line33);
        Point point39 = parabola38.focus;
        Point point42 = new Point((double) ' ', (double) 100L);
        double d43 = point42.y;
        parabola38.focus = point42;
        Line line45 = new Line(point27, point42);
        Point point46 = line45.point2;
        Point point47 = line45.point2;
        point47.Mirror("hi!");
        org.junit.Assert.assertTrue("Contract failed: equals-hashcode on line15 and line45", line15.equals(line45) ? line15.hashCode() == line45.hashCode() : true);
    }
}

